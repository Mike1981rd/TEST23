// <auto-generated />
using System;
using System.Collections.Generic;
using AuroraPOS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AuroraPOS.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250504042930_SeedAdminUserAndRole_WithPin")]
    partial class SeedAdminUserAndRoleWithPin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AreaStation", b =>
                {
                    b.Property<long>("AreasID")
                        .HasColumnType("bigint");

                    b.Property<long>("StationsID")
                        .HasColumnType("bigint");

                    b.HasKey("AreasID", "StationsID");

                    b.HasIndex("StationsID");

                    b.ToTable("AreaStation");
                });

            modelBuilder.Entity("AuroraPOS.Models.Account", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("AccountDescriptionID")
                        .HasColumnType("bigint");

                    b.Property<long>("AccountTypeID")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreditOrDebit")
                        .HasColumnType("integer");

                    b.Property<List<int>>("Defaults")
                        .HasColumnType("integer[]");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("AccountDescriptionID");

                    b.HasIndex("AccountTypeID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("AuroraPOS.Models.AccountDescription", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("AccountDescriptions");
                });

            modelBuilder.Entity("AuroraPOS.Models.AccountItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("AccountID")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("ItemID")
                        .HasColumnType("bigint");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<int>("Target")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("AccountID");

                    b.ToTable("AccountItems");
                });

            modelBuilder.Entity("AuroraPOS.Models.AccountType", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("AccountTypes");
                });

            modelBuilder.Entity("AuroraPOS.Models.Answer", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<bool>("Comentario")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("FixedPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("ForcedQuestionID")
                        .HasColumnType("integer");

                    b.Property<bool>("HasDivisor")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasQty")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPreSelected")
                        .HasColumnType("boolean");

                    b.Property<bool>("MatchSize")
                        .HasColumnType("boolean");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<int>("PriceType")
                        .HasColumnType("integer");

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<long>("QuestionID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("RollPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("ServingSizeID")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.HasIndex("QuestionID");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("AuroraPOS.Models.Area", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("BackColor")
                        .HasColumnType("text");

                    b.Property<string>("BackImage")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Height")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Width")
                        .HasColumnType("numeric");

                    b.HasKey("ID");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("AuroraPOS.Models.AreaObject", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("AreaID")
                        .HasColumnType("bigint");

                    b.Property<string>("BackColor")
                        .HasColumnType("text");

                    b.Property<string>("BackImage")
                        .HasColumnType("text");

                    b.Property<string>("BorderColor")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Height")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ObjectType")
                        .HasColumnType("integer");

                    b.Property<decimal>("PositionX")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PositionY")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Radius")
                        .HasColumnType("numeric");

                    b.Property<int>("SeatCount")
                        .HasColumnType("integer");

                    b.Property<int>("Shape")
                        .HasColumnType("integer");

                    b.Property<string>("TextColor")
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Width")
                        .HasColumnType("numeric");

                    b.HasKey("ID");

                    b.HasIndex("AreaID");

                    b.ToTable("AreaObjects");
                });

            modelBuilder.Entity("AuroraPOS.Models.Brand", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSystemDefault")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("AuroraPOS.Models.CancelReason", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPrintAccount")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPrintOverrideChannel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReduceInventory")
                        .HasColumnType("boolean");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("CancelReasons");
                });

            modelBuilder.Entity("AuroraPOS.Models.CanceledOrderItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("ItemID")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<long>("ReasonID")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("ItemID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ReasonID");

                    b.ToTable("CanceledItems");
                });

            modelBuilder.Entity("AuroraPOS.Models.Category", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("CourseID")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("GroupID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Plato")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("GroupID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AuroraPOS.Models.CloseDrawer", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Denominations")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("StationID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TipDifference")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TipTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TransDifference")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TransTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("CloseDrawers");
                });

            modelBuilder.Entity("AuroraPOS.Models.Course", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("AuroraPOS.Models.Customer", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("Address1")
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreditDays")
                        .HasColumnType("integer");

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("numeric");

                    b.Property<long?>("DeliveryZoneID")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<string>("RNC")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("VoucherID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("VoucherID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("AuroraPOS.Models.DamageArticle", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long?>("ArticleID")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DamageDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ItemType")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Qty")
                        .HasColumnType("numeric");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<long?>("SubRecipeID")
                        .HasColumnType("bigint");

                    b.Property<string>("UnitName")
                        .HasColumnType("text");

                    b.Property<int>("UnitNum")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("WarehouseID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("ArticleID");

                    b.HasIndex("SubRecipeID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("DamageArticles");
                });

            modelBuilder.Entity("AuroraPOS.Models.Delivery", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("Address1")
                        .HasColumnType("text");

                    b.Property<string>("Adress2")
                        .HasColumnType("text");

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("CustomerID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeliveryCarrierID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DeliveryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("DeliveryZoneID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StatusUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("DeliveryCarrierID");

                    b.HasIndex("DeliveryZoneID");

                    b.HasIndex("OrderID");

                    b.ToTable("Deliverys");
                });

            modelBuilder.Entity("AuroraPOS.Models.DeliveryCarrier", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("DeliveryCarriers");
                });

            modelBuilder.Entity("AuroraPOS.Models.DeliveryZone", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Time")
                        .HasColumnType("numeric");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("DeliveryZones");
                });

            modelBuilder.Entity("AuroraPOS.Models.Denomination", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("Denominations");
                });

            modelBuilder.Entity("AuroraPOS.Models.Discount", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DiscountAmountType")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("AuroraPOS.Models.DiscountItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("AmountType")
                        .HasColumnType("integer");

                    b.Property<decimal>("BaseAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DividerId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("ItemID")
                        .HasColumnType("bigint");

                    b.Property<int>("ItemType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrderItemID")
                        .HasColumnType("bigint");

                    b.Property<int>("TargetType")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("OrderItemID");

                    b.ToTable("DiscountItems");
                });

            modelBuilder.Entity("AuroraPOS.Models.DividerItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClientName")
                        .HasColumnType("text");

                    b.Property<long>("ComprebanteId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DividerNum")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.ToTable("DividerItem");
                });

            modelBuilder.Entity("AuroraPOS.Models.ErrorOut", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("ErrorOuts");
                });

            modelBuilder.Entity("AuroraPOS.Models.GeneralMedia", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("DamageArticleID")
                        .HasColumnType("bigint");

                    b.Property<int>("DestEntity")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsURL")
                        .HasColumnType("boolean");

                    b.Property<long>("ItemID")
                        .HasColumnType("bigint");

                    b.Property<string>("Src")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("URL")
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("DamageArticleID");

                    b.ToTable("Medias");
                });

            modelBuilder.Entity("AuroraPOS.Models.Group", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("AuroraPOS.Models.InventoryItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("Barcode")
                        .HasColumnType("text");

                    b.Property<long?>("BrandID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CategoryID")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DefaultUnitNum")
                        .HasColumnType("integer");

                    b.Property<int>("DepleteCondition")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<double>("MaximumQuantity")
                        .HasColumnType("double precision");

                    b.Property<int>("MaximumUnit")
                        .HasColumnType("integer");

                    b.Property<double>("MinimumQuantity")
                        .HasColumnType("double precision");

                    b.Property<int>("MinimumUnit")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Performance")
                        .HasColumnType("double precision");

                    b.Property<string>("Photo")
                        .HasColumnType("text");

                    b.Property<long>("PrimarySupplier")
                        .HasColumnType("bigint");

                    b.Property<int>("SaftyStock")
                        .HasColumnType("integer");

                    b.Property<int>("ScannerUnit")
                        .HasColumnType("integer");

                    b.Property<long?>("SubCategoryID")
                        .HasColumnType("bigint");

                    b.Property<long?>("TaxID")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("WarehouseID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("BrandID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("SubCategoryID");

                    b.HasIndex("TaxID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("AuroraPOS.Models.ItemUnit", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CodeBar")
                        .HasColumnType("text");

                    b.Property<decimal>("Cost")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("InventoryItemID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<decimal>("PayItem")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<long?>("SubRecipeID")
                        .HasColumnType("bigint");

                    b.Property<long>("UnitID")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("InventoryItemID");

                    b.HasIndex("SubRecipeID");

                    b.HasIndex("UnitID");

                    b.ToTable("ItemUnits");
                });

            modelBuilder.Entity("AuroraPOS.Models.Kitchen", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PrinterID")
                        .HasColumnType("bigint");

                    b.Property<List<long>>("Stations")
                        .IsRequired()
                        .HasColumnType("bigint[]");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("Kitchen");
                });

            modelBuilder.Entity("AuroraPOS.Models.KitchenOrder", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("CompleteTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("KitchenID")
                        .HasColumnType("bigint");

                    b.Property<long>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("KitchenOrder");
                });

            modelBuilder.Entity("AuroraPOS.Models.KitchenOrderItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("CompleteTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("KitchenOrderID")
                        .HasColumnType("bigint");

                    b.Property<long>("OrderItemID")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("KitchenOrderItem");
                });

            modelBuilder.Entity("AuroraPOS.Models.Menu", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Mode")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("AuroraPOS.Models.MenuCategory", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("BackColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("MediaID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("TextColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("MediaID");

                    b.ToTable("MenuCategories");
                });

            modelBuilder.Entity("AuroraPOS.Models.MenuGroup", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("BackColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("MediaID")
                        .HasColumnType("bigint");

                    b.Property<long?>("MenuID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("TextColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("MediaID");

                    b.HasIndex("MenuID");

                    b.ToTable("MenuGroups");
                });

            modelBuilder.Entity("AuroraPOS.Models.MenuProduct", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("CategoryID")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("GroupID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("MenuCategoryID")
                        .HasColumnType("bigint");

                    b.Property<long?>("MenuGroupID")
                        .HasColumnType("bigint");

                    b.Property<long>("MenuID")
                        .HasColumnType("bigint");

                    b.Property<long?>("MenuSubCategoryID")
                        .HasColumnType("bigint");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<long>("SubCategoryID")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("MenuCategoryID");

                    b.HasIndex("MenuGroupID");

                    b.HasIndex("MenuSubCategoryID");

                    b.HasIndex("ProductID");

                    b.ToTable("MenuProducts");
                });

            modelBuilder.Entity("AuroraPOS.Models.MenuSubCategory", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("BackColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("MediaID")
                        .HasColumnType("bigint");

                    b.Property<long?>("MenuCategoryID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("TextColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("MediaID");

                    b.HasIndex("MenuCategoryID");

                    b.ToTable("MenuSubCategoris");
                });

            modelBuilder.Entity("AuroraPOS.Models.MoveArticle", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("FromWarehouseID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("MoveDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<long>("ToWarehouseID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("FromWarehouseID");

                    b.HasIndex("ToWarehouseID");

                    b.ToTable("MoveArticles");
                });

            modelBuilder.Entity("AuroraPOS.Models.MoveItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("ItemID")
                        .HasColumnType("bigint");

                    b.Property<int>("ItemType")
                        .HasColumnType("integer");

                    b.Property<long?>("MoveArticleID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Qty")
                        .HasColumnType("numeric");

                    b.Property<int>("UnitNum")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("MoveArticleID");

                    b.ToTable("MoveArticleItems");
                });

            modelBuilder.Entity("AuroraPOS.Models.Order", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long?>("AreaID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<string>("ClientName")
                        .HasColumnType("text");

                    b.Property<string>("ComprobanteName")
                        .HasColumnType("text");

                    b.Property<string>("ComprobanteNumber")
                        .HasColumnType("text");

                    b.Property<long>("ComprobantesID")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConduceOrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Delivery")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Discount")
                        .HasColumnType("numeric");

                    b.Property<long?>("Factura")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConduce")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDivider")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int>("OrderMode")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OrderType")
                        .HasColumnType("integer");

                    b.Property<decimal>("PayAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("integer");

                    b.Property<int>("Person")
                        .HasColumnType("integer");

                    b.Property<long?>("PrepareTypeID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PromesaPago")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Propina")
                        .HasColumnType("numeric");

                    b.Property<long>("StationID")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("numeric");

                    b.Property<long?>("TableID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Tax")
                        .HasColumnType("numeric");

                    b.Property<string>("Terms")
                        .HasColumnType("text");

                    b.Property<decimal>("Tip")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("WaiterName")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("AreaID");

                    b.HasIndex("PrepareTypeID");

                    b.HasIndex("StationID");

                    b.HasIndex("TableID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AuroraPOS.Models.OrderComprobante", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("ComprobanteName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ComprobanteNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("VoucherId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("OrderComprobantes");
                });

            modelBuilder.Entity("AuroraPOS.Models.OrderItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<decimal>("AnswerCosto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AnswerVenta")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Costo")
                        .HasColumnType("numeric");

                    b.Property<string>("Course")
                        .HasColumnType("text");

                    b.Property<long>("CourseID")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Discount")
                        .HasColumnType("numeric");

                    b.Property<int>("DividerNum")
                        .HasColumnType("integer");

                    b.Property<bool>("HasPromotion")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("HoldTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("MenuProductID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<long>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Propina")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Qty")
                        .HasColumnType("numeric");

                    b.Property<long?>("SeatItemID")
                        .HasColumnType("bigint");

                    b.Property<int>("SeatNum")
                        .HasColumnType("integer");

                    b.Property<int>("ServingSizeID")
                        .HasColumnType("integer");

                    b.Property<string>("ServingSizeName")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Tax")
                        .HasColumnType("numeric");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.HasIndex("SeatItemID");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("AuroraPOS.Models.OrderTransaction", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<decimal>("AfterBalance")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("BeforeBalance")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Difference")
                        .HasColumnType("numeric");

                    b.Property<int>("DividerNum")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Memo")
                        .HasColumnType("text");

                    b.Property<string>("Method")
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<long?>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ReferenceId")
                        .HasColumnType("bigint");

                    b.Property<int>("SeatNum")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderTransactions");
                });

            modelBuilder.Entity("AuroraPOS.Models.PaymentMethod", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Tasa")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Tip")
                        .HasColumnType("numeric");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("AuroraPOS.Models.Permission", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DisplayValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GroupOrder")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("AuroraPOS.Models.Preference", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("Address1")
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Logo")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<string>("RNC")
                        .HasColumnType("text");

                    b.Property<string>("SecondCurrency")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<int>("StationLimit")
                        .HasColumnType("integer");

                    b.Property<decimal>("Tasa")
                        .HasColumnType("numeric");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("Preferences");
                });

            modelBuilder.Entity("AuroraPOS.Models.PrepareTypes", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("SinChofer")
                        .HasColumnType("boolean");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("PrepareTypes");
                });

            modelBuilder.Entity("AuroraPOS.Models.PrintJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HtmlContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("PrintedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PrinterName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PrintJobs");
                });

            modelBuilder.Entity("AuroraPOS.Models.Printer", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhysicalName")
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("Printers");
                });

            modelBuilder.Entity("AuroraPOS.Models.PrinterChannel", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("PrinterChannels");
                });

            modelBuilder.Entity("AuroraPOS.Models.PrinterTasks", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DivideNum")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Items")
                        .HasColumnType("text");

                    b.Property<long?>("ObjectID")
                        .HasColumnType("bigint");

                    b.Property<string>("PhysicalName")
                        .HasColumnType("text");

                    b.Property<int?>("SeatNum")
                        .HasColumnType("integer");

                    b.Property<long?>("StationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Status")
                        .HasColumnType("integer");

                    b.Property<long?>("SucursalId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("PrinterTasks");
                });

            modelBuilder.Entity("AuroraPOS.Models.Product", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("BackColor")
                        .HasColumnType("text");

                    b.Property<string>("Barcode")
                        .HasColumnType("text");

                    b.Property<long>("CategoryID")
                        .HasColumnType("bigint");

                    b.Property<long>("CourseID")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("HasServingSize")
                        .HasColumnType("boolean");

                    b.Property<decimal>("InventoryCount")
                        .HasColumnType("numeric");

                    b.Property<bool>("InventoryCountDownActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Photo")
                        .HasColumnType("text");

                    b.Property<List<decimal>>("Price")
                        .IsRequired()
                        .HasColumnType("numeric[]");

                    b.Property<string>("Printer")
                        .HasColumnType("text");

                    b.Property<decimal>("ProductCost")
                        .HasColumnType("numeric");

                    b.Property<long?>("SubCategoryID")
                        .HasColumnType("bigint");

                    b.Property<string>("TextColor")
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("SubCategoryID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AuroraPOS.Models.ProductRecipeItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("ItemID")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Qty")
                        .HasColumnType("numeric");

                    b.Property<int>("ServingSizeID")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("UnitNum")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductItems");
                });

            modelBuilder.Entity("AuroraPOS.Models.ProductServingSize", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<List<decimal>>("Price")
                        .IsRequired()
                        .HasColumnType("numeric[]");

                    b.Property<long?>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<long>("ServingSizeID")
                        .HasColumnType("bigint");

                    b.Property<string>("ServingSizeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductServingSize");
                });

            modelBuilder.Entity("AuroraPOS.Models.Promotion", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("AmountType")
                        .HasColumnType("integer");

                    b.Property<int>("ApplyType")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DiscountType")
                        .HasColumnType("integer");

                    b.Property<decimal>("Duration")
                        .HasColumnType("numeric");

                    b.Property<int>("EndOccurrence")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EveryCount")
                        .HasColumnType("integer");

                    b.Property<int>("FirstCount")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAllDay")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRecurNoEnd")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRecurring")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("RecurringStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("WeekDays")
                        .HasColumnType("text");

                    b.Property<int>("WeekNum")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("AuroraPOS.Models.PromotionTarget", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("Menu")
                        .HasColumnType("bigint");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductRange")
                        .HasColumnType("integer");

                    b.Property<long?>("PromotionID")
                        .HasColumnType("bigint");

                    b.Property<int>("ServingSizeID")
                        .HasColumnType("integer");

                    b.Property<long>("TargetId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("PromotionID");

                    b.ToTable("PromotionTargets");
                });

            modelBuilder.Entity("AuroraPOS.Models.Propina", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBarcodeExclude")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInArticle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInPurchaseOrder")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsKioskExclude")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsShipping")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsToGoExclude")
                        .HasColumnType("boolean");

                    b.Property<string>("PropinaName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("PropinaValue")
                        .HasColumnType("double precision");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("Propinas");
                });

            modelBuilder.Entity("AuroraPOS.Models.PropinaItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<bool>("BarcodeExclude")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExempt")
                        .HasColumnType("boolean");

                    b.Property<long?>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrderItemID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Percent")
                        .HasColumnType("numeric");

                    b.Property<long>("PropinaId")
                        .HasColumnType("bigint");

                    b.Property<bool>("ToGoExclude")
                        .HasColumnType("boolean");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("OrderItemID");

                    b.ToTable("PropinaItem");
                });

            modelBuilder.Entity("AuroraPOS.Models.PurchaseOrder", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal>("Discount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DiscountTotal")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiscountPercent")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiscountPercentItems")
                        .HasColumnType("boolean");

                    b.Property<string>("NCF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("integer");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("numeric");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("numeric");

                    b.Property<long>("SupplierID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TaxTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("WarehouseID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("SupplierID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("AuroraPOS.Models.PurchaseOrderItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Discount")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("ItemID")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchaseOrderID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Qty")
                        .HasColumnType("numeric");

                    b.Property<long?>("TaxID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("numeric");

                    b.Property<int>("UnitNum")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("ItemID");

                    b.HasIndex("PurchaseOrderID");

                    b.HasIndex("TaxID");

                    b.ToTable("PurchaseOrderItems");
                });

            modelBuilder.Entity("AuroraPOS.Models.Question", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<int>("FreeChoice")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAutomatic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsForced")
                        .HasColumnType("boolean");

                    b.Property<int>("MaxAnswer")
                        .HasColumnType("integer");

                    b.Property<int>("MinAnswer")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("AuroraPOS.Models.QuestionItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("AnswerID")
                        .HasColumnType("bigint");

                    b.Property<bool>("CanRoll")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Divisor")
                        .HasColumnType("integer");

                    b.Property<int>("FreeChoice")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPreSelect")
                        .HasColumnType("boolean");

                    b.Property<long>("OrderItemID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Qty")
                        .HasColumnType("numeric");

                    b.Property<int>("ServingSizeID")
                        .HasColumnType("integer");

                    b.Property<string>("ServingSizeName")
                        .HasColumnType("text");

                    b.Property<string>("SubDescription")
                        .HasColumnType("text");

                    b.Property<decimal>("SubPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("AnswerID");

                    b.HasIndex("OrderItemID");

                    b.ToTable("QuestionItems");
                });

            modelBuilder.Entity("AuroraPOS.Models.Reservation", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<int>("AreaID")
                        .HasColumnType("integer");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Cost")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Duration")
                        .HasColumnType("numeric");

                    b.Property<int>("GuestCount")
                        .HasColumnType("integer");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ReservationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StationID")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("TableID")
                        .HasColumnType("integer");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AuroraPOS.Models.Role", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Priority = 1,
                            RoleName = "Admin",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("AuroraPOS.Models.SeatItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClientName")
                        .HasColumnType("text");

                    b.Property<long>("ComprebanteId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("boolean");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("SeatNum")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("OrderId");

                    b.ToTable("SeatItems");
                });

            modelBuilder.Entity("AuroraPOS.Models.ServingSize", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("ServingSize");
                });

            modelBuilder.Entity("AuroraPOS.Models.SmartButton", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("BackColor")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAfterText")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsApplyPrice")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TextColor")
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("SmartButtons");
                });

            modelBuilder.Entity("AuroraPOS.Models.SmartButtonItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("ButtonID")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<long?>("QuestionID")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("ButtonID");

                    b.HasIndex("QuestionID");

                    b.ToTable("SmartButtonItems");
                });

            modelBuilder.Entity("AuroraPOS.Models.Station", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("AreaPrices")
                        .HasColumnType("text");

                    b.Property<string>("Bussiness")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IDSucursal")
                        .HasColumnType("integer");

                    b.Property<bool>("ImprimirPrecuentaDelivery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("MenuSelectID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrderMode")
                        .HasColumnType("integer");

                    b.Property<int?>("PrecioDelivery")
                        .HasColumnType("integer");

                    b.Property<int?>("PrepareTypeDefault")
                        .HasColumnType("integer");

                    b.Property<int>("PriceSelect")
                        .HasColumnType("integer");

                    b.Property<int>("PrintCopy")
                        .HasColumnType("integer");

                    b.Property<int>("SalesMode")
                        .HasColumnType("integer");

                    b.Property<string>("TypeOfSales")
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("MenuSelectID");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("AuroraPOS.Models.StationPrinterChannel", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("PrinterChannelID")
                        .HasColumnType("bigint");

                    b.Property<long?>("PrinterID")
                        .HasColumnType("bigint");

                    b.Property<long>("StationID")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("PrinterChannelID");

                    b.HasIndex("PrinterID");

                    b.HasIndex("StationID");

                    b.ToTable("StationPrinterChannel");
                });

            modelBuilder.Entity("AuroraPOS.Models.StationWarehouse", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("GroupID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("StationID")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("WarehouseID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("StationWarehouses");
                });

            modelBuilder.Entity("AuroraPOS.Models.SubCategory", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("CategoryID")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("ProductID");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("AuroraPOS.Models.SubRecipe", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("Barcode")
                        .HasColumnType("text");

                    b.Property<long?>("CategoryID")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<decimal>("MaximumQuantity")
                        .HasColumnType("numeric");

                    b.Property<int>("MaximumUnit")
                        .HasColumnType("integer");

                    b.Property<decimal>("MinimumQuantity")
                        .HasColumnType("numeric");

                    b.Property<int>("MinimumUnit")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SaftyStock")
                        .HasColumnType("integer");

                    b.Property<long?>("SubCategoryID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.Property<int>("UnitNumber")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("SubCategoryID");

                    b.ToTable("SubRecipes");
                });

            modelBuilder.Entity("AuroraPOS.Models.SubRecipeItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("FirstQty")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsArticle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<decimal>("ItemCost")
                        .HasColumnType("numeric");

                    b.Property<long>("ItemID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Qty")
                        .HasColumnType("numeric");

                    b.Property<long?>("SubRecipeID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("numeric");

                    b.Property<int>("UnitNum")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("SubRecipeID");

                    b.ToTable("SubRecipeItems");
                });

            modelBuilder.Entity("AuroraPOS.Models.SubRecipeProduction", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal>("EndQty")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Qty")
                        .HasColumnType("numeric");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<long>("SubRecipeID")
                        .HasColumnType("bigint");

                    b.Property<int>("UnitNum")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("WarehouseID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("SubRecipeID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("SubRecipeProductions");
                });

            modelBuilder.Entity("AuroraPOS.Models.Supplier", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<string>("CellPhone")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DeliveryTime")
                        .HasColumnType("integer");

                    b.Property<string>("Direction")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFormalSupplier")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTaxIncluded")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("RNC")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Seller")
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("AuroraPOS.Models.Tax", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBarcodeExclude")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInArticle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInPurchaseOrder")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsKioskExclude")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsShipping")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsToGoExclude")
                        .HasColumnType("boolean");

                    b.Property<string>("TaxName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("TaxValue")
                        .HasColumnType("double precision");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("VoucherID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("VoucherID");

                    b.ToTable("Taxs");
                });

            modelBuilder.Entity("AuroraPOS.Models.TaxItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<bool>("BarcodeExclude")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExempt")
                        .HasColumnType("boolean");

                    b.Property<long?>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrderItemID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Percent")
                        .HasColumnType("numeric");

                    b.Property<long>("TaxId")
                        .HasColumnType("bigint");

                    b.Property<bool>("ToGoExclude")
                        .HasColumnType("boolean");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("OrderItemID");

                    b.ToTable("TaxItem");
                });

            modelBuilder.Entity("AuroraPOS.Models.Unit", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("AuroraPOS.Models.User", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            Address = "",
                            City = "",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@aurora.com",
                            FullName = "Administrador",
                            IsActive = true,
                            IsDeleted = false,
                            Password = "admin123",
                            PhoneNumber = "0000000000",
                            Pin = "1234",
                            ProfileImage = "",
                            State = "",
                            Type = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Username = "admin",
                            ZipCode = ""
                        });
                });

            modelBuilder.Entity("AuroraPOS.Models.Voucher", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequireRNC")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Reorder")
                        .HasColumnType("numeric");

                    b.Property<int>("Secuencia")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("AuroraPOS.Models.Warehouse", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("WarehouseName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WarehouseNum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("AuroraPOS.Models.WarehouseStock", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("ItemType")
                        .HasColumnType("integer");

                    b.Property<decimal>("Qty")
                        .HasColumnType("numeric");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("WarehouseID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("WarehouseStocks");
                });

            modelBuilder.Entity("AuroraPOS.Models.WarehouseStockChangeHistory", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<decimal>("AfterBalance")
                        .HasColumnType("numeric");

                    b.Property<decimal>("BeforeBalance")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("ItemType")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Qty")
                        .HasColumnType("numeric");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<long>("ReasonId")
                        .HasColumnType("bigint");

                    b.Property<int>("ReasonType")
                        .HasColumnType("integer");

                    b.Property<int>("UnitNum")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("WarehouseID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("WarehouseStockChangeHistory");
                });

            modelBuilder.Entity("AuroraPOS.Models.WorkDay", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Day")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IDSucursal")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("WorkDay");
                });

            modelBuilder.Entity("AuroraPOS.Models.logs", b =>
                {
                    b.Property<int>("id_log")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_log"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ubicacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_log");

                    b.ToTable("logs");
                });

            modelBuilder.Entity("AuroraPOS.Models.t_formato_impresion_general", b =>
                {
                    b.Property<int>("f_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("f_id"));

                    b.Property<string>("f_archivo")
                        .HasColumnType("text");

                    b.Property<string>("f_archivo1")
                        .HasColumnType("text");

                    b.Property<string>("f_cometario")
                        .HasColumnType("text");

                    b.Property<string>("f_descripcion")
                        .HasColumnType("text");

                    b.Property<int?>("f_formato_impresion")
                        .HasColumnType("integer");

                    b.Property<bool?>("f_impresion_por_pantalla")
                        .HasColumnType("boolean");

                    b.Property<string>("f_impresora")
                        .HasColumnType("text");

                    b.Property<int?>("f_limite")
                        .HasColumnType("integer");

                    b.Property<string>("f_nombre_archivo")
                        .HasColumnType("text");

                    b.Property<int?>("f_orden")
                        .HasColumnType("integer");

                    b.Property<int?>("f_secuencia_no_control")
                        .HasColumnType("integer");

                    b.HasKey("f_id");

                    b.ToTable("t_formato_impresion_general");
                });

            modelBuilder.Entity("AuroraPOS.Models.t_formato_impresion_reportes", b =>
                {
                    b.Property<int>("f_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("f_id"));

                    b.Property<bool?>("f_activo")
                        .HasColumnType("boolean");

                    b.Property<string>("f_archivo")
                        .HasColumnType("text");

                    b.Property<string>("f_archivo1")
                        .HasColumnType("text");

                    b.Property<string>("f_cometario")
                        .HasColumnType("text");

                    b.Property<string>("f_descripcion")
                        .HasColumnType("text");

                    b.Property<int?>("f_formato_impresion")
                        .HasColumnType("integer");

                    b.Property<bool?>("f_impresion_por_pantalla")
                        .HasColumnType("boolean");

                    b.Property<string>("f_impresora")
                        .HasColumnType("text");

                    b.Property<int?>("f_limite")
                        .HasColumnType("integer");

                    b.Property<string>("f_nombre_archivo")
                        .HasColumnType("text");

                    b.Property<int?>("f_orden")
                        .HasColumnType("integer");

                    b.Property<int?>("f_secuencia_no_control")
                        .HasColumnType("integer");

                    b.HasKey("f_id");

                    b.ToTable("t_formato_impresion_reportes");
                });

            modelBuilder.Entity("AuroraPOS.Models.t_impresion", b =>
                {
                    b.Property<int>("id_reporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_reporte"));

                    b.Property<int>("IDSucursal")
                        .HasColumnType("integer");

                    b.Property<bool>("IsReprint")
                        .HasColumnType("boolean");

                    b.Property<string>("cuerpo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("extencion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("id_estacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("impresora")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("numero_copias")
                        .HasColumnType("integer");

                    b.Property<int>("status_impresion")
                        .HasColumnType("integer");

                    b.HasKey("id_reporte");

                    b.ToTable("t_impresion");
                });

            modelBuilder.Entity("AuroraPOS.Models.t_impresoras", b =>
                {
                    b.Property<int>("f_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("f_id"));

                    b.Property<string>("f_id_estacion")
                        .HasColumnType("text");

                    b.Property<string>("f_impresora")
                        .HasColumnType("text");

                    b.HasKey("f_id");

                    b.ToTable("t_impresoras");
                });

            modelBuilder.Entity("AuroraPOS.Models.t_sucursal", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("t_sucursal");
                });

            modelBuilder.Entity("CategoryPrinterChannel", b =>
                {
                    b.Property<long>("CategoriesID")
                        .HasColumnType("bigint");

                    b.Property<long>("PrinterChannelsID")
                        .HasColumnType("bigint");

                    b.HasKey("CategoriesID", "PrinterChannelsID");

                    b.HasIndex("PrinterChannelsID");

                    b.ToTable("CategoryPrinterChannel");
                });

            modelBuilder.Entity("CategoryPropina", b =>
                {
                    b.Property<long>("CategoriesID")
                        .HasColumnType("bigint");

                    b.Property<long>("PropinasID")
                        .HasColumnType("bigint");

                    b.HasKey("CategoriesID", "PropinasID");

                    b.HasIndex("PropinasID");

                    b.ToTable("CategoryPropina");
                });

            modelBuilder.Entity("CategoryQuestion", b =>
                {
                    b.Property<long>("CategoriesID")
                        .HasColumnType("bigint");

                    b.Property<long>("QuestionsID")
                        .HasColumnType("bigint");

                    b.HasKey("CategoriesID", "QuestionsID");

                    b.HasIndex("QuestionsID");

                    b.ToTable("CategoryQuestion");
                });

            modelBuilder.Entity("CategoryTax", b =>
                {
                    b.Property<long>("CategoriesID")
                        .HasColumnType("bigint");

                    b.Property<long>("TaxsID")
                        .HasColumnType("bigint");

                    b.HasKey("CategoriesID", "TaxsID");

                    b.HasIndex("TaxsID");

                    b.ToTable("CategoryTax");
                });

            modelBuilder.Entity("InventoryItemSupplier", b =>
                {
                    b.Property<long>("ArticlesID")
                        .HasColumnType("bigint");

                    b.Property<long>("SuppliersID")
                        .HasColumnType("bigint");

                    b.HasKey("ArticlesID", "SuppliersID");

                    b.HasIndex("SuppliersID");

                    b.ToTable("InventoryItemSupplier");
                });

            modelBuilder.Entity("MenuCategoryMenuGroup", b =>
                {
                    b.Property<long>("CategoriesID")
                        .HasColumnType("bigint");

                    b.Property<long>("GroupsID")
                        .HasColumnType("bigint");

                    b.HasKey("CategoriesID", "GroupsID");

                    b.HasIndex("GroupsID");

                    b.ToTable("MenuCategoryMenuGroup");
                });

            modelBuilder.Entity("PermissionRole", b =>
                {
                    b.Property<long>("PermissionsID")
                        .HasColumnType("bigint");

                    b.Property<long>("RolesID")
                        .HasColumnType("bigint");

                    b.HasKey("PermissionsID", "RolesID");

                    b.HasIndex("RolesID");

                    b.ToTable("PermissionRole");
                });

            modelBuilder.Entity("PrinterChannelProduct", b =>
                {
                    b.Property<long>("PrinterChannelsID")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductsID")
                        .HasColumnType("bigint");

                    b.HasKey("PrinterChannelsID", "ProductsID");

                    b.HasIndex("ProductsID");

                    b.ToTable("PrinterChannelProduct");
                });

            modelBuilder.Entity("ProductPropina", b =>
                {
                    b.Property<long>("ProductsID")
                        .HasColumnType("bigint");

                    b.Property<long>("PropinasID")
                        .HasColumnType("bigint");

                    b.HasKey("ProductsID", "PropinasID");

                    b.HasIndex("PropinasID");

                    b.ToTable("ProductPropina");
                });

            modelBuilder.Entity("ProductQuestion", b =>
                {
                    b.Property<long>("ProductsID")
                        .HasColumnType("bigint");

                    b.Property<long>("QuestionsID")
                        .HasColumnType("bigint");

                    b.HasKey("ProductsID", "QuestionsID");

                    b.HasIndex("QuestionsID");

                    b.ToTable("ProductQuestion");
                });

            modelBuilder.Entity("ProductTax", b =>
                {
                    b.Property<long>("ProductsID")
                        .HasColumnType("bigint");

                    b.Property<long>("TaxesID")
                        .HasColumnType("bigint");

                    b.HasKey("ProductsID", "TaxesID");

                    b.HasIndex("TaxesID");

                    b.ToTable("ProductTax");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<long>("RolesID")
                        .HasColumnType("bigint");

                    b.Property<long>("UsersID")
                        .HasColumnType("bigint");

                    b.HasKey("RolesID", "UsersID");

                    b.HasIndex("UsersID");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("AreaStation", b =>
                {
                    b.HasOne("AuroraPOS.Models.Area", null)
                        .WithMany()
                        .HasForeignKey("AreasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Station", null)
                        .WithMany()
                        .HasForeignKey("StationsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AuroraPOS.Models.Account", b =>
                {
                    b.HasOne("AuroraPOS.Models.AccountDescription", "AccountDescription")
                        .WithMany()
                        .HasForeignKey("AccountDescriptionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.AccountType", "AccountType")
                        .WithMany()
                        .HasForeignKey("AccountTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountDescription");

                    b.Navigation("AccountType");
                });

            modelBuilder.Entity("AuroraPOS.Models.AccountItem", b =>
                {
                    b.HasOne("AuroraPOS.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("AuroraPOS.Models.Answer", b =>
                {
                    b.HasOne("AuroraPOS.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Question", null)
                        .WithMany("Answers")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AuroraPOS.Models.AreaObject", b =>
                {
                    b.HasOne("AuroraPOS.Models.Area", "Area")
                        .WithMany("AreaObjects")
                        .HasForeignKey("AreaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("AuroraPOS.Models.CanceledOrderItem", b =>
                {
                    b.HasOne("AuroraPOS.Models.OrderItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.CancelReason", "Reason")
                        .WithMany()
                        .HasForeignKey("ReasonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Product");

                    b.Navigation("Reason");
                });

            modelBuilder.Entity("AuroraPOS.Models.Category", b =>
                {
                    b.HasOne("AuroraPOS.Models.Group", "Group")
                        .WithMany("Categories")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("AuroraPOS.Models.Customer", b =>
                {
                    b.HasOne("AuroraPOS.Models.Voucher", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherID");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("AuroraPOS.Models.DamageArticle", b =>
                {
                    b.HasOne("AuroraPOS.Models.InventoryItem", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleID");

                    b.HasOne("AuroraPOS.Models.SubRecipe", "SubRecipe")
                        .WithMany()
                        .HasForeignKey("SubRecipeID");

                    b.HasOne("AuroraPOS.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("SubRecipe");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("AuroraPOS.Models.Delivery", b =>
                {
                    b.HasOne("AuroraPOS.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("AuroraPOS.Models.DeliveryCarrier", "Carrier")
                        .WithMany()
                        .HasForeignKey("DeliveryCarrierID");

                    b.HasOne("AuroraPOS.Models.DeliveryZone", "Zone")
                        .WithMany()
                        .HasForeignKey("DeliveryZoneID");

                    b.HasOne("AuroraPOS.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID");

                    b.Navigation("Carrier");

                    b.Navigation("Customer");

                    b.Navigation("Order");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("AuroraPOS.Models.DiscountItem", b =>
                {
                    b.HasOne("AuroraPOS.Models.Order", null)
                        .WithMany("Discounts")
                        .HasForeignKey("OrderID");

                    b.HasOne("AuroraPOS.Models.OrderItem", null)
                        .WithMany("Discounts")
                        .HasForeignKey("OrderItemID");
                });

            modelBuilder.Entity("AuroraPOS.Models.DividerItem", b =>
                {
                    b.HasOne("AuroraPOS.Models.Order", null)
                        .WithMany("Divides")
                        .HasForeignKey("OrderID");
                });

            modelBuilder.Entity("AuroraPOS.Models.GeneralMedia", b =>
                {
                    b.HasOne("AuroraPOS.Models.DamageArticle", null)
                        .WithMany("Photos")
                        .HasForeignKey("DamageArticleID");
                });

            modelBuilder.Entity("AuroraPOS.Models.InventoryItem", b =>
                {
                    b.HasOne("AuroraPOS.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandID");

                    b.HasOne("AuroraPOS.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");

                    b.HasOne("AuroraPOS.Models.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryID");

                    b.HasOne("AuroraPOS.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxID");

                    b.HasOne("AuroraPOS.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseID");

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("SubCategory");

                    b.Navigation("Tax");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("AuroraPOS.Models.ItemUnit", b =>
                {
                    b.HasOne("AuroraPOS.Models.InventoryItem", null)
                        .WithMany("Items")
                        .HasForeignKey("InventoryItemID");

                    b.HasOne("AuroraPOS.Models.SubRecipe", null)
                        .WithMany("ItemUnits")
                        .HasForeignKey("SubRecipeID");

                    b.HasOne("AuroraPOS.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("AuroraPOS.Models.MenuCategory", b =>
                {
                    b.HasOne("AuroraPOS.Models.GeneralMedia", "Media")
                        .WithMany()
                        .HasForeignKey("MediaID");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("AuroraPOS.Models.MenuGroup", b =>
                {
                    b.HasOne("AuroraPOS.Models.GeneralMedia", "Media")
                        .WithMany()
                        .HasForeignKey("MediaID");

                    b.HasOne("AuroraPOS.Models.Menu", null)
                        .WithMany("Groups")
                        .HasForeignKey("MenuID");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("AuroraPOS.Models.MenuProduct", b =>
                {
                    b.HasOne("AuroraPOS.Models.MenuCategory", null)
                        .WithMany("Products")
                        .HasForeignKey("MenuCategoryID");

                    b.HasOne("AuroraPOS.Models.MenuGroup", null)
                        .WithMany("Products")
                        .HasForeignKey("MenuGroupID");

                    b.HasOne("AuroraPOS.Models.MenuSubCategory", null)
                        .WithMany("Products")
                        .HasForeignKey("MenuSubCategoryID");

                    b.HasOne("AuroraPOS.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AuroraPOS.Models.MenuSubCategory", b =>
                {
                    b.HasOne("AuroraPOS.Models.GeneralMedia", "Media")
                        .WithMany()
                        .HasForeignKey("MediaID");

                    b.HasOne("AuroraPOS.Models.MenuCategory", null)
                        .WithMany("SubCategories")
                        .HasForeignKey("MenuCategoryID");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("AuroraPOS.Models.MoveArticle", b =>
                {
                    b.HasOne("AuroraPOS.Models.Warehouse", "FromWarehouse")
                        .WithMany()
                        .HasForeignKey("FromWarehouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Warehouse", "ToWarehouse")
                        .WithMany()
                        .HasForeignKey("ToWarehouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromWarehouse");

                    b.Navigation("ToWarehouse");
                });

            modelBuilder.Entity("AuroraPOS.Models.MoveItem", b =>
                {
                    b.HasOne("AuroraPOS.Models.MoveArticle", null)
                        .WithMany("Items")
                        .HasForeignKey("MoveArticleID");
                });

            modelBuilder.Entity("AuroraPOS.Models.Order", b =>
                {
                    b.HasOne("AuroraPOS.Models.Area", "Area")
                        .WithMany("Orders")
                        .HasForeignKey("AreaID");

                    b.HasOne("AuroraPOS.Models.PrepareTypes", "PrepareType")
                        .WithMany()
                        .HasForeignKey("PrepareTypeID");

                    b.HasOne("AuroraPOS.Models.Station", "Station")
                        .WithMany("Orders")
                        .HasForeignKey("StationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.AreaObject", "Table")
                        .WithMany("Orders")
                        .HasForeignKey("TableID");

                    b.Navigation("Area");

                    b.Navigation("PrepareType");

                    b.Navigation("Station");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("AuroraPOS.Models.OrderItem", b =>
                {
                    b.HasOne("AuroraPOS.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.SeatItem", null)
                        .WithMany("Items")
                        .HasForeignKey("SeatItemID");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AuroraPOS.Models.OrderTransaction", b =>
                {
                    b.HasOne("AuroraPOS.Models.Order", "Order")
                        .WithMany("Transactions")
                        .HasForeignKey("OrderID");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("AuroraPOS.Models.Product", b =>
                {
                    b.HasOne("AuroraPOS.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryID");

                    b.Navigation("Category");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("AuroraPOS.Models.ProductRecipeItem", b =>
                {
                    b.HasOne("AuroraPOS.Models.Product", null)
                        .WithMany("RecipeItems")
                        .HasForeignKey("ProductID");
                });

            modelBuilder.Entity("AuroraPOS.Models.ProductServingSize", b =>
                {
                    b.HasOne("AuroraPOS.Models.Product", null)
                        .WithMany("ServingSizes")
                        .HasForeignKey("ProductID");
                });

            modelBuilder.Entity("AuroraPOS.Models.PromotionTarget", b =>
                {
                    b.HasOne("AuroraPOS.Models.Promotion", null)
                        .WithMany("Targets")
                        .HasForeignKey("PromotionID");
                });

            modelBuilder.Entity("AuroraPOS.Models.PropinaItem", b =>
                {
                    b.HasOne("AuroraPOS.Models.Order", null)
                        .WithMany("Propinas")
                        .HasForeignKey("OrderID");

                    b.HasOne("AuroraPOS.Models.OrderItem", null)
                        .WithMany("Propinas")
                        .HasForeignKey("OrderItemID");
                });

            modelBuilder.Entity("AuroraPOS.Models.PurchaseOrder", b =>
                {
                    b.HasOne("AuroraPOS.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("AuroraPOS.Models.PurchaseOrderItem", b =>
                {
                    b.HasOne("AuroraPOS.Models.InventoryItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("Items")
                        .HasForeignKey("PurchaseOrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxID");

                    b.Navigation("Item");

                    b.Navigation("PurchaseOrder");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("AuroraPOS.Models.QuestionItem", b =>
                {
                    b.HasOne("AuroraPOS.Models.Answer", "Answer")
                        .WithMany()
                        .HasForeignKey("AnswerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.OrderItem", null)
                        .WithMany("Questions")
                        .HasForeignKey("OrderItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");
                });

            modelBuilder.Entity("AuroraPOS.Models.SeatItem", b =>
                {
                    b.HasOne("AuroraPOS.Models.Order", null)
                        .WithMany("Seats")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AuroraPOS.Models.SmartButtonItem", b =>
                {
                    b.HasOne("AuroraPOS.Models.SmartButton", "Button")
                        .WithMany()
                        .HasForeignKey("ButtonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Question", null)
                        .WithMany("SmartButtons")
                        .HasForeignKey("QuestionID");

                    b.Navigation("Button");
                });

            modelBuilder.Entity("AuroraPOS.Models.Station", b =>
                {
                    b.HasOne("AuroraPOS.Models.Menu", "MenuSelect")
                        .WithMany()
                        .HasForeignKey("MenuSelectID");

                    b.Navigation("MenuSelect");
                });

            modelBuilder.Entity("AuroraPOS.Models.StationPrinterChannel", b =>
                {
                    b.HasOne("AuroraPOS.Models.PrinterChannel", "PrinterChannel")
                        .WithMany()
                        .HasForeignKey("PrinterChannelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Printer", "Printer")
                        .WithMany()
                        .HasForeignKey("PrinterID");

                    b.HasOne("AuroraPOS.Models.Station", null)
                        .WithMany("Printers")
                        .HasForeignKey("StationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Printer");

                    b.Navigation("PrinterChannel");
                });

            modelBuilder.Entity("AuroraPOS.Models.SubCategory", b =>
                {
                    b.HasOne("AuroraPOS.Models.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Product", null)
                        .WithMany("SubCategories")
                        .HasForeignKey("ProductID");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AuroraPOS.Models.SubRecipe", b =>
                {
                    b.HasOne("AuroraPOS.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");

                    b.HasOne("AuroraPOS.Models.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryID");

                    b.Navigation("Category");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("AuroraPOS.Models.SubRecipeItem", b =>
                {
                    b.HasOne("AuroraPOS.Models.SubRecipe", null)
                        .WithMany("Items")
                        .HasForeignKey("SubRecipeID");
                });

            modelBuilder.Entity("AuroraPOS.Models.SubRecipeProduction", b =>
                {
                    b.HasOne("AuroraPOS.Models.SubRecipe", "SubRecipe")
                        .WithMany()
                        .HasForeignKey("SubRecipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubRecipe");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("AuroraPOS.Models.Tax", b =>
                {
                    b.HasOne("AuroraPOS.Models.Voucher", null)
                        .WithMany("Taxes")
                        .HasForeignKey("VoucherID");
                });

            modelBuilder.Entity("AuroraPOS.Models.TaxItem", b =>
                {
                    b.HasOne("AuroraPOS.Models.Order", null)
                        .WithMany("Taxes")
                        .HasForeignKey("OrderID");

                    b.HasOne("AuroraPOS.Models.OrderItem", null)
                        .WithMany("Taxes")
                        .HasForeignKey("OrderItemID");
                });

            modelBuilder.Entity("AuroraPOS.Models.WarehouseStock", b =>
                {
                    b.HasOne("AuroraPOS.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("AuroraPOS.Models.WarehouseStockChangeHistory", b =>
                {
                    b.HasOne("AuroraPOS.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("CategoryPrinterChannel", b =>
                {
                    b.HasOne("AuroraPOS.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.PrinterChannel", null)
                        .WithMany()
                        .HasForeignKey("PrinterChannelsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CategoryPropina", b =>
                {
                    b.HasOne("AuroraPOS.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Propina", null)
                        .WithMany()
                        .HasForeignKey("PropinasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CategoryQuestion", b =>
                {
                    b.HasOne("AuroraPOS.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Question", null)
                        .WithMany()
                        .HasForeignKey("QuestionsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CategoryTax", b =>
                {
                    b.HasOne("AuroraPOS.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Tax", null)
                        .WithMany()
                        .HasForeignKey("TaxsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InventoryItemSupplier", b =>
                {
                    b.HasOne("AuroraPOS.Models.InventoryItem", null)
                        .WithMany()
                        .HasForeignKey("ArticlesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Supplier", null)
                        .WithMany()
                        .HasForeignKey("SuppliersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MenuCategoryMenuGroup", b =>
                {
                    b.HasOne("AuroraPOS.Models.MenuCategory", null)
                        .WithMany()
                        .HasForeignKey("CategoriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.MenuGroup", null)
                        .WithMany()
                        .HasForeignKey("GroupsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PermissionRole", b =>
                {
                    b.HasOne("AuroraPOS.Models.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrinterChannelProduct", b =>
                {
                    b.HasOne("AuroraPOS.Models.PrinterChannel", null)
                        .WithMany()
                        .HasForeignKey("PrinterChannelsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductPropina", b =>
                {
                    b.HasOne("AuroraPOS.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Propina", null)
                        .WithMany()
                        .HasForeignKey("PropinasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductQuestion", b =>
                {
                    b.HasOne("AuroraPOS.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Question", null)
                        .WithMany()
                        .HasForeignKey("QuestionsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductTax", b =>
                {
                    b.HasOne("AuroraPOS.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.Tax", null)
                        .WithMany()
                        .HasForeignKey("TaxesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("AuroraPOS.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraPOS.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AuroraPOS.Models.Area", b =>
                {
                    b.Navigation("AreaObjects");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("AuroraPOS.Models.AreaObject", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("AuroraPOS.Models.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("AuroraPOS.Models.DamageArticle", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("AuroraPOS.Models.Group", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("AuroraPOS.Models.InventoryItem", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("AuroraPOS.Models.Menu", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("AuroraPOS.Models.MenuCategory", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("AuroraPOS.Models.MenuGroup", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("AuroraPOS.Models.MenuSubCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("AuroraPOS.Models.MoveArticle", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("AuroraPOS.Models.Order", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Divides");

                    b.Navigation("Items");

                    b.Navigation("Propinas");

                    b.Navigation("Seats");

                    b.Navigation("Taxes");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("AuroraPOS.Models.OrderItem", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Propinas");

                    b.Navigation("Questions");

                    b.Navigation("Taxes");
                });

            modelBuilder.Entity("AuroraPOS.Models.Product", b =>
                {
                    b.Navigation("RecipeItems");

                    b.Navigation("ServingSizes");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("AuroraPOS.Models.Promotion", b =>
                {
                    b.Navigation("Targets");
                });

            modelBuilder.Entity("AuroraPOS.Models.PurchaseOrder", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("AuroraPOS.Models.Question", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("SmartButtons");
                });

            modelBuilder.Entity("AuroraPOS.Models.SeatItem", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("AuroraPOS.Models.Station", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Printers");
                });

            modelBuilder.Entity("AuroraPOS.Models.SubRecipe", b =>
                {
                    b.Navigation("ItemUnits");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("AuroraPOS.Models.Voucher", b =>
                {
                    b.Navigation("Taxes");
                });
#pragma warning restore 612, 618
        }
    }
}
