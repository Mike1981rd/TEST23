
<div class="container-xxl flex-grow-1 container-p-y">
	<div class="card">
		<div class="card-header">
			<h5 class="card-title">@ViewLocalizer["Void Reason List"]</h5>
			<h6>@ViewLocalizer["Manage your reasons"]</h6>
			</div>
		<div class="card-body">
			
			<div class="card-datatable table-responsive">
				<table id="reason-list" class="table">
					<thead class="border-top">
						<tr>
							<th>@ViewLocalizer["Action"]</th>
							<th>@ViewLocalizer["Reason"] </th>
							<th>@ViewLocalizer["Inventory Reduce"] </th>
							<th>@ViewLocalizer["Status"] </th>
						</tr>
					</thead>
				</table>
			</div>
		</div>
	</div>
</div>




<div class="modal fade" id="addreason" tabindex="-1" role="dialog" data-bs-backdrop="static" aria-hidden="true" data-id="">
	<div class="modal-dialog modal-lg modal-simple modal-edit-user" role="document">
		<div class="modal-content">
			<div class="modal-body">
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				<div class="text-center mb-6">
					<h4 class="mb-2">
						@ViewLocalizer["Add/Edit Void Reasons"]
					</h4>
				</div>
				<div class="row">
					<div class="col-12 col-md-6 fv-plugins-icon-container">
						<div class="form-group">
							<label class="form-label">@ViewLocalizer["Reason"]<span class="manitory">*</span></label>
							<div class="input-group">
								<span class="input-group-text" id="basic-addon1">ID</span>
								<input id="reason-desc" type="text" class="form-control" aria-describedby="basic-addon1" required>
							</div>
						</div>
					</div>
					@* <div class="col-4">
						<div class="form-group mb-0">
							<label>@ViewLocalizer["Print Override Channel"]</label>
							<select id="reason-printoverride" class="select">
								<option value="1"> @ViewLocalizer["Yes"]</option>
								<option value="0"> @ViewLocalizer["No"]</option>
							</select>
						</div>
					</div>
					<div class="col-4">
						<div class="form-group mb-0">
							<label>@ViewLocalizer["Print Account"]</label>
							<select id="reason-printaccount" class="select">
								<option value="1"> @ViewLocalizer["Yes"]</option>
								<option value="0"> @ViewLocalizer["No"]</option>
							</select>
						</div>
					</div> *@
					<div class="col-12 col-md-6 fv-plugins-icon-container">
						<div class="form-group mb-0">
							<label class="form-label">@ViewLocalizer["Inventory Reduce"]</label>
							<select id="reason-inventoryreduce" class="select form-select">
								<option value="1"> @ViewLocalizer["Yes"]</option>
								<option value="0"> @ViewLocalizer["No"]</option>
							</select>
						</div>
					</div>
					@* <div class="col-lg-6 col-sm-6 col-12 pt-2">
						<div class="form-group">
							<label>@ViewLocalizer["Level"]</label>
							<input id="reason-level" type="text" onkeypress="return onlyDecimalKey(event)" class="form-control" required>
						</div>
					</div> *@
					<div class="col-12 col-md-6 fv-plugins-icon-container">
						<div class="form-group mb-0">
							<label class="form-label">@ViewLocalizer["Status"]</label>
							<select id="reason-status" class="select form-select">
								<option value="1"> @ViewLocalizer["Active"]</option>
								<option value="0"> @ViewLocalizer["InActive"]</option>
							</select>
						</div>
					</div>
				</div>
				<div class="col-12 fv-plugins-icon-container">
					<div class="d-flex  align-items-center pb-4" style="gap: 5px;">
						<h6 class="text-left"> @ViewLocalizer["Accounting"]</h6>
						<div class="add-unit">
							<a class="add-accounting-item" href="javascript:void(0);">
								<img src="/vendor/img/icons/plus1.svg" alt="img">
							</a>
						</div>
					</div>
					<table class="table reordertable">
						<thead class="border-top">
							<tr>
								<td>
									@ViewLocalizer["Name"]
								</td>
								<td>
									@ViewLocalizer["Type"]
								</td>
								<td>
									@ViewLocalizer["Number"]
								</td>
								<td>
									@ViewLocalizer["Action"]
								</td>
						</thead>
						<tbody id="accounting-list">
						</tbody>
					</table>
				</div>
			</div>
			<div class="col-12 text-center">
				<button id="edit-reason" type="button" class="btn btn-primary me-3 waves-effect waves-light">@ViewLocalizer["Submit"]</button>
				<button type="button" class="btn btn-label-secondary waves-effect" data-bs-dismiss="modal">@ViewLocalizer["Cancel"]</button>
			</div>
		</div>
	</div>
</div>

@{
	@await Component.InvokeAsync("Accounting", new { })
}

<script>
	$(document).ready(function () {
		var stationtable = $("#reason-list").DataTable({
			"processing": true, // for show progress bar
			"serverSide": true, // for process server side
			"filter": false, // this is for disable filter (search box)
			"orderMulti": false, // for disable multiple column at once
			dom:
				'<"card-header d-flex border-top rounded-0 flex-wrap py-0 flex-column flex-md-row align-items-start"' +
				'<"me-5 ms-n4 pe-5 mb-n6 mb-md-0">' +
				'<"d-flex justify-content-start justify-content-md-end align-items-baseline"<"dt-action-buttons d-flex flex-column align-items-start align-items-sm-center justify-content-sm-center pt-0 gap-sm-4 gap-sm-0 flex-sm-row"lB>>' +
				'>t' +
				'<"row"' +
				'<"col-sm-12 col-md-6"i>' +
				'<"col-sm-12 col-md-6"p>' +
				'>',
			"ajax": {
				"url": "/Setting/GetVoidReasons",
				"type": "POST",
				"datatype": "json"
			},
			'select': {
				'style': 'multi'
			},
			"pageLength": 10,
			"lengthMenu": [10, 25, 50],
			"order": [[2, 'desc']],
			"columns": [
				{
					'data': 'action', 'name': 'action',
					render: function (data, type, row) {
						return "<a class='me-3' href='javascript:void(0);'  onclick=EditReason('" + row.id + "'); ><img src='/vendor/img/icons/edit.svg' alt='img'></a><a class='me-3' href='javascript:void(0);'  onclick=DeleteReason('" + row.id + "'); ><img src='/vendor/img/icons/delete.svg' alt='img'></a>";
					},
				},
				{ "data": "reason", "name": "reason", "autoWidth": true },
				{ "data": "isReduceInventory", "name": "isReduceInventory", "autoWidth": true },
				{
					'data': 'status', 'name': 'isActive',
					render: function (data, type, row) {
						if (row.isActive) {
							return "<span class='badges bg-lightgreen'>@ViewLocalizer["Active"]</span>";
						}
						else {
							return "<span class='badges bg-lightred'>@ViewLocalizer["InActive"]</span>";
						}
					},
					"autoWidth": true
				},
			],
			buttons: [
				{
					extend: 'collection',
					className: 'btn btn-label-secondary dropdown-toggle me-4 waves-effect waves-light',
					text: '<i class="ti ti-upload me-1 ti-xs"></i>Export',
					buttons: [
						{
							extend: 'print',
							text: '<i class="ti ti-printer me-2" ></i>Print',
							className: 'dropdown-item',
							exportOptions: {
								columns: [1, 3, 4, 5, 6],
								format: {
									body: function (inner, coldex, rowdex) {
										if (inner.length <= 0) return inner;
										var el = $.parseHTML(inner);
										var result = '';
										$.each(el, function (index, item) {
											if (item.classList !== undefined && item.classList.contains('reason-name')) {
												result = result + item.lastChild.firstChild.textContent;
											} else if (item.innerText === undefined) {
												result = result + item.textContent;
											} else result = result + item.innerText;
										});
										return result;
									}
								}
							},
							customize: function (win) {
								// Customize print view for dark
								$(win.document.body)
									.css('color', headingColor)
									.css('border-color', borderColor)
									.css('background-color', bodyBg);
								$(win.document.body)
									.find('table')
									.addClass('compact')
									.css('color', 'inherit')
									.css('border-color', 'inherit')
									.css('background-color', 'inherit');
							}
						},
						{
							extend: 'csv',
							text: '<i class="ti ti-file me-2" ></i>Csv',
							className: 'dropdown-item',
							exportOptions: {
								columns: [1, 3, 4, 5, 6],
								format: {
									body: function (inner, coldex, rowdex) {
										if (inner.length <= 0) return inner;
										var el = $.parseHTML(inner);
										var result = '';
										$.each(el, function (index, item) {
											if (item.classList !== undefined && item.classList.contains('reason-name')) {
												result = result + item.lastChild.firstChild.textContent;
											} else if (item.innerText === undefined) {
												result = result + item.textContent;
											} else result = result + item.innerText;
										});
										return result;
									}
								}
							}
						},
						{
							extend: 'excel',
							text: '<i class="ti ti-file-export me-2"></i>Excel',
							className: 'dropdown-item',
							exportOptions: {
								columns: [1, 3, 4, 5, 6],
								format: {
									body: function (inner, coldex, rowdex) {
										if (inner.length <= 0) return inner;
										var el = $.parseHTML(inner);
										var result = '';
										$.each(el, function (index, item) {
											if (item.classList !== undefined && item.classList.contains('reason-name')) {
												result = result + item.lastChild.firstChild.textContent;
											} else if (item.innerText === undefined) {
												result = result + item.textContent;
											} else result = result + item.innerText;
										});
										return result;
									}
								}
							}
						},
						{
							extend: 'pdf',
							text: '<i class="ti ti-file-text me-2"></i>Pdf',
							className: 'dropdown-item',
							exportOptions: {
								columns: [1, 3, 4, 5, 6],
								format: {
									body: function (inner, coldex, rowdex) {
										if (inner.length <= 0) return inner;
										var el = $.parseHTML(inner);
										var result = '';
										$.each(el, function (index, item) {
											if (item.classList !== undefined && item.classList.contains('reason-name')) {
												result = result + item.lastChild.firstChild.textContent;
											} else if (item.innerText === undefined) {
												result = result + item.textContent;
											} else result = result + item.innerText;
										});
										return result;
									}
								}
							}
						},
					]
				},
				{
					text: '<i class="ti ti-plus me-0 me-sm-1 ti-xs"></i><span class="d-none d-sm-inline-block">Añadir Razón</span>',
					className: 'add-new btn btn-primary ms-2 ms-sm-0 waves-effect waves-light',
					action: function () {
						AddReason();
					}
				}
			]
		});

		$("#edit-reason").click(function () {
			var name = $("#reason-desc").val();
			if (!name || name == "") {
				toastr.warning("@ViewLocalizer["Please input the reason."]", { showMethod: "fadeIn", hideMethod: "fadeOut", timeOut: 2e3 })
				return;
			}

			var id = parseInt($("#addreason").data("id"));
			var level = parseInt($("#reason-level").val());
			if (!level) level = 0;

			var data = {
				ID: id,
				Reason: name,
				Level : level,
				IsPrintOverrideChannel : $("#reason-printoverride").val() == "1",
				IsPrintAccount : $("#reason-printaccount").val() == "1",
				IsReduceInventory: $("#reason-inventoryreduce").val() == "1",
				IsActive : $("#reason-status").val() == "1",
			};

			$.ajax({
				url: "/Setting/EditVoidReason",
				type: "POST",
				data: data,
				success: function (data, textStatus, jqXHR) {
					if (data.status == 0) {
						SaveAccountItems(12, data.id, function () {
							$("#reason-list").DataTable().draw();
							$("#addreason").modal("hide");
						})
					}
					else if (data.status == 2) {
						toastr.error("@ViewLocalizer["The name and amount should be unique."]", {})
					}
					else {
						toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
					}
				},
				error: function (jqXHR, textStatus, errorThrown) {
					toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
				}
			});
		})
	});

	function AddReason() {
		$("#reason-desc").val("");
		$("#reason-level").val("");
		$("#reason-printoverride").val(1).change();
		$("#reason-printaccount").val(1).change();
		$("#reason-inventoryreduce").val(1).change();
		$("#reason-status").val(1).change();
		$("#addreason").data("id", 0);
		GetAccountItems(12, 0);
		$("#addreason").modal("show");
	}
	function EditReason(id) {
		$.ajax({
			url: "/Setting/GetVoidReason?reasonId=" + id,
			type: "POST",
			success: function (reason, textStatus, jqXHR) {
				if (reason) {
					$("#reason-desc").val(reason.reason)
					$("#reason-level").val(reason.level)
					if (reason.isPrintOverrideChannel) {
						$("#reason-printoverride").val(1).change();
					}
					else {
						$("#reason-printoverride").val(0).change();
					}
					if (reason.isPrintAccount) {
						$("#reason-printaccount").val(1).change();
					}
					else {
						$("#reason-printaccount").val(0).change();
					}
					if (reason.isReduceInventory) {
						$("#reason-inventoryreduce").val(1).change();
					}
					else {
						$("#reason-inventoryreduce").val(0).change();
					}
					if (reason.isActive) {
						$("#reason-status").val(1).change();
					}
					else {
						$("#reason-status").val(0).change();
					} 
					GetAccountItems(12, reason.id);
					$("#addreason").data("id", reason.id)

					$("#addreason").modal("show");
				}
				
			},
			error: function (jqXHR, textStatus, errorThrown) {
				toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
			}
		});
	}

	function DeleteReason(id) {
		Swal.fire({
			title: "@ViewLocalizer["Are you sure to delete the void reason?"]",
			text: "",
			type: "warning",
			showCancelButton: !0,
			confirmButtonColor: "#3085d6",
			cancelButtonColor: "#d33",
			confirmButtonText: "@ViewLocalizer["Yes, delete it!"]",
			cancelButtonText: "@ViewLocalizer["Cancel"]",
			confirmButtonClass: "btn btn-primary",
			cancelButtonClass: "btn btn-danger ml-1",
			buttonsStyling: !1,
		}).then(function (t) {
			if (t.value) {
				$.ajax({
					url: "/Setting/DeleteVoidReason?reasonId=" + id,
					type: "POST",
					success: function (data, textStatus, jqXHR) {
						if (data.status == 0) {
							$("#reason-list").DataTable().draw();
						}
						else {
							toastr.error("@ViewLocalizer["Failed to delete the tax."]", {})
						}
					},
					error: function (jqXHR, textStatus, errorThrown) {
						toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
					}
				});
			}

		});
	}
</script>