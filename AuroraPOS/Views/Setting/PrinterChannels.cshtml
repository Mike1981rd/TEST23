@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    var printers = (List<Printer>)ViewBag.Printers;
}
<div class="container-xxl flex-grow-1 container-p-y">
    <div class="row g-6">

        @* Render el menu interno *@
        @Html.Partial("InternalMenu.cshtml", 10)

        <!-- Options -->
        <div class="col-12 col-lg-8 pt-6 pt-lg-0">
            <div class="page-header">
                <div class="page-title">
                    <h4>@ViewLocalizer["Printer Channels"]</h4>
                    <h6>@ViewLocalizer["Manage Printer Channels"]</h6>
                </div>
                <div class="page-btn">
                    <a id="add-printerchannel" class="btn btn-added"><img src="~/vendor/img/icons/plus.svg" alt="img" class="me-1">@ViewLocalizer["Add New Printer Channel"]</a>
                </div>
            </div>
            <!-- /product list -->
            <div class="card">
                <div class="card-body">

                    <div class="table-responsive">
                        <table id="printerchannel-list" class="table">
                            <thead class="table-light">
                                <tr>
                                    <th>@ViewLocalizer["Action"]</th>
                                    <th>@ViewLocalizer["Name"]</th>
                                    <th>@ViewLocalizer["Default"]</th>
                                    <th>@ViewLocalizer["Status"]</th>

                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>

            <!-- edit Modal -->
            <div class="modal fade show" id="editprinterchannel" tabindex="-1" role="dialog" aria-hidden="true" data-id="">
  <div class="modal-dialog modal-lg modal-simple modal-edit-user" role="document">
    <div class="modal-content">
      <div class="modal-body">
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        <div class="text-center mb-6">
          <h4 class="mb-2">@ViewLocalizer["Edit Printer Channel"]</h4>
        </div>
        <form id="editUserForm" class="row g-6 fv-plugins-bootstrap5 fv-plugins-framework" onsubmit="return false"
          novalidate="novalidate">
          <div class="col-12 col-md-6 fv-plugins-icon-container">
            <label class="form-label" for="modalEditUserFirstName">@ViewLocalizer["Name"]</label>
            <input type="text" id="eprinterchannel-name" class="form-control" required>
          </div>
          <div class="col-12 col-md-6 fv-plugins-icon-container">
            <label class="form-label" for="modalEditUserLastName">Default</label>
            <div class="form-check form-switch">
              <input type="checkbox" class="form-check-input" id="eprinterchannel-default">
            </div>
          </div>
          <div class="col-12 col-md-6">
            <label class="form-label" for="modalEditUserStatus">@ViewLocalizer["Status"]</label>
            <div class="position-relative">
              <div class="position-relative"><select id="eprinterchannel-status" class="select form-select">
                  <option value="1"> @ViewLocalizer["Active"]</option>
                  <option value="0"> @ViewLocalizer["InActive"]</option>
                </select>
              </div>
            </div>
          </div>

          <div class="col-12 text-center">
            <button id="edit-printerchannel" type="submit"
              class="btn btn-primary me-3 waves-effect waves-light">@ViewLocalizer["Submit"]</button>
            <button type="reset" class="btn btn-label-secondary waves-effect" data-bs-dismiss="modal"
              aria-label="Close">Cancel</button>
          </div>
          <input type="hidden">
        </form>
      </div>
    </div>
  </div>
</div>
            </div>
            </div>
            </div>


<script>

    var printerchanneltable = $("#printerchannel-list").DataTable({
        "processing": true, // for show progress bar
        "serverSide": true, // for process server side
        "filter": true, // this is for disable filter (search box)
        "orderMulti": false, // for disable multiple column at once
        "ajax": {
            "url": "/Setting/GetPrinterChannelList",
            "type": "POST",
            "datatype": "json"
        },
        'select': {
            'style': 'multi'
        },
        "pageLength": 10,
        "lengthMenu": [10, 25, 50],
        "order": [[1, 'asc']],
        "columns": [
            {
                'data': 'action', 'name': 'action',
                render: function (data, type, row) {
                    return "<a class='me-3' href='javascript:void(0);' onclick='EditPrinterChannel(" + JSON.stringify(row) + ")'><img src='/vendor/img/icons/edit.svg' alt='img'></a><a class='me-3' href='javascript:void(0);'  onclick=DeletePrinterChannel('" + row.id + "'); ><img src='/vendor/img/icons/delete.svg' alt='img'></a>";
                },
            },
            { "data": "name", "name": "name", "autoWidth": true },
            {
                'data': 'status', 'name': 'isDefault',
                render: function (data, type, row) {
                    if (row.isDefault) {
                        return "Yes";
                    }
                    else {
                        return "";
                    }
                },
                "autoWidth": true
            },
            {
                'data': 'status', 'name': 'isActive',
                render: function (data, type, row) {
                    if (row.isActive) {
                        return "<span class='badges bg-lightgreen'>@ViewLocalizer["Active"]</span>";
                    }
                    else {
                        return "<span class='badges bg-lightred'>@ViewLocalizer["InActive"]</span>";
                    }
                },
                "autoWidth": true
            },
            
        ]
    });

    $("#add-printerchannel").click(function () {
        $("#eprinterchannel-name").val("");
        $("#eprinterchannel-default").prop("checked", false);

        $("#eprinterchannel-status").val(1).change();
        $(".printer-modal-title").html("@ViewLocalizer["Add Printer Channel"]");
        $("#editprinterchannel").data("id", 0);
        $("#editprinterchannel").modal("show");
    });

    function EditPrinterChannel(printerchannel) {
        $("#eprinterchannel-name").val(printerchannel.name);
        if (printerchannel.isDefault)
        {
            $("#eprinterchannel-default").prop("checked", true);
        }
        else{
            $("#eprinterchannel-default").prop("checked", false);
        }
        if (printerchannel.isActive) {
            $("#eprinterchannel-status").val(1).change();
        }
        else {
            $("#eprinterchannel-status").val(0).change();
        }
        $(".printerchannel-modal-title").html("@ViewLocalizer["Edit Printer Channel"]");
        $("#editprinterchannel").data("id", printerchannel.id);
        $("#editprinterchannel").modal("show");
    }

    $("#edit-printerchannel").click(function () {
        var name = $("#eprinterchannel-name").val();
        if (!name || name == "") {
            toastr.warning("@ViewLocalizer["Please input the name."]", { showMethod: "fadeIn", hideMethod: "fadeOut", timeOut: 2e3 })
            return;
        }
       
        var active = $("#eprinterchannel-status").val()
        var data = {
            ID: $("#editprinterchannel").data("id"),
            Name: name,
            IsDefault: $("#eprinterchannel-default").prop("checked"),
            IsActive: active == "1"
        }

        $.ajax({
            url: "/Setting/EditPrinterChannel",
            type: "POST",
            data: data,
            success: function (data, textStatus, jqXHR) {
                if (data.status == 0) {
                    printerchanneltable.draw();
                    $("#editprinterchannel").modal("hide");
                }
                else if (data.status == 2)
                {
                    toastr.error("@ViewLocalizer["The name should be unique."]", {})
                }
                else {
                    toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
            }
        });
    });

    function DeletePrinterChannel(id) {

        Swal.fire({
            title: "@ViewLocalizer["Are you sure to delete the printer channel?"]",
            text: "",
            type: "warning",
            showCancelButton: !0,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "@ViewLocalizer["Yes, delete it!"]",
            cancelButtonText: "@ViewLocalizer["Cancel"]",
            confirmButtonClass: "btn btn-primary",
            cancelButtonClass: "btn btn-danger ml-1",
            buttonsStyling: !1,
        }).then(function (t) {
            if (t.value) {
                $.ajax({
                    url: "/Setting/DeletePrinterChannel?printerchannelId=" + id,
                    type: "POST",
                    success: function (data, textStatus, jqXHR) {
                        if (data.status == 0) {
                            printerchanneltable.draw();
                        }
                        else {
                            toastr.error("@ViewLocalizer["Failed to delete the printer channel."]", {})
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
                    }
                });
            }

        });

    }



</script>