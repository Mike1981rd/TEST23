@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<div class="container-xxl flex-grow-1 container-p-y">
	<div class="row g-6">

		@* Render el menu interno *@
		@Html.Partial("InternalMenu.cshtml",2)

		<!-- Options -->
		<div class="col-12 col-lg-8 pt-6 pt-lg-0">
			<div class="tab-content p-0">
				<!-- Store Details Tab -->
				<div class="tab-pane fade show active" id="store_details" role="tabpanel">


					<div class="card mb-6">
						<div class="card-header">
							<div class="card-title m-0">
								<h5 class="m-0">@ViewLocalizer["Métodos de pago"]</h5>
								<p class="my-0 card-subtitle">
									@ViewLocalizer["Manage Payment Methods"]
								</p>
							</div>
						</div>
						<div class="card-body">

							<button class="btn btn-label-primary"  onclick="AddPaymentMethod()">
								@ViewLocalizer["Add New Payment Method"]
							</button>
							<br></br>

							<div class="divloading" style="display: none">
								<div class="spinner-border text-primary "  role="status">
									<span class="visually-hidden">Loading...</span>
								</div>
								Cargando...
							</div>
							
							
							<div id="lista">
								
							</div>
							
							<div id="original" class="row mb-5 g-6 bg-label-secondary px-6 rounded-2 mx-0 mt-0 bg-lighter" style="display: none">
								<div
									class="col-12 d-flex justify-content-between align-items-center border-bottom p-0 pb-6">
									<img
										src=""
										alt="Paypal"
										class="txtImagen gray-shadow-sm rounded" style="background: white;"
										width="100"/>

									<span class="fw-medium">
										<a class="me-3 paymentmethod-tr" data-id="txtID" href="javascript:void(0);" onclick="EditPaymentMethod('txtID');"><img src="/vendor/img/icons/edit.svg" alt="img"></a>
										<a class="me-3" href="javascript:void(0);" onclick="DeletePaymentMethod('txtID');"><img src="/vendor/img/icons/delete.svg" alt="img"></a>
									</span>
								</div>
								<div class="col-12 p-0">
									<div class="row">
										<div class="col-3">
											<p class="mb-2 small">@ViewLocalizer["Name"]</p>
											<p class="txtNombre text-heading fw-medium"></p>
										</div>
										<div class="col-3">
											<p class="mb-2 small">@ViewLocalizer["Type"]</p>
											<p class="txtTipo text-heading fw-medium"></p>
										</div>
										<div class="col-3">
											<p class="mb-2 small">@ViewLocalizer["Status"]</p>
											<p class="txtStatus badge bg-label-warning fw-medium">Inactive</p>
										</div>
										<div class="col-3">
											<p class="mb-2 small">@ViewLocalizer["Tasa"]</p>
											<p class="txtTasa text-heading fw-medium">2.99%</p>
										</div>
									</div>
								</div>
							</div>

						</div>
					</div>


				</div>
			</div>
		</div>
		<!-- /Options-->
	</div>
</div>



<div class="modal fade" id="addpaymentmethod" data-bs-backdrop="static" tabindex="-1" role="dialog" aria-hidden="true" data-id="">
	<div class="modal-dialog modal-dialog-centered" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="supplier-modal-title">@ViewLocalizer["Add/Edit Payment Method"]</h5>
				<button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<div class="row">
					<div class="col-lg-12 col-sm-12 col-12">
						<div class="form-group">
							<label>@ViewLocalizer["Name"]<span class="manitory">*</span></label>
							<div class="input-group">
								<input id="pmethod-name" type="text" class="form-control" aria-describedby="basic-addon1" required>
							</div>
						</div>
					</div>
				
					<div class="col-lg-6 col-sm-6 col-12">
						<div class="form-group">
							<label>@ViewLocalizer["Exchange Rate"]</label>
							<input id="pmethod-tasa" type="text" onkeypress="return onlyDecimalKey(event)" class="form-control" required>
						</div>
					</div>
					<div class="row">
						<div class="form-group px-3">
							<div class="d-flex  align-items-center" style="gap: 5px;">
								<h6 class="text-left pr-5">@ViewLocalizer["Photo"]</h6>
								<div class="del-unit text-danger">
									<a class="del-photo " href="javascript:void(0);">
										<img src="/vendor/img/icons/minus.svg" alt="img">
									</a>
								</div>
							</div>

							<div class="row">
								<div class="col-sm-4 col-4">
									<img id="productimg" class="" style="max-height: 100px;" src="/vendor/img/product/noimage.png" alt="No image">
								</div>
								<div class="col-sm-8 col-8 image-upload" style="height: 100%">
									<input id="imgInpProduct" type="file" name="Files" accept="image/*">
									<div class="image-uploads">
										<img src="~/vendor/img/icons/upload.svg" alt="img">
										<h4>@ViewLocalizer["Drag and drop a file to upload"]</h4>
									</div>
								</div>
							</div>

						</div>
					</div>
					<div class="col-12">
						<div class="form-group mb-0">
							<label>@ViewLocalizer["Payment Type"]</label>
							<select id="pmethod-type" class="select">
								<option value="Effectivo"> Effectivo</option>
								<option value="Tarjeta"> Tarjeta</option>
								<option value="C X C"> C X C</option>
								<option value="Cheque"> Cheque</option>
								<option value="Transferencia"> Transferencia</option>
								<option value="Cuenta de la Casa"> Cuenta de la Casa</option>
								<option value="Conduce">Conduce</option>
							</select>
						</div>
					</div>
					<div class="col-12 pt-2">
						<div class="form-group mb-0">
							<label>@ViewLocalizer["Status"]</label>
							<select id="pmethod-status" class="select">
								<option value="1"> @ViewLocalizer["Active"]</option>
								<option value="0"> @ViewLocalizer["InActive"]</option>
							</select>
						</div>
					</div>
				</div>
				<div class="row pt-3">
					<div class="col-lg-12 col-sm-12 col-12">
						<div class="d-flex  align-items-center pb-4" style="gap: 5px;">
							<h6 class="text-left"> @ViewLocalizer["Accounting"]</h6>
							<div class="add-unit">
								<a class="add-accounting-item" href="javascript:void(0);">
									<img src="/vendor/img/icons/plus1.svg" alt="img">
								</a>
							</div>
						</div>
						<table class="table reordertable">
							<thead>
								<tr>
									<td>
										@ViewLocalizer["Name"]
									</td>
									<td>
										@ViewLocalizer["Type"]
									</td>
									<td>
										@ViewLocalizer["Number"]
									</td>
									<td>
										@ViewLocalizer["Action"]
									</td>
							</thead>
							<tbody id="accounting-list">
							</tbody>
						</table>
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<button id="edit-pmethod" type="button" class="btn btn-submit">@ViewLocalizer["Submit"]</button>
				<button type="button" class="btn btn-cancel" data-bs-dismiss="modal">@ViewLocalizer["Cancel"]</button>
			</div>
		</div>
	</div>
</div>

@{
	@await Component.InvokeAsync("Accounting", new { })
}
<script>
	$(document).ready(function () {
		////
		var fixHelperModified = function (e, tr) {
			var $originals = tr.children();
			var $helper = tr.clone();
			$helper.children().each(function (index) {
				$(this).width($originals.eq(index).width())
			});
			return $helper;
		},
			updateIndex = function (e, ui) {
				var data = [];
				$(".paymentmethod-tr").each(function (index, item) {

					var id = $(this).data("id");
					var d = {
						ID: id,
						DisplayOrder: index + 1
					}

					data.push(d);
				})

				$.ajax({
					url: "/Setting/UpdatePaymentMethodOrder",
					type: "POST",
					data: JSON.stringify(data),
					contentType: 'application/json;',
					dataType: 'json',
					success: function (data, textStatus, jqXHR) {
						if (data.status == 0) {
							//$("#denomination-list").DataTable().draw();

						}

					},
					error: function (jqXHR, textStatus, errorThrown) {
						toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
					}
				});
			};

		$("#paymentmethod-list tbody").sortable({
			helper: fixHelperModified,
			stop: updateIndex
		}).disableSelection();

		$("#paymentmethod-list tbody").sortable();



		cargaDatos();

		var pmethodtable = $("#paymentmethod-list").DataTable({
			"processing": true, // for show progress bar
			"serverSide": true, // for process server side
			"filter": false, // this is for disable filter (search box)
			"orderMulti": false, // for disable multiple column at once
			"orderable": false, // for disable multiple column at once
			"ajax": {
				"url": "/Setting/GetPaymentMethods",
				"type": "POST",
				"datatype": "json"
			},
			'select': {
				'style': 'multi'
			},
			"pageLength": 10,
			"lengthMenu": [10, 25, 50],
			"columns": [
				{
					'data': 'action', 'name': 'action', 'orderable': false,
					render: function (data, type, row) {
						return "<a class='me-3 paymentmethod-tr' data-id='" + row.id + "' href='javascript:void(0);'  onclick=EditPaymentMethod('" + row.id + "'); ><img src='/vendor/img/icons/edit.svg' alt='img'></a><a class='me-3' href='javascript:void(0);'  onclick=DeletePaymentMethod('" + row.id + "'); ><img src='/vendor/img/icons/delete.svg' alt='img'></a>";
					},
				},
				
				{
					'data': 'image', 'name': 'image', 'orderable': false,
					render: function (data, type, row) {
						if (!row.image) {
							return "";
						}
						else {
							return "<img src='" + row.image + "' alt = 'avatar' style='max-height:40px; ' >";
						}
					},
					"autoWidth": true
				},
				
				{ "data": "name", "name": "name", 'orderable': false, "autoWidth": true },
				{ "data": "paymentType", "name": "paymentType", 'orderable': false, "autoWidth": true },
				{ "data": "tasa", "name": "tasa", 'orderable': false, "autoWidth": true },
				{
					'data': 'status', 'name': 'isActive', 'orderable': false,
					render: function (data, type, row) {
						if (row.isActive) {
							return "<span class='badges bg-lightgreen'>@ViewLocalizer["Active"]</span>";
						}
						else {
							return "<span class='badges bg-lightred'>@ViewLocalizer["InActive"]</span>";
						}
					},
					"autoWidth": true
				},
			]
		});

		$("#edit-pmethod").click(function () {
			var name = $("#pmethod-name").val();
			if (!name || name == "") {
				toastr.warning("@ViewLocalizer["Please input the name."]", { showMethod: "fadeIn", hideMethod: "fadeOut", timeOut: 2e3 })
				return;
			}
			
			var id = parseInt($("#addpaymentmethod").data("id"));
			var desc = $("#pmethod-description").val();
			var tasa = parseFloat($("#pmethod-tasa").val());
			var data = {
				ID: id,
				Name: name,
				Description: desc,
				Tasa : tasa,
				PaymentType: $("#pmethod-type").val(),
                ImageUpload: $("#productimg").data("photo"),
				IsActive: $("#pmethod-status").val() == "1"
			};

			$.ajax({
				url: "/Setting/EditPaymentMethod",
				type: "POST",
				data: JSON.stringify(data),
				contentType: 'application/json;',
				dataType: 'json',
				success: function (data, textStatus, jqXHR) {
					if (data.status == 0) {
						SaveAccountItems(8, data.id, function () {
							$("#paymentmethod-list").DataTable().draw();
							$("#addpaymentmethod").modal("hide");
						})
						
					}
					else if (data.status == 2) {
						toastr.error("@ViewLocalizer["The name and amount should be unique."]", {})
					}
					else {
						toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
					}
				},
				error: function (jqXHR, textStatus, errorThrown) {
					toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
				}
			});
		})

		$(".del-photo").click(function () {
			$("#productimg").attr("src", "/vendor/img/product/noimage.png");
			$("#productimg").data("photo", "");
			$("#imgInpProduct").val("")
		})

		$("#imgInpProduct").change(function () {
			readProductBackURL(this);
		});

	});
	
	function cargaDatos(){
		$(".divloading").show();
		$.ajax({
			url: "/Setting/GetPaymentMethods",
			type: "POST",
			success: function (data, textStatus, jqXHR) {
				$(".divloading").hide();
				if (data) {
					$(data.data).each(function() {
						var $dElemento = $("#original").clone();

						$dElemento.show();
						$dElemento.find(".txtImagen").attr('src',this.image);
						$dElemento.find(".txtNombre").html(this.name);
						$dElemento.find(".txtTipo").html(this.paymentType);
						$dElemento.find(".txtStatus").html(this.isActive ? "@ViewLocalizer["Active"]" : "@ViewLocalizer["InActive"]" );
						$dElemento.find(".txtTasa").html(this.tasa);

						$dElemento.html($dElemento.html().replace('txtID',this.id));

						$("#lista").append($dElemento);
					});
				}
			},
			error: function (jqXHR, textStatus, errorThrown) {
				toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
			}
		});
	}

	function readProductBackURL(input) {
		if (input.files && input.files[0]) {
			var reader = new FileReader();

			reader.onload = function (e) {
				$('#productimg').attr('src', e.target.result);
				$("#productimg").data("photo", e.target.result);
			}

			reader.readAsDataURL(input.files[0]);
		}
	}
	function AddPaymentMethod() {
		$("#pmethod-name").val("")
		$("#pmethod-description").val("")
		$("#pmethod-tasa").val("")
		$("#pmethod-status").val(1).change();
		$('#productimg').attr('src', "/vendor/img/product/noimage.png");
		$("#productimg").data("photo", "");
		$("#addpaymentmethod").data("id", 0);
		GetAccountItems(8, 0);
		$("#addpaymentmethod").modal("show");
	}
	function EditPaymentMethod(id) {

		$.ajax({
			url: "/Setting/GetPaymentMethod?id=" + id,
			type: "POST",
			success: function (pmethod, textStatus, jqXHR) {
				if (pmethod) {
					$("#pmethod-name").val(pmethod.name)
					$("#pmethod-tasa").val(pmethod.tasa)
					$("#pmethod-type").val(pmethod.paymentType).change();
					if (pmethod.isActive) {
						$("#pmethod-status").val(1).change();
					}
					else {
						$("#pmethod-status").val(0).change();
					}
					if (pmethod.image == "") {
						$('#productimg').attr('src', "/vendor/img/product/noimage.png");
					}
					else {
						$('#productimg').attr('src', pmethod.image);
					}
					$("#productimg").data("photo", pmethod.image);
					$("#addpaymentmethod").data("id", pmethod.id)
					GetAccountItems(8, pmethod.id);
					$("#addpaymentmethod").modal("show");
				}
			},
			error: function (jqXHR, textStatus, errorThrown) {
				toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
			}
		});


		
	}

	function DeletePaymentMethod(id) {
		Swal.fire({
			title: "",
			text: "@ViewLocalizer["Are you sure to delete the payment method?"]",
			type: "warning",
			showCancelButton: !0,
			confirmButtonColor: "#3085d6",
			cancelButtonColor: "#d33",
			confirmButtonText: "@ViewLocalizer["Yes, delete it!"]",
			cancelButtonText: "@ViewLocalizer["Cancel"]",
			customClass: {
				confirmButton: 'btn btn-primary me-2 waves-effect waves-light',
				cancelButton: 'btn btn-label-secondary waves-effect waves-light'
			},
		}).then(function (t) {
			if (t.value) {
				$.ajax({
					url: "/Setting/DeletePaymentMethod?paymentMethodId=" + id,
					type: "POST",
					success: function (data, textStatus, jqXHR) {
						if (data.status == 0) {
							$("#paymentmethod-list").DataTable().draw();
						}
						else {
							toastr.error("@ViewLocalizer["Failed to delete the payment method."]", {})
						}
					},
					error: function (jqXHR, textStatus, errorThrown) {
						toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
					}
				});
			}

		});
	}
</script>