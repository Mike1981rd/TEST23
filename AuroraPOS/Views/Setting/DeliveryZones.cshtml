@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<div class="page-header">
    <div class="page-title">
        <h4>@ViewLocalizer["Zonas de Reparto"]</h4>
        <h6>@ViewLocalizer["Edición de Zonas de Reparto"]</h6>
    </div>
    <div class="page-btn">
        <a href="javascript:void(0);" class="btn btn-added" onclick="AddZone()"><img src="~/vendor/img/icons/plus.svg" alt="img" class="me-2">@ViewLocalizer["Agregar Zona"]</a>
    </div>
</div>

<div class="card">
    <div class="card-body">
        <div class="table-responsive">
            <table id="zone-list" class="table">
                <thead>
                    <tr>
                        <th>@ViewLocalizer["Acción"]</th>
                        <th>@ViewLocalizer["Nombre"] </th>
                        <th>@ViewLocalizer["Primary"] </th>
                        <th>@ViewLocalizer["Tiempo"]</th>
                        <th>@ViewLocalizer["Costo"]</th>
                        <th>@ViewLocalizer["Activo"] </th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="AddZone" data-bs-backdrop="static" tabindex="-1" role="dialog" aria-hidden="true" data-id="">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="supplier-modal-title">@ViewLocalizer["Agregar/Editar Zona"]</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-8">
                        <div class="form-group">
                            <label>@ViewLocalizer["Nombre"]<span class="manitory">*</span></label>
                            <div class="input-group">
                                <span class="input-group-text" id="basic-addon1">ID</span>
                                <input id="zone-name" type="text" class="form-control" aria-describedby="basic-addon1" required>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-sm-4 col-12">
                        <div class="form-check form-switch pt-4 px-5">
                            <input class="form-check-input" type="checkbox" role="switch" id="voucher-primary">
                            <label class="form-check-label">@ViewLocalizer["Primary"]</label>
                        </div>
                    </div>
                    <div class="col-lg-4 col-sm-4 col-12">
                        <div class="form-group">
                            <label>@ViewLocalizer["Tiempo (min.)"]</label>
                            <input id="zone-time" type="text" onkeypress="return onlyDecimalKey(event)" class="form-control" required>
                        </div>
                    </div>
                    <div class="col-lg-4 col-sm-4 col-12">
                        <div class="form-group">
                            <label>@ViewLocalizer["Costo"]</label>
                            <input id="zone-cost" type="text" onkeypress="return onlyDecimalKey(event)" class="form-control" required>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group mb-0">
                            <label>@ViewLocalizer["Activo"]</label>
                            <select id="zone-is-active" class="select">
                                <option value="1"> @ViewLocalizer["Activo"]</option>
                                <option value="0"> @ViewLocalizer["Inactivo"]</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row pt-5">
                    <div class="col-lg-12 col-sm-12 col-12">
                        <div class="d-flex  align-items-center pb-4" style="gap: 5px;">
                            <h6 class="text-left"> @ViewLocalizer["Accounting"]</h6>
                            <div class="add-unit">
                                <a class="add-accounting-item" href="javascript:void(0);">
                                    <img src="/vendor/img/icons/plus1.svg" alt="img">
                                </a>
                            </div>
                        </div>
                        <table class="table reordertable">
                            <thead>
                                <tr>
                                    <td>
                                        @ViewLocalizer["Name"]
                                    </td>
                                    <td>
                                        @ViewLocalizer["Type"]
                                    </td>
                                    <td>
                                        @ViewLocalizer["Number"]
                                    </td>
                                    <td>
                                        @ViewLocalizer["Action"]
                                    </td>
                            </thead>
                            <tbody id="accounting-list">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="edit-zone" type="button" class="btn btn-submit">@ViewLocalizer["Submit"]</button>
                <button type="button" class="btn btn-cancel" data-bs-dismiss="modal">@ViewLocalizer["Cancel"]</button>
            </div>
        </div>
    </div>
</div>

@{
    @await Component.InvokeAsync("Accounting", new { })
}

<script>
	$(document).ready(function(){
		var stationtable = $("#zone-list").DataTable({
			"processing": true, // for show progress bar
			"serverSide": true, // for process server side
			"filter": false, // this is for disable filter (search box)
			"orderMulti": false, // for disable multiple column at once
			"ajax": {
                "url": "/Setting/GetDeliveryZones",
				"type": "POST",
				"datatype": "json"
			},
			'select': {
				'style': 'multi'
			},
			"pageLength": 10,
			"lengthMenu": [10, 25, 50],
			"order": [[2, 'desc']],
			"columns": [
				{
					'data': 'action', 'name': 'action',
					render: function (data, type, row) {
                        return "<a class='me-3' href='javascript:void(0);'  onclick=EditZone('" + row.id + "'); ><img src='/vendor/img/icons/edit.svg' alt='img'></a><a class='me-3' href='javascript:void(0);'  onclick=DeleteZone('" + row.id + "'); ><img src='/vendor/img/icons/delete.svg' alt='img'></a>";
					},
				},
				{ "data": "name", "name": "name", "autoWidth": true },
                {
                    'data': 'isPrimary', 'name': 'isPrimary',
                    render: function (data, type, row) {
                        if (row.isPrimary) {
                            return "<span class='text-success'>YES</span>"
                        }
                        else {
                            return "";
                        }
                    },
                },
                { "data": "time", "name": "time", "autoWidth": true },
                { "data": "cost", "name": "cost", "autoWidth": true },
                {
					'data': 'isActive', 'name': 'isActive',
					render: function (data, type, row) {
						if (row.isActive) {
							return "<span class='badges bg-lightgreen'>@ViewLocalizer["Activo"]</span>";
						}
						else {
							return "<span class='badges bg-lightred'>@ViewLocalizer["Inactivo"]</span>";
						}
					},
					"autoWidth": true
				},
			]
		});

		$("#edit-zone").click(function() {
			var name = $("#zone-name").val();
            var time = parseInt($("#zone-time").val())
            var cost = parseFloatCorrect($("#zone-cost").val())

			if (!name || name == "") {
				toastr.warning("@ViewLocalizer["Please input the name."]", { showMethod: "fadeIn", hideMethod: "fadeOut", timeOut: 2e3 })
				return;
			}

            var id = parseInt($("#AddZone").data("id"));
            var primary = $("#voucher-primary").prop("checked");

			var data = {
				ID : id,
				Name: name,
				Time: time,
                Cost: cost,
                IsPrimary: primary,
                IsActive: $("#zone-is-active").val() == "1"
			};

			$.ajax({
                url: "/Setting/EditDeliveryZone",
				type: "POST",
				data: data,
				success: function (data, textStatus, jqXHR) {
					if (data.status == 0) {
						SaveAccountItems(14, data.id, function () {
							$("#zone-list").DataTable().draw();
							$("#AddZone").modal("hide");
						})

					}
					else if (data.status == 2) {
						toastr.error("@ViewLocalizer["The name and amount should be unique."]", {})
					}
					else {
						toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
					}
				},
				error: function (jqXHR, textStatus, errorThrown) {
					toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
				}
			});
		})
	});

	function AddZone() {
		$("#zone-name").val("");
		$("#zone-amount").val("");
		$("#zone-time").val("");
        $("#zone-cost").val("");
		$("#AddZone").data("id", 0);
		GetAccountItems(14, 0)
		$("#AddZone").modal("show");
	}

	function EditZone(id)
	{
		$.ajax({
            url: "/Setting/GetDeliveryZone?id=" + id,
			type: "POST",
            success: function (zone, textStatus, jqXHR) {
                if (zone) {
					$("#zone-name").val(zone.name)
					$("#zone-time").val(zone.time)
                    $("#zone-cost").val(zone.cost)
					if (zone.isActive) {
                        $("#zone-is-active").val(1).change();
					}
					else {
                        $("#zone-is-active").val(0).change();
					}

                    $("#AddZone").data("id", zone.id)
					GetAccountItems(14, zone.id)
                    $("#AddZone").modal("show");
				}
			},
			error: function (jqXHR, textStatus, errorThrown) {
				toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
			}
		});

	}

	function DeleteZone(id)
	{
		Swal.fire({
			title: "@ViewLocalizer["Are you sure to delete the zone?"]",
			text: "",
			type: "warning",
			showCancelButton: !0,
			confirmButtonColor: "#3085d6",
			cancelButtonColor: "#d33",
			confirmButtonText: "@ViewLocalizer["Yes, delete it!"]",
			cancelButtonText: "@ViewLocalizer["Cancel"]",
			confirmButtonClass: "btn btn-primary",
			cancelButtonClass: "btn btn-danger ml-1",
			buttonsStyling: !1,
		}).then(function (t) {
			if (t.value) {
				$.ajax({
                    url: "/Setting/DeleteDeliveryzone?zoneId=" + id,
					type: "POST",
					success: function (data, textStatus, jqXHR) {
						if (data.status == 0) {
							$("#zone-list").DataTable().draw();
						}
						else {
							toastr.error("@ViewLocalizer["Failed to delete the zone."]", {})
						}
					},
					error: function (jqXHR, textStatus, errorThrown) {
						toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
					}
				});
			}

		});
	}
</script>