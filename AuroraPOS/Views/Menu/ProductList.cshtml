



	<!-- Content -->

	<div class="container-xxl flex-grow-1 container-p-y">
		
		<!-- Product List Table -->
		<div class="card">
			<div class="card-header">
				<h5 class="card-title">@ViewLocalizer["Product List"]</h5>
				<div class="d-flex justify-content-between align-items-center row pt-4 gap-6 gap-md-0">
					<div class="col-md-4">
						<input id="filter-searchtext" type="search" class="form-control" placeholder="@ViewLocalizer["Search"]">
					</div>
					<div class="col-md-4">
						<select id="filter-category" class="form-select text-capitalize">
						</select>
					</div>
					<div class="col-md-4">
						<select id="filter-status" class="form-select text-capitalize">
							<option value="">@ViewLocalizer["Elegir estado"]</option>
							<option value="1">@ViewLocalizer["Active"]</option>
							<option value="0">@ViewLocalizer["Inactive"]</option>
						</select>
					</div>
				</div>
			</div>
			<div class="card-datatable table-responsive">
				<table id="product-list" class="table">
					<thead class="border-top">
					<tr>
						<th>@ViewLocalizer["Action"]</th>
						<th>@ViewLocalizer["ID"] </th>
						<th>@ViewLocalizer["Foto"] </th>
						<th>@ViewLocalizer["Name"] </th>
						<th>@ViewLocalizer["Category"] </th>
						<th>@ViewLocalizer["Printer"] </th>
						<th>@ViewLocalizer["Status"]</th>
					</tr>
					</thead>
				</table>
			</div>
		</div>
	</div>
	<!-- / Content -->

<!-- /product list -->
<script>
	$(document).ready(function(){
		LoadCategory();
		
		$("#filter-searchtext").on("change keyup", function(){
			FilterProduct();
		});
		$("#filter-category").on("change", function(){
			FilterProduct();
		});
		$("#filter-status").on("change", function () {
			FilterProduct();
		});

		$("#filter_search").click(function () {
			if ($(this).hasClass("setclose")) {
				$("#filter-category").val("").change();
			}
		});
	});
	function getCookie(cname) {
		let name = cname + "=";
		let ca = document.cookie.split(';');
		for (let i = 0; i < ca.length; i++) {
			let c = ca[i];
			while (c.charAt(0) == ' ') {
				c = c.substring(1);
			}
			if (c.indexOf(name) == 0) {
				return c.substring(name.length, c.length);
			}
		}
		return "";
	}

	var producttable = $("#product-list").DataTable({
		"processing": true, // for show progress bar
		"serverSide": true, // for process server side
		dom:
			'<"card-header d-flex border-top rounded-0 flex-wrap py-0 flex-column flex-md-row align-items-start"' +
			'<"me-5 ms-n4 pe-5 mb-n6 mb-md-0">' +
			'<"d-flex justify-content-start justify-content-md-end align-items-baseline"<"dt-action-buttons d-flex flex-column align-items-start align-items-sm-center justify-content-sm-center pt-0 gap-sm-4 gap-sm-0 flex-sm-row"lB>>' +
			'>t' +
			'<"row"' +
			'<"col-sm-12 col-md-6"i>' +
			'<"col-sm-12 col-md-6"p>' +
			'>',
		"orderMulti": false, // for disable multiple column at once
		"ajax": {
			"url": "/Menu/GetProductList",
			"type": "POST",
			"datatype": "json",
			"complete": function () {
				$( ".imgzoom" ).each(function() {
					$(this).on( "mouseenter", function() {
						var popupContent = document.createElement("div");
						popupContent.classList.add("popupDiv");
						popupContent.innerHTML = "<img src='" + $(this).attr('src') + "' alt = 'zoomimg' style='height: 450px'> ";

						popupContent.style.position = "absolute";

						popupContent.style.top = ($(this).offset().top + -200)+ "px";
						popupContent.style.left = ($(this).offset().left + 50)+ "px";
						popupContent.style.backgroundColor = "white";
						popupContent.style.padding = "5px";
						popupContent.style.boxShadow = "0 2px 5px rgba(0, 0, 0, 0.5)";
						popupContent.style.zIndex = "9999";
						popupContent.style.borderRadius = "10px";
						document.body.appendChild(popupContent);

						$(this).on( "mouseleave", function() {
							//document.body.removeChild(popupContent);
							$(".popupDiv").remove();
						});



					});
				});

			}
		},
		'select': {
			'style': 'multi'
		},
		"pageLength": 10,
		"lengthMenu": [10, 25, 50],
		"order": [[1, 'asc']],
		"columns": [
			{
				'data': 'action', 'name': 'action',
				render: function (data, type, row) {
					return "<a class='me-3' href='/Menu/AddProduct?productId=" + row.id + "' ><img src='/vendor/img/icons/edit.svg' alt='img'></a><a class='me-3' href='javascript:void(0);'  onclick=CopyProduct('" + row.id + "'); ><img src='/vendor/img/icons/copy.png' width='25' alt='img'></a>";
				},
			},
			{ "data": "id", "name": "id", "autoWidth": true },
			{
				'data': 'photo', 'name': 'photo',
				render: function (data, type, row) {
					if (!row.photo) {
						return "<img src='/vendor/img/product/product1.jpg' alt = 'supplier' class='imgzoom'> ";
					}
					else {
						return "<img src='" + row.photo + "' alt = 'supplier' style='max-height:40px; max-width:40px;' class='imgzoom'>";
					}
				},
				"autoWidth": true
			},
			{ "data": "name", "name": "name", "autoWidth": true },
			{ "data": "categoryName", "name": "categoryName", "autoWidth": true },
			{ "data": "printer", "name": "printer", "autoWidth": true },
			{
				'data': 'status', 'name': 'isActive',
				render: function (data, type, row) {
					if (row.isActive) {
						return "<span class='badge bg-label-success' text-capitalized=''>@ViewLocalizer["Active"]</span>";
						
					}
					else {
						return "<span class='badge bg-label-danger' text-capitalized=''>@ViewLocalizer["InActive"]</span>";
					}
				},
				"autoWidth": true
			},
		],
		// Buttons with Dropdown
		buttons: [
			{
				extend: 'collection',
				className: 'btn btn-label-secondary dropdown-toggle me-4 waves-effect waves-light',
				text: '<i class="ti ti-upload me-1 ti-xs"></i>Export',
				buttons: [
					{
						extend: 'print',
						text: '<i class="ti ti-printer me-2" ></i>Print',
						className: 'dropdown-item',
						exportOptions: {
							columns: [1, 3, 4, 5, 6],
							format: {
								body: function (inner, coldex, rowdex) {
									if (inner.length <= 0) return inner;
									var el = $.parseHTML(inner);
									var result = '';
									$.each(el, function (index, item) {
										if (item.classList !== undefined && item.classList.contains('product-name')) {
											result = result + item.lastChild.firstChild.textContent;
										} else if (item.innerText === undefined) {
											result = result + item.textContent;
										} else result = result + item.innerText;
									});
									return result;
								}
							}
						},
						customize: function (win) {
							// Customize print view for dark
							$(win.document.body)
								.css('color', headingColor)
								.css('border-color', borderColor)
								.css('background-color', bodyBg);
							$(win.document.body)
								.find('table')
								.addClass('compact')
								.css('color', 'inherit')
								.css('border-color', 'inherit')
								.css('background-color', 'inherit');
						}
					},
					{
						extend: 'csv',
						text: '<i class="ti ti-file me-2" ></i>Csv',
						className: 'dropdown-item',
						exportOptions: {
							columns: [1, 3, 4, 5, 6],
							format: {
								body: function (inner, coldex, rowdex) {
									if (inner.length <= 0) return inner;
									var el = $.parseHTML(inner);
									var result = '';
									$.each(el, function (index, item) {
										if (item.classList !== undefined && item.classList.contains('product-name')) {
											result = result + item.lastChild.firstChild.textContent;
										} else if (item.innerText === undefined) {
											result = result + item.textContent;
										} else result = result + item.innerText;
									});
									return result;
								}
							}
						}
					},
					{
						extend: 'excel',
						text: '<i class="ti ti-file-export me-2"></i>Excel',
						className: 'dropdown-item',
						exportOptions: {
							columns: [1, 3, 4, 5, 6],
							format: {
								body: function (inner, coldex, rowdex) {
									if (inner.length <= 0) return inner;
									var el = $.parseHTML(inner);
									var result = '';
									$.each(el, function (index, item) {
										if (item.classList !== undefined && item.classList.contains('product-name')) {
											result = result + item.lastChild.firstChild.textContent;
										} else if (item.innerText === undefined) {
											result = result + item.textContent;
										} else result = result + item.innerText;
									});
									return result;
								}
							}
						}
					},
					{
						extend: 'pdf',
						text: '<i class="ti ti-file-text me-2"></i>Pdf',
						className: 'dropdown-item',
						exportOptions: {
							columns: [1, 3, 4, 5, 6],
							format: {
								body: function (inner, coldex, rowdex) {
									if (inner.length <= 0) return inner;
									var el = $.parseHTML(inner);
									var result = '';
									$.each(el, function (index, item) {
										if (item.classList !== undefined && item.classList.contains('product-name')) {
											result = result + item.lastChild.firstChild.textContent;
										} else if (item.innerText === undefined) {
											result = result + item.textContent;
										} else result = result + item.innerText;
									});
									return result;
								}
							}
						}
					},
				]
			},
			{
				text: '<i class="ti ti-plus me-0 me-sm-1 ti-xs"></i><span class="d-none d-sm-inline-block">@ViewLocalizer["Add Product"]</span>',
				className: 'add-new btn btn-primary ms-2 ms-sm-0 waves-effect waves-light',
				action: function () {
					window.location.href = "/Menu/AddProduct";
				}
			}
		]
	});
	$('.dataTables_length').addClass('mx-n2');
	$('.dt-buttons').addClass('d-flex flex-wrap mb-6 mb-sm-0');

	function CopyProduct(id) {
		Swal.fire({
			title: "@ViewLocalizer["Are you sure to copy the product?"]",
			text: "",
			type: "warning",
			showCancelButton: !0,
			confirmButtonColor: "#3085d6",
			cancelButtonColor: "#d33",
			confirmButtonText: "@ViewLocalizer["Yes"]",
			confirmButtonClass: "btn btn-primary",
			cancelButtonText: "@ViewLocalizer["Close"]",
			cancelButtonClass: "btn btn-danger ml-1",
			buttonsStyling: !1,
		}).then(function (t) {
			if (t.value) {
				$.ajax({
					url: "/Menu/CopyProduct?productId=" + id,
					type: "POST",
					contentType: 'application/json;',
					dataType: 'json',
					success: function (data, textStatus, jqXHR) {
						FilterProduct()
					},
					error: function (jqXHR, textStatus, errorThrown) {
						toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
					}
				});
			}
		});		
	}

	function LoadCategory()
	{
		$.ajax({
			url: "/Menu/GetAllActiveCategoryList",
            type: "POST",
            success: function (data, textStatus, jqXHR) {
				$("#filter-category").empty();
				$("#filter-category").append("<option value='' selected>@ViewLocalizer["Choose category"]</option>")
				for(var i =0; i < data.length; i++)
				{
					var d = data[i];
					$("#filter-category").append("<option value='" + d.id + "'>" + d.name + "</option>")
				}
				$("#filter-category").select2();
					
				var brand = getCookie("productCategory");
				if (brand && brand !== "")
				{
					$("#filter-category").val(brand).change();
				}
            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
            }
        });
	}

	function FilterProduct() {
		var searchText = $("#filter-searchtext").val();
		var category = $("#filter-category").val();
		var status = $("#filter-status").val();
		setCookie("productCategory", category, 1);

		producttable.columns(0).search(searchText);
		producttable.columns(1).search(category);
		producttable.columns(3).search(status);

		producttable.draw();
	}
</script>