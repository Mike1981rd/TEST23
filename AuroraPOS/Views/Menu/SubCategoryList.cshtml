<!-- Content -->
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
	var categories = (List<Category>)ViewBag.Categories;
}

<div class="container-xxl flex-grow-1 container-p-y">

	<!-- Product List Table -->
	<div class="card">
		<div class="card-header">
			<h5 class="card-title">@ViewLocalizer["Sub Category"]</h5>
		</div>
		<div class="card-datatable table-responsive">
			<table id="subcategory-list" class="table">
				<thead class="border-top">
					<tr>
						<th>@ViewLocalizer["Action"]</th>
						<th>@ViewLocalizer["Name"]</th>
						<th>@ViewLocalizer["Category"]</th>
						<th>@ViewLocalizer["Description"]</th>
						<th>@ViewLocalizer["Status"]</th>
					</tr>
				</thead>
			</table>
		</div>
	</div>
</div>
<!-- / Content -->
<!-- add / edit Modal -->
<div class="modal fade" id="editsubcategory" tabindex="-1" role="dialog" data-bs-backdrop="static" aria-hidden="true" data-id="">
	<div class="modal-dialog modal-lg modal-simple modal-edit-user" role="document">
		<div class="modal-content">
			<div class="modal-body">
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				<div class="text-center mb-6">
					<h4 class="mb-2">
						@ViewLocalizer["Edit SubCategory"]
					</h4>
				</div>
				<div class="row">
					<div class="col-12 col-md-6 fv-plugins-icon-container">
						<div class="form-group">
							<label class="form-label">@ViewLocalizer["Sub Category Name"]<span class="manitory">*</span></label>
							<input id="subcategory-name" type="text" value="" required class="form-control">
						</div>
					</div>
					<div class="col-12 col-md-6 fv-plugins-icon-container">
						<div class="form-group">
							<label class="form-label">@ViewLocalizer["Parent Category"]<span class="manitory">*</span></label>
							<select id="subcategory-category" class="select form-select">
								<option value="">@ViewLocalizer["Choose Category"]</option>
								@foreach (var c in categories)
								{
									<option value="@c.ID"> @c.Name</option>
								}

							</select>
						</div>
					</div>
					<div class="col-12 col-md-6 fv-plugins-icon-container">
						<div class="form-group mb-0">
							<label class="form-label">@ViewLocalizer["Status"]</label>
							<select id="subcategory-status" class="select form-select">
								<option value="1"> @ViewLocalizer["Active"]</option>
								<option value="0"> @ViewLocalizer["InActive"]</option>
							</select>
						</div>
					</div>
					<div class="col-12  fv-plugins-icon-container">
						<div class="form-group">
							<label class="form-label">@ViewLocalizer["Description"]</label>
							<textarea id="subcategory-note" rows="5" cols="5" class="form-control" placeholder="@ViewLocalizer["Enter text here"]"></textarea>
						</div>
					</div>

				</div>
			</div>
			<div class="col-12 text-center">
				<button type="submit" id="edit-subcategory" class="btn btn-primary me-3 waves-effect waves-light">@ViewLocalizer["Submit"]</button>
				<button type="reset" class="btn btn-label-secondary waves-effect" data-bs-dismiss="modal" aria-label="Close">@ViewLocalizer["Cancel"]</button>
			</div>
		</div>
	</div>
</div>
<script>

	$(document).ready(function () {
		LoadWarehouse();

		$("#filter-searchtext").on("change keyup", function () {
			FilterProduction()
		});

		$("#filter-warehouse").change(function () {
			FilterProduction()
		});

		$("#filter_search").click(function () {
			if ($(this).hasClass("setclose")) {
				$("#filter-warehouse").val("").change();
			}

		});
		function getCookie(cname) {
			let name = cname + "=";
			let ca = document.cookie.split(';');
			for (let i = 0; i < ca.length; i++) {
				let c = ca[i];
				while (c.charAt(0) == ' ') {
					c = c.substring(1);
				}
				if (c.indexOf(name) == 0) {
					return c.substring(name.length, c.length);
				}
			}
			return "";
		}
		$(".btn-excel").click(function () {
			var searchText = $("#filter-searchtext").val();
			var warehouse = $("#filter-warehouse").val();

			$.ajax({
				type: "POST",
				contentType: 'application/json; charset=utf-8',
				dataType: 'json',
				url: "/Inventory/DownloadProductionExcel?search=" + searchText + "&warehouse=" + warehouse,
				success: function (d) {
					if (d.status == 0) {
						var link = document.createElement('a');
						link.href = d.result;
						link.download = 'Productions_@DateTime.Today.ToString("dd-MM-yyyy")' + ".csv";
						link.dispatchEvent(new MouseEvent('click'));
					}
					else {
						toastr.error(d.message, {})
					}
				},
				error: function () {
					toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
				}

			});
		});

		$(".btn-pdf").click(function () {
			var searchText = $("#filter-searchtext").val();
			var warehouse = $("#filter-warehouse").val();

			$.ajax({
				type: "POST",
				url: "/Inventory/DownloadProductionPDF?search=" + searchText + "&warehouse=" + warehouse,
				success: function (data) {
					if (data.status == 0) {
						window.open(data.url, '_blank');
					}
				},
				error: function () {
					toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
				}
			});
		});


	})

	var subcategorytable = $("#subcategory-list").DataTable({
		"processing": true, // for show progress bar
		"serverSide": true, // for process server side
		dom:
			'<"card-header d-flex border-top rounded-0 flex-wrap py-0 flex-column flex-md-row align-items-start"' +
			'<"me-5 ms-n4 pe-5 mb-n6 mb-md-0">' +
			'<"d-flex justify-content-start justify-content-md-end align-items-baseline"<"dt-action-buttons d-flex flex-column align-items-start align-items-sm-center justify-content-sm-center pt-0 gap-sm-4 gap-sm-0 flex-sm-row"lB>>' +
			'>t' +
			'<"row"' +
			'<"col-sm-12 col-md-6"i>' +
			'<"col-sm-12 col-md-6"p>' +
			'>',
		"orderMulti": false, // for disable multiple column at once
		"ajax": {
			"url": "/Menu/GetSubCategoryList",
			"type": "POST",
			"datatype": "json",
			"complete": function () {
				$(".imgzoom").each(function () {
					$(this).on("mouseenter", function () {
						var popupContent = document.createElement("div");
						popupContent.classList.add("popupDiv");
						popupContent.innerHTML = "<img src='" + $(this).attr('src') + "' alt = 'zoomimg' style='height: 450px'> ";

						popupContent.style.position = "absolute";

						popupContent.style.top = ($(this).offset().top + -200) + "px";
						popupContent.style.left = ($(this).offset().left + 50) + "px";
						popupContent.style.backgroundColor = "white";
						popupContent.style.padding = "5px";
						popupContent.style.boxShadow = "0 2px 5px rgba(0, 0, 0, 0.5)";
						popupContent.style.zIndex = "9999";
						popupContent.style.borderRadius = "10px";
						document.body.appendChild(popupContent);

						$(this).on("mouseleave", function () {
							//document.body.removeChild(popupContent);
							$(".popupDiv").remove();
						});



					});
				});

			}
		},
		'select': {
			'style': 'multi'
		},
		"pageLength": 10,
		"lengthMenu": [10, 25, 50],
		"order": [[1, 'asc']],
		"columns": [
			{
				'data': 'action', 'name': 'action',
				render: function (data, type, row) {
					return "<a class='me-3' href='javascript:void(0);' onclick='EditSubCategory(" + JSON.stringify(row) + ")'><img src='/vendor/img/icons/edit.svg' alt='img'></a><a class='me-3' href='javascript:void(0);'  onclick=DeleteSubCategory('" + row.id + "'); ><img src='/vendor/img/icons/delete.svg' alt='img'></a>";
				},
			},
			{ "data": "name", "name": "name", "autoWidth": true },
			{ "data": "categoryName", "name": "categoryName", "autoWidth": true },
			{ "data": "description", "name": "description", "autoWidth": true },
			{
				'data': 'status', 'name': 'isActive',
				render: function (data, type, row) {
					if (row.isActive) {
						return "<span class='badge bg-label-success' text-capitalized=''>@ViewLocalizer["Active"]</span>";

					}
					else {
						return "<span class='badge bg-label-danger' text-capitalized=''>@ViewLocalizer["InActive"]</span>";
					}
				},
				"autoWidth": true
			},
		],
		// Buttons with Dropdown
		buttons: [
			{
				extend: 'collection',
				className: 'btn btn-label-secondary dropdown-toggle me-4 waves-effect waves-light',
				text: '<i class="ti ti-upload me-1 ti-xs"></i>Export',
				buttons: [
					{
						extend: 'print',
						text: '<i class="ti ti-printer me-2" ></i>Print',
						className: 'dropdown-item',
						exportOptions: {
							columns: [1, 3, 4, 5, 6],
							format: {
								body: function (inner, coldex, rowdex) {
									if (inner.length <= 0) return inner;
									var el = $.parseHTML(inner);
									var result = '';
									$.each(el, function (index, item) {
										if (item.classList !== undefined && item.classList.contains('subcategory-name')) {
											result = result + item.lastChild.firstChild.textContent;
										} else if (item.innerText === undefined) {
											result = result + item.textContent;
										} else result = result + item.innerText;
									});
									return result;
								}
							}
						},
						customize: function (win) {
							// Customize print view for dark
							$(win.document.body)
								.css('color', headingColor)
								.css('border-color', borderColor)
								.css('background-color', bodyBg);
							$(win.document.body)
								.find('table')
								.addClass('compact')
								.css('color', 'inherit')
								.css('border-color', 'inherit')
								.css('background-color', 'inherit');
						}
					},
					{
						extend: 'csv',
						text: '<i class="ti ti-file me-2" ></i>Csv',
						className: 'dropdown-item',
						exportOptions: {
							columns: [1, 3, 4, 5, 6],
							format: {
								body: function (inner, coldex, rowdex) {
									if (inner.length <= 0) return inner;
									var el = $.parseHTML(inner);
									var result = '';
									$.each(el, function (index, item) {
										if (item.classList !== undefined && item.classList.contains('subcategory-name')) {
											result = result + item.lastChild.firstChild.textContent;
										} else if (item.innerText === undefined) {
											result = result + item.textContent;
										} else result = result + item.innerText;
									});
									return result;
								}
							}
						}
					},
					{
						extend: 'excel',
						text: '<i class="ti ti-file-export me-2"></i>Excel',
						className: 'dropdown-item',
						exportOptions: {
							columns: [1, 3, 4, 5, 6],
							format: {
								body: function (inner, coldex, rowdex) {
									if (inner.length <= 0) return inner;
									var el = $.parseHTML(inner);
									var result = '';
									$.each(el, function (index, item) {
										if (item.classList !== undefined && item.classList.contains('subcategory-name')) {
											result = result + item.lastChild.firstChild.textContent;
										} else if (item.innerText === undefined) {
											result = result + item.textContent;
										} else result = result + item.innerText;
									});
									return result;
								}
							}
						}
					},
					{
						extend: 'pdf',
						text: '<i class="ti ti-file-text me-2"></i>Pdf',
						className: 'dropdown-item',
						exportOptions: {
							columns: [1, 3, 4, 5, 6],
							format: {
								body: function (inner, coldex, rowdex) {
									if (inner.length <= 0) return inner;
									var el = $.parseHTML(inner);
									var result = '';
									$.each(el, function (index, item) {
										if (item.classList !== undefined && item.classList.contains('subcategory-name')) {
											result = result + item.lastChild.firstChild.textContent;
										} else if (item.innerText === undefined) {
											result = result + item.textContent;
										} else result = result + item.innerText;
									});
									return result;
								}
							}
						}
					},
				]
			},

			{
				text: '<i class="ti ti-plus me-0 me-sm-1 ti-xs"></i><span class="d-none d-sm-inline-block">@ViewLocalizer["Add Sub Category"]</span>',
				className: 'add-new btn btn-primary ms-2 ms-sm-0 waves-effect waves-light',
				action: function () {
					$("#subcategory-name").val("");
					$("#subcategory-note").val("");
					$("#subcategory-category").val("").change()

					$("#subcategory-status").val(1).change();
					$(".subcategory-modal-title").html("@ViewLocalizer["Add Sub Category"]");
					$("#editsubcategory").data("id", 0);
					$("#editsubcategory").modal("show");
				}
			}
		]
	});
	$('.dataTables_length').addClass('mx-n2');
	$('.dt-buttons').addClass('d-flex flex-wrap mb-6 mb-sm-0');

	function EditSubCategory(subcategory) {
		$("#subcategory-name").val(subcategory.name);
		$("#subcategory-note").val(subcategory.description);
		$("#subcategory-category").val("" + subcategory.categoryID).change();
		if (subcategory.isActive) {
			$("#subcategory-status").val(1).change();
		}
		else {
			$("#subcategory-status").val(0).change();
		}
		$(".subcategory-modal-title").html("@ViewLocalizer["Edit Sub Category"]");
		$("#editsubcategory").data("id", subcategory.id);
		$("#editsubcategory").modal("show");
	}

	$("#edit-subcategory").click(function () {
		var name = $("#subcategory-name").val();
		if (!name || name == "") {
			toastr.warning("@ViewLocalizer["Please input the name."]", { showMethod: "fadeIn", hideMethod: "fadeOut", timeOut: 2e3 })
			return;
		}
		var category = parseInt($("#subcategory-category").val());
		if (!category || category == 0) {
			toastr.warning("@ViewLocalizer["Please select the parent category."]", { showMethod: "fadeIn", hideMethod: "fadeOut", timeOut: 2e3 })
			return;
		}
		var note = $("#subcategory-note").val();
		var active = $("#subcategory-status").val()
		var data = {
			ID: $("#editsubcategory").data("id"),
			Name: name,
			CategoryID: category,
			Description: note,
			IsActive: active == "1"
		}

		$.ajax({
			url: "/Menu/EditSubCategory",
			type: "POST",
			data: data,
			success: function (data, textStatus, jqXHR) {
				if (data.status == 0) {
					subcategorytable.draw();
					$("#editsubcategory").modal("hide");
				}
				else if (data.status == 2) {
					toastr.error("@ViewLocalizer["The name should be unique."]", {})
				}
				else {
					toastr.error("@ViewLocalizer["Failed to update the sub category."]", {})
				}
			},
			error: function (jqXHR, textStatus, errorThrown) {
				toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
			}
		});
	});

	function DeleteSubCategory(id) {

	   Swal.fire({
	       title: "@ViewLocalizer["Are you sure to delete the sub category?"]",
	       text: "",
	       type: "warning",
	       showCancelButton: !0,
	       confirmButtonColor: "#3085d6",
	       cancelButtonColor: "#d33",
	       confirmButtonText: "@ViewLocalizer["Yes, delete it!"]",
	       cancelButtonText: "@ViewLocalizer["Cancel"]",
	       confirmButtonClass: "btn btn-primary",
	       cancelButtonClass: "btn btn-danger ml-1",
	       buttonsStyling: !1,
	   }).then(function (t) {
	       if (t.value) {
	           $.ajax({
	               url: "/Menu/DeleteSubCategoory?subcategoryId=" + id,
	               type: "POST",
	               success: function (data, textStatus, jqXHR) {
	                   if (data.status == 0) {
	                       subcategorytable.draw();
	                   }
	                   else {
	                       toastr.error("@ViewLocalizer["Failed to delete the sub category."]", {})
	                   }
	               },
	               error: function (jqXHR, textStatus, errorThrown) {
	                   toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
	               }
	           });
	       }

	   });

	}
</script>