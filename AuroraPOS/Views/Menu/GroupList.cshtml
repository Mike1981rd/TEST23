<!-- Content -->

<div class="container-xxl flex-grow-1 container-p-y">

	<!-- Product List Table -->
	<div class="card">
		<div class="card-header">
			<h5 class="card-title">@ViewLocalizer["Groups"]</h5>
			<div class="d-flex justify-content-between align-items-center row pt-4 gap-6 gap-md-0">
				<div class="col-md-5">
					<input id="filter-searchtext" type="search" class="form-control" placeholder="@ViewLocalizer["Search"]">
				</div>
				<div class="col-md-5">
					<select id="filter-status" class="form-select text-capitalize">
						<option value="">@ViewLocalizer["Elegir estado"]</option>
						<option value="1">@ViewLocalizer["Active"]</option>
						<option value="0">@ViewLocalizer["Inactive"]</option>
					</select>
				</div>
			</div>
		</div>
		<div class="card-body">
			<div class="card-datatable table-responsive">
				<table id="group-list" class="table">
					<thead class="table-light">
						<tr>
							<th>@ViewLocalizer["Action"]</th>
							<th>@ViewLocalizer["Group name"]</th>
							<th>@ViewLocalizer["Note"]</th>
							<th>@ViewLocalizer["Status"]</th>
						</tr>
					</thead>
				</table>
			</div>
		</div>
	</div>
</div>

<!-- add / edit Modal -->
<div class="modal fade" id="editgroup" tabindex="-1" role="dialog" data-bs-backdrop="static" aria-hidden="true" data-id="">
	<div class="modal-dialog modal-lg modal-simple modal-edit-user" role="document">
		<div class="modal-content">
			
			<div class="modal-body">
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				<div class="text-center mb-6">
					<h4 class="mb-2">
						@ViewLocalizer["Edit Group"]
					</h4>
				</div>
				<div class="row">
					<div class="col-12 col-md-6">
						<div class="form-group">
							<label class="form-label">@ViewLocalizer["Group name"]<span class="manitory">*</span></label>
							<input id="egroup-name" type="text" value="SGST 4.5%	" required class="form-control">
						</div>
					</div>
					
					<div class="col-12 col-md-6">
						<div class="form-group mb-0">
							<label class="form-label">@ViewLocalizer["Status"]</label>
							<select id="egroup-status" class="select form-select">
								<option value="1"> @ViewLocalizer["Active"]</option>
								<option value="0"> @ViewLocalizer["InActive"]</option>
							</select>
						</div>
					</div>
					<div class="col-12 ">
						<div class="form-group">
							<label class="form-label">@ViewLocalizer["Note"]</label>
							<textarea id="egroup-note" rows="5" cols="5" class="form-control" placeholder="@ViewLocalizer["Enter text here"]"></textarea>
						</div>
					</div>
				</div>
				</br>
				<div class="col-12 ">
					<div class="col mb-2">
						<div class="d-flex justify-content-left search-id-group" style="gap: 10px; align-items:center">
							<h6 class="text-left" style="margin: 0;">@ViewLocalizer["Accounting"]</h6>
							<div class="add-icon">
								<a href="javascript:void(0);" class="add-accounting-item btn btn-primary waves-effect waves-light" style="padding: 0; margin: 0;">
									<img src="/vendor/img/icons/plus1.svg" alt="img">
								</a>
							</div>
						</div>
					</div>
					<table class="table reordertable">
						<thead class="table-light">
							<tr>
								<td>
									@ViewLocalizer["Name"]
								</td>
								<td>
									@ViewLocalizer["Type"]
								</td>
								<td>
									@ViewLocalizer["Number"]
								</td>
								<td>
									@ViewLocalizer["Action"]
								</td>
						</thead>
						<tbody id="accounting-list">
						</tbody>
					</table>
				</div>
			</div>
			<div class="col-12 text-center">
				<button type="submit" id="edit-group" class="btn btn-primary me-3 waves-effect waves-light">@ViewLocalizer["Submit"]</button>
				<button type="reset" class="btn btn-label-secondary waves-effect" data-bs-dismiss="modal" aria-label="Close">@ViewLocalizer["Cancel"]</button>
			</div>
		</div>
	</div>
</div>
<!-- / Content -->
<!-- /product list -->
@{
	@await Component.InvokeAsync("Accounting", new { })
}
<script>

	$(document).ready(function () {
		$("#filter-searchtext").on("change keyup", function () {
			FilterGroup()
		});
		$("#filter-status").on("change", function () {
			FilterGroup()
		});

		$("#filter_search").click(function () {

		});
	});
	function getCookie(cname) {
		let name = cname + "=";
		let ca = document.cookie.split(';');
		for (let i = 0; i < ca.length; i++) {
			let c = ca[i];
			while (c.charAt(0) == ' ') {
				c = c.substring(1);
			}
			if (c.indexOf(name) == 0) {
				return c.substring(name.length, c.length);
			}
		}
		return "";
	}


	var grouptable = $("#group-list").DataTable({
		"processing": true, // for show progress bar
		"serverSide": true, // for process server side
		dom:
			'<"card-header d-flex border-top rounded-0 flex-wrap py-0 flex-column flex-md-row align-items-start"' +
			'<"me-5 ms-n4 pe-5 mb-n6 mb-md-0">' +
			'<"d-flex justify-content-start justify-content-md-end align-items-baseline"<"dt-action-buttons d-flex flex-column align-items-start align-items-sm-center justify-content-sm-center pt-0 gap-sm-4 gap-sm-0 flex-sm-row"lB>>' +
			'>t' +
			'<"row"' +
			'<"col-sm-12 col-md-6"i>' +
			'<"col-sm-12 col-md-6"p>' +
			'>',
		"orderMulti": false, // for disable multiple column at once
		"ajax": {
			"url": "/Menu/GetGroupList",
			"type": "POST",
			"datatype": "json",
			"complete": function () {
				$(".imgzoom").each(function () {
					$(this).on("mouseenter", function () {
						var popupContent = document.createElement("div");
						popupContent.classList.add("popupDiv");
						popupContent.innerHTML = "<img src='" + $(this).attr('src') + "' alt = 'zoomimg' style='height: 450px'> ";

						popupContent.style.position = "absolute";

						popupContent.style.top = ($(this).offset().top + -200) + "px";
						popupContent.style.left = ($(this).offset().left + 50) + "px";
						popupContent.style.backgroundColor = "white";
						popupContent.style.padding = "5px";
						popupContent.style.boxShadow = "0 2px 5px rgba(0, 0, 0, 0.5)";
						popupContent.style.zIndex = "9999";
						popupContent.style.borderRadius = "10px";
						document.body.appendChild(popupContent);

						$(this).on("mouseleave", function () {
							//document.body.removeChild(popupContent);
							$(".popupDiv").remove();
						});



					});
				});

			}
		},
		'select': {
			'style': 'multi'
		},
		"pageLength": 50,
		"lengthMenu": [10, 25, 50],
		"order": [[1, 'asc']],
		"columns": [
			{
				'data': 'action', 'name': 'action',
				render: function (data, type, row) {
					return "<a class='me-3' href='javascript:void(0);' onclick='EditGroup(" + JSON.stringify(row) + ")'><img src='/vendor/img/icons/edit.svg' alt='img'></a><a class='me-3' href='javascript:void(0);'  onclick=DeleteGroup('" + row.id + "'); ><img src='/vendor/img/icons/delete.svg' alt='img'></a>";
				},
			},
			{ "data": "groupName", "name": "groupName", "autoWidth": true },
			{ "data": "note", "name": "note", "autoWidth": true },
			{
				'data': 'status', 'name': 'isActive',
				render: function (data, type, row) {
					if (row.isActive) {
						return "<span class='badge bg-label-success' text-capitalized=''>@ViewLocalizer["Active"]</span>";

					}
					else {
						return "<span class='badge bg-label-danger' text-capitalized=''>@ViewLocalizer["InActive"]</span>";
					}
				},
				"autoWidth": true
			},
		],
		// Buttons with Dropdown
		buttons: [
			{
				extend: 'collection',
				className: 'btn btn-label-secondary dropdown-toggle me-4 waves-effect waves-light',
				text: '<i class="ti ti-upload me-1 ti-xs"></i>Export',
				buttons: [
					{
						extend: 'print',
						text: '<i class="ti ti-printer me-2" ></i>Print',
						className: 'dropdown-item',
						exportOptions: {
							columns: [1, 3, 4, 5, 6],
							format: {
								body: function (inner, coldex, rowdex) {
									if (inner.length <= 0) return inner;
									var el = $.parseHTML(inner);
									var result = '';
									$.each(el, function (index, item) {
										if (item.classList !== undefined && item.classList.contains('group-name')) {
											result = result + item.lastChild.firstChild.textContent;
										} else if (item.innerText === undefined) {
											result = result + item.textContent;
										} else result = result + item.innerText;
									});
									return result;
								}
							}
						},
						customize: function (win) {
							// Customize print view for dark
							$(win.document.body)
								.css('color', headingColor)
								.css('border-color', borderColor)
								.css('background-color', bodyBg);
							$(win.document.body)
								.find('table')
								.addClass('compact')
								.css('color', 'inherit')
								.css('border-color', 'inherit')
								.css('background-color', 'inherit');
						}
					},
					{
						extend: 'csv',
						text: '<i class="ti ti-file me-2" ></i>Csv',
						className: 'dropdown-item',
						exportOptions: {
							columns: [1, 3, 4, 5, 6],
							format: {
								body: function (inner, coldex, rowdex) {
									if (inner.length <= 0) return inner;
									var el = $.parseHTML(inner);
									var result = '';
									$.each(el, function (index, item) {
										if (item.classList !== undefined && item.classList.contains('group-name')) {
											result = result + item.lastChild.firstChild.textContent;
										} else if (item.innerText === undefined) {
											result = result + item.textContent;
										} else result = result + item.innerText;
									});
									return result;
								}
							}
						}
					},
					{
						extend: 'excel',
						text: '<i class="ti ti-file-export me-2"></i>Excel',
						className: 'dropdown-item',
						exportOptions: {
							columns: [1, 3, 4, 5, 6],
							format: {
								body: function (inner, coldex, rowdex) {
									if (inner.length <= 0) return inner;
									var el = $.parseHTML(inner);
									var result = '';
									$.each(el, function (index, item) {
										if (item.classList !== undefined && item.classList.contains('group-name')) {
											result = result + item.lastChild.firstChild.textContent;
										} else if (item.innerText === undefined) {
											result = result + item.textContent;
										} else result = result + item.innerText;
									});
									return result;
								}
							}
						}
					},
					{
						extend: 'pdf',
						text: '<i class="ti ti-file-text me-2"></i>Pdf',
						className: 'dropdown-item',
						exportOptions: {
							columns: [1, 3, 4, 5, 6],
							format: {
								body: function (inner, coldex, rowdex) {
									if (inner.length <= 0) return inner;
									var el = $.parseHTML(inner);
									var result = '';
									$.each(el, function (index, item) {
										if (item.classList !== undefined && item.classList.contains('group-name')) {
											result = result + item.lastChild.firstChild.textContent;
										} else if (item.innerText === undefined) {
											result = result + item.textContent;
										} else result = result + item.innerText;
									});
									return result;
								}
							}
						}
					},
				]
			},
			{
				text: '<i class="ti ti-plus me-0 me-sm-1 ti-xs"></i><span class="d-none d-sm-inline-block">@ViewLocalizer["Add Group"]</span>',
				className: 'add-new btn btn-primary ms-2 ms-sm-0 waves-effect waves-light',
				action: function () {
					$("#egroup-name").val("");
					$("#egroup-note").val("");

					$("#egroup-status").val(1).change();
					$(".group-modal-title").html("@ViewLocalizer["Add Group"]");
					$("#editgroup").data("id", 0);
					$("#editgroup").modal("show");

					GetAccountItems(13, 0);
				}
			}
		]
	});
	$('.dataTables_length').addClass('mx-n2');
	$('.dt-buttons').addClass('d-flex flex-wrap mb-6 mb-sm-0');


	$("#add-group").click(function () {
		$("#egroup-name").val("");
		$("#egroup-note").val("");

		$("#egroup-status").val(1).change();
		$(".group-modal-title").html("@ViewLocalizer["Add Group"]");
		$("#editgroup").data("id", 0);
		$("#editgroup").modal("show");

		GetAccountItems(13, 0);
	});

	function EditGroup(group) {
		$("#egroup-name").val(group.groupName);
		$("#egroup-note").val(group.note);
		if (group.isActive) {
			$("#egroup-status").val(1).change();
		}
		else {
			$("#egroup-status").val(0).change();
		}
		$(".group-modal-title").html("@ViewLocalizer["Add Group"]");
		$("#editgroup").data("id", group.id);

		GetAccountItems(13, group.id);
		$("#editgroup").modal("show");
	}

	$("#edit-group").click(function () {
		var groupName = $("#egroup-name").val();
		if (!groupName || groupName == "") {
			toastr.warning("@ViewLocalizer["Please input the group name."]", { showMethod: "fadeIn", hideMethod: "fadeOut", timeOut: 2e3 })
			return;
		}
		var note = $("#egroup-note").val();
		var active = $("#egroup-status").val()
		var data = {
			ID: $("#editgroup").data("id"),
			GroupName: groupName,
			Note: note,
			IsActive: active == "1"
		}

		$.ajax({
			url: "/Menu/EditGroup",
			type: "POST",
			data: data,
			success: function (data, textStatus, jqXHR) {
				if (data.status == 0) {
					SaveAccountItems(13, data.id, function () {
						grouptable.draw();
						$("#editgroup").modal("hide");
					})
				}
				else if (data.status == 2) {
					toastr.error("@ViewLocalizer["The group name should be unique."]", {})
				}
				else {
					toastr.error("@ViewLocalizer["Failed to update the group."]", {})
				}
			},
			error: function (jqXHR, textStatus, errorThrown) {
				toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
			}
		});
	});

	function DeleteGroup(id) {

	    Swal.fire({
	        title: "@ViewLocalizer["Are you sure to delete the group?"]",
	        text: "",
	        type: "warning",
	        showCancelButton: !0,
	        confirmButtonColor: "#3085d6",
	        cancelButtonColor: "#d33",
	        confirmButtonText: "@ViewLocalizer["Yes, delete it!"]",
	        cancelButtonText: "@ViewLocalizer["Cancel"]",
	        confirmButtonClass: "btn btn-primary",
	        cancelButtonClass: "btn btn-danger ml-1",
	        buttonsStyling: !1,
	    }).then(function (t) {
	        if (t.value) {
	            $.ajax({
	                url: "/Menu/DeleteGroup?groupId=" + id,
	                type: "POST",
	                success: function (data, textStatus, jqXHR) {
	                    if (data.status == 0) {
	                        grouptable.draw();
	                    }
	                    else {
	                        toastr.error("@ViewLocalizer["Failed to delete the group."]", {})
	                    }
	                },
	                error: function (jqXHR, textStatus, errorThrown) {
	                    toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
	                }
	            });
	        }

	    });

	}

	function FilterGroup() {
		var searchText = $("#filter-searchtext").val();
		var status = $("#filter-status").val();

		grouptable.columns(0).search(searchText);
		grouptable.columns(1).search(status);

		grouptable.draw();
	}
</script>