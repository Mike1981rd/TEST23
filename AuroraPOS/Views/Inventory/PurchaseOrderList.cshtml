<!-- Content -->

<div class="container-xxl flex-grow-1 container-p-y">

	<!-- Product List Table -->
	<div class="card">
		<div class="card-header">
			<h5 class="card-title">@ViewLocalizer["Purchase Order List"]</h5>
			<div class="d-flex justify-content-between align-items-center row pt-4 gap-6 gap-md-0">
				<div class="col-md-2">
					<input id="filter-searchtext" type="search" class="form-control" placeholder="@ViewLocalizer["Search"]">
				</div>
				<div class="col-md-2">
					<select id="filter-status" class="form-select text-capitalize">
						<option value="">@ViewLocalizer["Choose Status"]</option>
						<option value="1">@ViewLocalizer["Pending"]</option>
						<option value="2">@ViewLocalizer["Ordered"]</option>
						<option value="3">@ViewLocalizer["Canceled"]</option>
						<option value="4">@ViewLocalizer["Received"]</option>
					</select>
				</div>
				<div class="col-md-2">
					<input id="purchaseorder_filter_datefrom" type="text" class="form-control datetimepicker cal-icon" placeholder="@ViewLocalizer["Order Date From"]" data-format="DD-MM-YYYY">
				</div>
				<div class="col-md-2">
					<input id="purchaseorder_filter_dateto" type="text" class="form-control datetimepicker cal-icon" placeholder="@ViewLocalizer["Order Date To"]" data-format="DD-MM-YYYY">
				</div>
				<div class="col-md-2">
					<select id="filter-supplier" class="select">
						<option>Choose Supplier</option>
						<option>Supplier</option>
					</select>
				</div>
			</div>
		</div>
		<div class="card-body">
			<div class="card-datatable table-responsive">
				<table id="purchase-list" class="table">
					<thead class="table-light">
						<tr>
							<th>@ViewLocalizer["Action"]</th>
							<th>@ViewLocalizer["ID"] </th>
							<th>@ViewLocalizer["Supplier"] </th>
							<th>@ViewLocalizer["Warehouse"] </th>
							<th>@ViewLocalizer["NCF"] </th>
							<th>@ViewLocalizer["Date"]</th>
							<th>@ViewLocalizer["Sub Total"]</th>
							<th>@ViewLocalizer["Grand Total"]</th>
							<th>@ViewLocalizer["Status"]</th>
						</tr>
					</thead>
				</table>
			</div>
		</div>

	</div>
</div>
<!-- / Content -->
<!-- /product list -->
<script>
	$(document).ready(function () {
		LoadSupplier();

		$("#filter-searchtext").on("change keyup", function () {
			FilterPurchaseOrder()
		});

		$("#filter-supplier").change(function () {
			FilterPurchaseOrder()
		});

		$("#filter-status").change(function () {
			FilterPurchaseOrder()
		});

		$("#filter_search").click(function () {
			if ($(this).hasClass("setclose")) {
				$("#purchaseorder_filter_datefrom").val("").change();
				$("#purchaseorder_filter_dateto").val("").change();
				$("#filter-supplier").val("").change();
				$("#filter-status").val("").change();
			}

		});

		function getCookie(cname) {
			let name = cname + "=";
			let ca = document.cookie.split(';');
			for (let i = 0; i < ca.length; i++) {
				let c = ca[i];
				while (c.charAt(0) == ' ') {
					c = c.substring(1);
				}
				if (c.indexOf(name) == 0) {
					return c.substring(name.length, c.length);
				}
			}
			return "";
		}

		$(".btn-excel").click(function () {
			var searchText = $("#filter-searchtext").val();
			var datefrom = $("#purchaseorder_filter_datefrom").val();
			var dateto = $("#purchaseorder_filter_dateto").val();
			var supplier = $("#filter-supplier").val();
			var status = $("#filter-status").val();

			$.ajax({
				type: "POST",
				contentType: 'application/json; charset=utf-8',
				dataType: 'json',
				url: "/Inventory/DownloadPurchaseOrderExcel?search=" + searchText + "&supplier=" + supplier + "&datefrom=" + datefrom + "&dateto=" + dateto + "&status=" + status,
				success: function (d) {
					if (d.status == 0) {
						var link = document.createElement('a');
						link.href = d.result;
						link.download = 'PurchaseOrder_@DateTime.Today.ToString("dd-MM-yyyy")' + ".csv";
						link.dispatchEvent(new MouseEvent('click'));
					}
					else {
						toastr.error(d.message, {})
					}
				},
				error: function () {
					toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
				}

			});
		});

		$(".btn-pdf").click(function () {
			var searchText = $("#filter-searchtext").val();
			var datefrom = $("#purchaseorder_filter_datefrom").val();
			var dateto = $("#purchaseorder_filter_dateto").val();
			var supplier = $("#filter-supplier").val();
			var status = $("#filter-status").val();


			$.ajax({
				type: "POST",
				url: "/Inventory/DownloadPurchaseOrderPDF?search=" + searchText + "&supplier=" + supplier + "&datefrom=" + datefrom + "&dateto=" + dateto + "&status=" + status,
				success: function (data) {
					if (data.status == 0) {
						window.open(data.url, '_blank');
					}
				},
				error: function () {
					toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
				}
			});
		});

	});
	function LoadSupplier() {
		$.ajax({
			url: "/Inventory/GetAllActiveSuppliers",
			type: "POST",
			success: function (data, textStatus, jqXHR) {
				$("#filter-supplier").empty();
				$("#filter-supplier").append("<option value='' selected>@ViewLocalizer["Choose supplier"]</option>")
				for (var i = 0; i < data.length; i++) {
					var d = data[i];
					$("#filter-supplier").append("<option value='" + d.id + "'>" + d.name + "</option>")
				}
				$("#filter-supplier").select2();
			},
			error: function (jqXHR, textStatus, errorThrown) {
				toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
			}
		});
	}


	var purchaseordertable = $("#purchase-list").DataTable({
		"processing": true, // for show progress bar
		"serverSide": true, // for process server side
		dom:
			'<"card-header d-flex border-top rounded-0 flex-wrap py-0 flex-column flex-md-row align-items-start"' +
			'<"me-5 ms-n4 pe-5 mb-n6 mb-md-0">' +
			'<"d-flex justify-content-start justify-content-md-end align-items-baseline"<"dt-action-buttons d-flex flex-column align-items-start align-items-sm-center justify-content-sm-center pt-0 gap-sm-4 gap-sm-0 flex-sm-row"lB>>' +
			'>t' +
			'<"row"' +
			'<"col-sm-12 col-md-6"i>' +
			'<"col-sm-12 col-md-6"p>' +
			'>',
		"orderMulti": false, // for disable multiple column at once
		"ajax": {
			"url": "/Inventory/GetPurchaseOrderList",
			"type": "POST",
			"datatype": "json",
			"complete": function () {
				$(".imgzoom").each(function () {
					$(this).on("mouseenter", function () {
						var popupContent = document.createElement("div");
						popupContent.classList.add("popupDiv");
						popupContent.innerHTML = "<img src='" + $(this).attr('src') + "' alt = 'zoomimg' style='height: 450px'> ";

						popupContent.style.position = "absolute";

						popupContent.style.top = ($(this).offset().top + -200) + "px";
						popupContent.style.left = ($(this).offset().left + 50) + "px";
						popupContent.style.backgroundColor = "white";
						popupContent.style.padding = "5px";
						popupContent.style.boxShadow = "0 2px 5px rgba(0, 0, 0, 0.5)";
						popupContent.style.zIndex = "9999";
						popupContent.style.borderRadius = "10px";
						document.body.appendChild(popupContent);

						$(this).on("mouseleave", function () {
							//document.body.removeChild(popupContent);
							$(".popupDiv").remove();
						});



					});
				});

			}
		},
		'select': {
			'style': 'multi'
		},
		"pageLength": 50,
		"lengthMenu": [10, 25, 50],
		"order": [[1, 'asc']],
		"columns": [
			{
				'data': 'action', 'name': 'action',
				render: function (data, type, row) {
					return "<a class='me-3' href='/Inventory/AddPurchaseOrder?purchaseOrderID=" + row.id + "' ><img src='/vendor/img/icons/edit.svg' alt='img'></a>";
				},
			},
			{ "data": "id", "name": "id", "autoWidth": true },
			{ "data": "supplier", "name": "supplier", "autoWidth": true },
			{ "data": "warehouse", "name": "warehouse", "autoWidth": true },
			{ "data": "ncf", "name": "ncf", "autoWidth": true },
			{ "data": "orderDate", "name": "realOrderDate", "autoWidth": true },
			{
				"data": "subTotal", "name": "subTotal", "autoWidth": true,
				render: function (data, type, row) {
					return numberWithCommas(row.subTotal.toFixed(2));
				},
			},
			{
				"data": "total", "name": "total", "autoWidth": true,
				render: function (data, type, row) {
					return numberWithCommas(row.total.toFixed(2));
				},
			},
			{
				'data': 'status', 'name': 'status',
				render: function (data, type, row) {
					if (row.status == 1) {
						return "<span class='badges bg-lightyellow'>@ViewLocalizer["Pending"]</span>";
					} else if (row.status == 2) {
						return "<span class='badges bg-lightpurple'>@ViewLocalizer["Ordered"]</span>";
					} else if (row.status == 3) {
						return "<span class='badges bg-lightred'>@ViewLocalizer["Canceled"]</span>";
					} else if (row.status == 4) {
						return "<span class='badges bg-lightgreen'>@ViewLocalizer["Received"]</span>";
					}
				},
				"autoWidth": true
			},
		],
		// Button
		buttons: [
			{
				extend: 'collection',
				className: 'btn btn-label-secondary dropdown-toggle me-4 waves-effect waves-light',
				text: '<i class="ti ti-upload me-1 ti-xs"></i>Export',
				buttons: [
					{
						extend: 'print',
						text: '<i class="ti ti-printer me-2" ></i>Print',
						className: 'dropdown-item',
						exportOptions: {
							columns: [1, 3, 4, 5, 6],
							format: {
								body: function (inner, coldex, rowdex) {
									if (inner.length <= 0) return inner;
									var el = $.parseHTML(inner);
									var result = '';
									$.each(el, function (index, item) {
										if (item.classList !== undefined && item.classList.contains('id')) {
											result = result + item.lastChild.firstChild.textContent;
										} else if (item.innerText === undefined) {
											result = result + item.textContent;
										} else result = result + item.innerText;
									});
									return result;
								}
							}
						},
						customize: function (win) {
							// Customize print view for dark
							$(win.document.body)
								.css('color', headingColor)
								.css('border-color', borderColor)
								.css('background-color', bodyBg);
							$(win.document.body)
								.find('table')
								.addClass('compact')
								.css('color', 'inherit')
								.css('border-color', 'inherit')
								.css('background-color', 'inherit');
						}
					},
					{
						extend: 'csv',
						text: '<i class="ti ti-file me-2" ></i>Csv',
						className: 'dropdown-item',
						exportOptions: {
							columns: [1, 3, 4, 5, 6],
							format: {
								body: function (inner, coldex, rowdex) {
									if (inner.length <= 0) return inner;
									var el = $.parseHTML(inner);
									var result = '';
									$.each(el, function (index, item) {
										if (item.classList !== undefined && item.classList.contains('id')) {
											result = result + item.lastChild.firstChild.textContent;
										} else if (item.innerText === undefined) {
											result = result + item.textContent;
										} else result = result + item.innerText;
									});
									return result;
								}
							}
						}
					},
					{
						extend: 'excel',
						text: '<i class="ti ti-file-export me-2"></i>Excel',
						className: 'dropdown-item',
						exportOptions: {
							columns: [1, 3, 4, 5, 6],
							format: {
								body: function (inner, coldex, rowdex) {
									if (inner.length <= 0) return inner;
									var el = $.parseHTML(inner);
									var result = '';
									$.each(el, function (index, item) {
										if (item.classList !== undefined && item.classList.contains('id')) {
											result = result + item.lastChild.firstChild.textContent;
										} else if (item.innerText === undefined) {
											result = result + item.textContent;
										} else result = result + item.innerText;
									});
									return result;
								}
							}
						}
					},
					{
						extend: 'pdf',
						text: '<i class="ti ti-file-text me-2"></i>Pdf',
						className: 'dropdown-item',
						exportOptions: {
							columns: [1, 3, 4, 5, 6],
							format: {
								body: function (inner, coldex, rowdex) {
									if (inner.length <= 0) return inner;
									var el = $.parseHTML(inner);
									var result = '';
									$.each(el, function (index, item) {
										if (item.classList !== undefined && item.classList.contains('id')) {
											result = result + item.lastChild.firstChild.textContent;
										} else if (item.innerText === undefined) {
											result = result + item.textContent;
										} else result = result + item.innerText;
									});
									return result;
								}
							}
						}
					},
				]
			},
			{
				text: '<i class="ti ti-plus me-0 me-sm-1 ti-xs"></i><span class="d-none d-sm-inline-block">@ViewLocalizer["Add PurchaseOrder"]</span>',
				className: 'add-new btn btn-primary ms-2 ms-sm-0 waves-effect waves-light',
				action: function () {
					window.location.href = "/Inventory/AddPurchaseOrder";
				}
			}
		]
	});
	$('.dataTables_length').addClass('mx-n2');
	$('.dt-buttons').addClass('d-flex flex-wrap mb-6 mb-sm-0');

	function FilterPurchaseOrder() {
		var searchText = $("#filter-searchtext").val();
		var datefrom = $("#purchaseorder_filter_datefrom").val();
		var dateto = $("#purchaseorder_filter_dateto").val();
		var supplier = $("#filter-supplier").val();
		var status = $("#filter-status").val();

		purchaseordertable.columns(0).search(searchText);
		purchaseordertable.columns(1).search(datefrom);
		purchaseordertable.columns(2).search(supplier);
		purchaseordertable.columns(3).search(status);
		purchaseordertable.columns(4).search(dateto);

		purchaseordertable.draw();
	}
</script>