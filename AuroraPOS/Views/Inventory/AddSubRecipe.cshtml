@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    var groups = (List<Group>)ViewBag.Groups;
    var taxs = (List<Tax>)ViewBag.Taxes;
    var printerChannels = (List<PrinterChannel>)ViewBag.PrinterChannels;
    var categories = (List<Category>)ViewBag.Categories;
    var stocks = (List<WarehouseStock>)ViewBag.Stocks;
    var products = (List<Product>)ViewBag.Products; ;
}
<div class="content-wrapper">

    <!-- Content -->

    <div class="container-xxl flex-grow-1 container-p-y">


        <div class="app-ecommerce">

            <!-- Add Product -->
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-6 row-gap-4">

                <div class="d-flex flex-column justify-content-center">
                    <h4 class="mb-1">@ViewLocalizer["Create Sub Recipe"]</h4>
                    <p class="mb-0">@ViewLocalizer["Add/Update Sub Recipe"]</p>
                </div>
                <div class="d-flex align-content-center flex-wrap gap-4">
                    <a id="submit" href="javascript:void(0);" class="btn btn-primary waves-effect waves-light">@ViewLocalizer["Submit"]</a>
                    <a id="cancel" href="/Menu/ProductList" class="btn btn-label-secondary waves-effect">@ViewLocalizer["Cancel"]</a>
                </div>

            </div>

            <div class="row">
                <!-- First column-->
                <div class="col-12 col-lg-8">
                    <!-- Product Information -->
                    <div class="card mb-6">
                        <div class="card-header">
                            <h5 class="card-tile mb-0">Información de producto</h5>
                        </div>
                        <div class="card-body">
                            <div class="mb-6">
                                <label class="form-label" for="ecommerce-product-name">@ViewLocalizer["Name"]</label>
                                <input type="text" class="form-control" id="article-name" placeholder="Product title">
                            </div>
                            <div class="row mb-6">
                                <div class="col">
                                    <label class="form-label" for="ecommerce-product-sku">@ViewLocalizer["Category"]</label>
                                    <div class="d-flex">
                                        <select id="article-category" class="select form-modal">
                                            <option value="">@ViewLocalizer["Choose category"]</option>
                                            @foreach (var c in categories)
                                            {
                                                <option value="@c.ID">@c.Name</option>
                                            }
                                        </select>
                                        <div class="add-icon">
                                            <a id="add-category-modal" href="javascript:void(0);" class="btn btn-primary waves-effect waves-light me-2">
                                                <img src="/vendor/img/icons/plus1.svg" alt="img">
                                            </a>
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div class="row mb-6">
                                <div class="col">
                                    <label class="form-label" for="ecommerce-product-sku">@ViewLocalizer["Sub Category"]</label>
                                    <div class="d-flex">
                                        <select id="article-subcategory" class="select form-control">
                                        </select>
                                        <div class="add-icon">
                                            <a id="add-subcategory-modal" href="javascript:void(0);" class="btn btn-primary waves-effect waves-light me-2">
                                                <img src="/vendor/img/icons/plus1.svg" alt="img">
                                            </a>
                                        </div>
                                    </div>

                                </div>
                            </div>

                            <div class="row mb-6">
                                <div class="col">
                                    <label class="form-label" for="ecommerce-product-barcode">@ViewLocalizer["Status"]</label>
                                    <select id="article-status" class="select form-control">
                                        <option value="1">@ViewLocalizer["Active"]</option>
                                        <option value="0">@ViewLocalizer["Inactive"]</option>
                                    </select>
                                </div>
                            </div>

                            <div class="row mb-6">
                                <div class="col">
                                    <label class="form-label">@ViewLocalizer["Maximum"]</label>
                                    <input id="article-max" onkeypress="return onlyDecimalKey(event)" type="text" class="form-control">
                                </div>
                            </div>

                            <div class="row mb-6">
                                <div class="col">
                                    <label class="form-label" for="ecommerce-product-barcotaggingde">
                                        @ViewLocalizer["Unit"]/label>
                                    <select id="max-unit" class="select form-control">
                                    </select>
                                </div>
                            </div>

                            <div class="row mb-6">
                                <div class="col">
                                    <label>&nbsp;</label>
                                    <div class="form-group mt-1">
                                        <button id="calculate-minmax" class="btn btn-primary ">Calcular</button>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb-6">
                                <div class="col">
                                    <label class="form-label">@ViewLocalizer["Existencia de seguridad(%)"]</label>
                                    <input id="article-saftystock" onkeypress="return onlyDecimalKey(event)" type="text" class="form-control">
                                </div>
                            </div>
                            <div class="row mb-6">
                                <div class="col">
                                    <label class="form-label" for="ecommerce-product-barcode">@ViewLocalizer["Barcode"]</label>
                                    <div class="d-flex">
                                        <div class="col-8">
                                            <input id="subrecipe-barcode" type="text" class="form-control">
                                        </div>
                                        <div class="col-4">
                                            <button id="print-label" class="btn btn-primary waves-effect waves-light me-2">Generate Barcode</button>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                      
                        <!-- Variants -->
                        <div class=" mb-6">
                            <div class="card-header">
                                <h5 class="card-title mb-0">Características</h5>
                            </div>
                            <div class="card-body">
                                <form class="form-repeater">
                                    <div data-repeater-list="group-a">
                                        <div data-repeater-item="">
                                            <div class="row mb-6">
                                                <div class="col">
                                                    <h6 for="ecommerce-product-barcode">@ViewLocalizer["Units"]</h6>
                                                    <div class="add-icon mx-1">
                                                        <a id="unit-plus" href="javascript:void(0);" class="btn btn-primary waves-effect waves-light me-2">
                                                            <img src="/vendor/img/icons/plus1.svg" alt="img">
                                                        </a>
                                                    </div>
                                                    <br />
                                                    <div class="card-datatable table-responsive" style="max-height: 300px; overflow:auto;">
                                                        <table class="table" style="position:relative;">
                                                            <thead class="border-top" style="position: sticky; top: 0; z-index:2;">
                                                                <tr>
                                                                    <th>@ViewLocalizer["NO"] </th>
                                                                    <th>@ViewLocalizer["Name"] </th>
                                                                    <th style="width:150px;">@ViewLocalizer["Label"]</th>
                                                                    <th>@ViewLocalizer["Qty"]</th>
                                                                    <th>@ViewLocalizer["Cost"]</th>
                                                                    <th>@ViewLocalizer["CodBar"]</th>
                                                                    <th>@ViewLocalizer["Peso Tara"]</th>
                                                                    <th>@ViewLocalizer["Units"]</th>
                                                                    <th></th>
                                                                </tr>
                                                            </thead>
                                                            <tbody id="unit-body">
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row mb-6">
                                                <div class="col">
                                                    <h6 for="ecommerce-product-barcode">@ViewLocalizer["Stocks"]</h6>
                                                    <div class="card-datatable table-responsive">
                                                        <table class="table">
                                                            <thead class="border-top">
                                                                <tr>
                                                                    <th>Almacen </th>
                                                                    <th>Unidad	</th>
                                                                    <th>Disponible</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody id="warehouse-stock">
                                                                @foreach (var s in stocks)
                                                                {
                                                                    <tr data-qty="@s.Qty.ToString("0.0000")">
                                                                        <td>@s.Warehouse.WarehouseName</td>
                                                                        <td>
                                                                            <select class="warehouse-stock-unit select">
                                                                            </select>
                                                                        <td class="stock-qty">@s.Qty.ToString("0.0000")</td>
                                                                    </tr>
                                                                }
                                                            </tbody>
                                                        </table>
                                                    </div>


                                                </div>
                                            </div>
                                            <div class="row mb-6">
                                                <div class="col">
                                                    <h6 for="ecommerce-product-barcode">@ViewLocalizer["Products"]</h6>
                                                    <div class="card-datatable table-responsive">
                                                        <table class="table">
                                                            <thead class="border-top">
                                                                <tr>
                                                                    <th>ID </th>
                                                                    <th>Name	</th>
                                                                    <th>Category</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                @foreach (var s in products)
                                                                {
                                                                    <tr>
                                                                        <td>@s.ID</td>
                                                                        <td>@s.Name</td>
                                                                        <td>@s.Category.Name</td>
                                                                    </tr>
                                                                }
                                                            </tbody>
                                                        </table>
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="row mb-6">
                                               
                                                <div class="col">
                                                    <div class="row pt-2">
                                                        <div class="card-datatable table-responsive">
                                                            <table id="purchase-item" class="table">
                                                                <thead class="border-top">
                                                                    <tr>
                                                                        <th>@ViewLocalizer["Name"]</th>
                                                                        <th>@ViewLocalizer["Type"]</th>
                                                                        <th>@ViewLocalizer["Brand"]</th>
                                                                        <th>@ViewLocalizer["Performance"] (%)</th>
                                                                        <th style="max-width:100px;">  @ViewLocalizer["QTY"]  </th>
                                                                        <th>@ViewLocalizer["Unit"]	</th>
                                                                        <th>@ViewLocalizer["Price"] ($)	</th>
                                                                        <th>@ViewLocalizer["Sub Total"] ($)</th>
                                                                        <th></th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody id="item-list">
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                   

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div>
                                    </div>
                                </form>
                            </div>
                        </div>
              

                            <!-- /Navigation -->
                            <!-- /Options-->
                        </div>
                    </div>
                <div class="col-12 col-lg-4">
                    <!-- Pricing Card -->
                    <div class="card mb-6">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Opciones</h5>
                        </div>
                        <div class="card-body">
                            <!-- Base Price -->
                            <div class="mb-6">
                                <a id="add-article-modal" href="javascript:void(0);" class="btn btn-primary waves-effect waves-light me-2">@ViewLocalizer["Add Article"]</a>
                            </div>
                            <!-- Discounted Price -->
                            <div class="mb-6">
                                <a id="add-subrecipe-modal" href="javascript:void(0);" class="btn btn-primary waves-effect waves-light me-2">@ViewLocalizer["Add Sub Recipe"]</a>
                            </div>
                            <div class="mb-6">
                                <a id="print-recipe" href="javascript:void(0);" class="btn btn-default  btn-info me-2 p-2">@ViewLocalizer["Print Recipe"]</a>
                            </div>
                            <div class="mb-6">
                                
                            </div>
                            <div class="mb-6">
                                <label class="form-label" for="ecommerce-product-discount-price">@ViewLocalizer["Unit"]</label>
                                <select id="subrecipe-unit" class="select form-control">
                                </select>
                            </div>
                            <div class="mb-6">
                                <div class="total-order">
                                    <ul>
                                        <li class="total">
                                            <h4>@ViewLocalizer["Total"]</h4>
                                            <h5 id="po-total">$ 0.00</h5>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <label class="form-label" for="ecommerce-product-barcode">@ViewLocalizer["Status"]</label>
                            <select id="product-status" class="select form-control">
                                <option value="1">@ViewLocalizer["Active"]</option>
                                <option value="0">@ViewLocalizer["Inactive"]</option>
                            </select>
                        </div>
                    </div>
                    <!-- /Pricing Card -->

                </div>
                </div>
                <!-- /Inventory -->
                <!-- /Second column -->
                <!-- Second column -->
               
            </div>
          
        </div>
        <!-- /Second column -->
    </div>
</div>

<!-- Unit Modal -->
<div class="modal fade" id="editunit" tabindex="-1" role="dialog" aria-hidden="true" data-id="">
    <div class="modal-dialog modal-lg modal-simple" role="document">
        <div class="modal-content">
@*             <div class="modal-header">
                <h5 class="group-modal-title">@ViewLocalizer["Add/Edit Unit"]</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div> *@
            <div class="modal-body">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <div class="text-center mb-6">
                    <h4 class="mb-2">
                        @ViewLocalizer["Add/Edit Unit"]
                    </h4>
                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="form-group">
                            <label class="form-label">@ViewLocalizer["Unit Name"]<span class="manitory">*</span></label>
                            <div class="d-flex justify-content-between search-id-group" style="gap: 10px">
                                <div class="input-group">
                                    <span class="input-group-text" id="unit-id" data-id="">ID</span>
                                    <input id="unit-name" type="text" class="form-control" aria-describedby="basic-addon1" required>
                                </div>
                                <button id="edit-unit" type="button" class="btn btn-submit">@ViewLocalizer["Submit"]</button>
                            </div>

                        </div>
                        <div class="page-btn">
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="card-datatable table-responsive w-100" style="max-height:400px;">
                            <table id="unit-list" class="table" style="position:relative;">
                                <thead class="border-top" style="position: sticky; top: 0; z-index:2;">
                                    <tr>
                                        <th>@ViewLocalizer["Unit Name"]</th>
                                        <th>@ViewLocalizer["Action"]</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <button id="cancel-unit" type="button" class="btn btn-label-secondary waves-effect" data-bs-dismiss="modal">@ViewLocalizer["Cancel"]</button>
            </div>
        </div>
    </div>
</div>


<!-- Article Modal -->
    @{
    @await Component.InvokeAsync("ArticleList", new {  })
    }
<!-- Sub Recipe Modal -->
<div class="modal fade" id="listsubrecipe" data-bs-backdrop="static" tabindex="-1" role="dialog" aria-hidden="true" data-id="">
    <div class="modal-dialog modal-lg modal-simple" role="document">
        <div class="modal-content">
@*             <div class="modal-header">
                <h5 class="group-modal-title">@ViewLocalizer["Sub Recipe List"]</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div> *@
            <div class="modal-body">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <div class="text-center mb-6">
                    <h4 class="mb-2">
                        @ViewLocalizer["Sub Recipe List"]
                    </h4>
                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="card-datatable table-responsive w-100" style="max-height:400px;">
                            <table id="subrecipe-list" class="table">
                                <thead class="border-top">
                                    <tr>
                                        <th>@ViewLocalizer["Select"]</th>
                                        <th>@ViewLocalizer["Name"] </th>
                                        <th>@ViewLocalizer["Category"] </th>
                                        <th>@ViewLocalizer["Sub Category"]</th>
                                        <th>@ViewLocalizer["Status"]</th>

                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="cancel-article" type="button" class="btn btn-label-secondary waves-effect" data-bs-dismiss="modal">@ViewLocalizer["Cancel"]</button>
            </div>
        </div>
    </div>
</div>

<!-- Category Modal -->
    @{
    @await Component.InvokeAsync("AddCategory", new {  })
    }

    <!-- Category Modal -->
    @{
    @await Component.InvokeAsync("AddSubCategory", new {  })
    }

<!-- Sub Stock Modal -->
<div class="modal fade" id="liststock" data-bs-backdrop="static" tabindex="-1" role="dialog" aria-hidden="true" data-id="">
    <div class="modal-dialog modal-lg modal-simple" role="document">
        <div class="modal-content">
@*             <div class="modal-header">
                <h5 class="group-modal-title">@ViewLocalizer["Stock"]</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div> *@
            <div class="modal-body">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <div class="text-center mb-6">
                    <h4 class="mb-2">
                        @ViewLocalizer["Stock"]
                    </h4>
                </div>
                <div class="row">                
                    <div class="col-12">
                       	<div class="card-datatable table-responsive">
					        <table class="table">
                                <thead class="border-top">
							        <tr>
								        <th>Almacen </th>
								        <th>Unidad	</th>
								        <th>Disponible</th>							
							        </tr>
						        </thead>
						        <tbody id="warehouse-stock">
						        @foreach(var s in stocks)
						        {
                                        <tr data-qty="@s.Qty.ToString("0.0000")">
								        <td>@s.Warehouse.WarehouseName</td>	
								        <td>
									        <select class="warehouse-stock-unit select">

									        </select>
								        <td class="stock-qty">@s.Qty.ToString("0.0000")</td>	
							        </tr>
						        }
						        </tbody>
					        </table>
                            </div>
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <button id="cancel-subcategory" type="button" class="btn btn-label-secondary waves-effect" data-bs-dismiss="modal">@ViewLocalizer["Cancel"]</button>
            </div>
        </div>
    </div>
</div>

@{
    @await Component.InvokeAsync("Accounting", new { })
}

<div class="modal fade" id="printlabelmodal" data-bs-backdrop="static" tabindex="-1" role="dialog" aria-hidden="true" data-id="">
    <div class="modal-dialog modal-lg modal-simple" role="document">
        <div class="modal-content">
@*             <div class="modal-header">
                <h5 class="servingsize-modal-title">@ViewLocalizer["Print Label Options"]</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div> *@
            <div class="modal-body">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <div class="text-center mb-6">
                    <h4 class="mb-2">
                        @ViewLocalizer["Print Label Options"]
                    </h4>
                </div>
                <div class="row">
                    <div class="col-lg-12 col-sm-12 col-12">
                        <div class="form-group">
                            <label>@ViewLocalizer["Packing Date"]</label>
                            <input id="label-date" type="text" class="datetimepicker cal-icon" value="@DateTime.Today.ToString("dd/MM/yyyy")">
                        </div>
                    </div>
                    <div class="col-lg-12 col-sm-12 col-12">
                        <div class="form-group">
                            <label>@ViewLocalizer["Expire Date"]</label>
                            <input id="label-expire-date" type="text" class="datetimepicker cal-icon" value="@DateTime.Today.AddDays(10).ToString("dd/MM/yyyy")">
                        </div>
                    </div>
                    <div class="col-lg-12 col-sm-12 col-12">
                        <div class="form-group">
                            <label>@ViewLocalizer["Copies"]</label>
                            <input id="label-copies" type="number" class="form-control" value="1" aria-describedby="basic-addon1" required>
                        </div>
                    </div>
                    <div class="col-lg-6 col-sm-6 col-12 pb-3">
                        <div class="form-group mb-0">
                            <label>@ViewLocalizer["Dimension"]</label>
                            <select id="label-dimension" class="select">
                                <option value="2x3"> 2x3</option>
                                <option value="3x3"> 3x3</option>
                                <option value="3x2"> 3x2</option>
                                <option value="2x2"> 2x2</option>
                               
                                <option value="2x4"> 2x4</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="print-label-submit" type="button" class="btn btn-primary me-3 waves-effect waves-light">@ViewLocalizer["Print"]</button>
                <button type="button" class="btn btn-label-secondary waves-effect" data-bs-dismiss="modal">@ViewLocalizer["Cancel"]</button>
            </div>
        </div>
    </div>
</div>

<script>


    $(document).ready(function(){
        $("#article-category").select2();

        $("#subrecipe-unit").change(function(){
            var num = $(this).val();
            UpdateSubRecipeUnit(num)
        });
        
    })

    function UpdateSubRecipeUnit(num)
    {
        if (num == "1") {
            $("body").find("input").prop("disabled", false);
            $("body").find("select").prop("disabled", false);
            $("body").find("a").removeClass("a-disabled");
        }
        else {
            $("body").find("input").prop("disabled", true);
            $("body").find("select").prop("disabled", true);
            $("body").find("a").addClass("a-disabled");

        }
        var changerate = 1;
        $("#unit-body tr").each(function (index, element) {

            var rate = parseFloat($(this).find(".unit-rate").val());
            var unitnum = $(this).find(".unit-num").text();
            changerate = changerate / rate;
            if (unitnum == num) {
                $("#item-list tr").each(function () {
                    var firstqty = parseFloatCorrect($(this).find(".item-qty").data("firstqty"));
                    if (firstqty && firstqty > 0) {
                        var nqty = firstqty * changerate;
                        $(this).find(".item-qty").val(nqty.toFixed(4));
                    }
                });

                UpdateItems();
            }

        });

        $("#subrecipe-unit").prop("disabled", false);
        $("#cancel").removeClass("a-disabled");
        $("#show-stock-modal").removeClass("a-disabled");
    }

    $("#submit").click(function () {
        var name = $("#article-name").val();
        if (!name || name == "") {
            toastr.warning("@ViewLocalizer["Please input the name."]", { showMethod: "fadeIn", hideMethod: "fadeOut", timeOut: 2e3 })
            return;
        }
        var category = parseInt($("#article-category").val());
        var subcategory = parseInt($("#article-subcategory").val());
        var min = parseFloatCorrect($("#article-min").val());
        var max = parseFloatCorrect($("#article-max").val());
        var minunit = parseInt($("#min-unit").val());
        var maxunit = parseInt($("#max-unit").val());
        var unitnumber = parseInt($("#subrecipe-unit").val());
        var status = $("#article-status").val() == "1";
        var barcode = $("#subrecipe-barcode").val();
        var saftystock = parseInt($("#article-saftystock").val());
        if (!category) category = 0;
        if (!subcategory) subcategory = 0;
        if (!min) min = 0;
        if (!max) max = 0;
        if (!minunit) minunit = 0;
        if (!maxunit) maxunit = 0;

        var itemunits = [];
        $("#unit-body tr").each(function () {
            var num = $(this).find(".unit-num").text();
            var name = $(this).find(".unit-name option:selected").text();
            var unitid = parseInt($(this).find(".unit-name").val());
            var label = $(this).find(".unit-label").text();
            var rate = parseFloatCorrect($(this).find(".unit-rate").val());
            var cost = parseFloatCorrect($(this).find(".unit-cost").val());
            var codbar = $(this).find(".unit-codbar").val();
            var pay = parseFloatCorrect($(this).find(".unit-pay").val());
            var payunit = $(this).find(".unit-payunit").val();

            if (!rate) rate = 0;
            if (!pay) pay = 0;
            if (!cost) cost = 0;
            if (!unitid) unitid = 0;
            var item =
            {
                UnitID: unitid,
                Name: name,
                Number: num,
                Rate: rate,
                Cost: cost,
                CodeBar: codbar,
                PayItem: pay,
            }

            itemunits.push(item);
        })
        var allSubTotal = 0;
        var allTotal = 0;
        var allTax = 0;
        var allDiscount = 0;
        var items = [];
        $("#item-list tr").each(function (i, e) {
            var qty = parseFloatCorrect($(this).find(".item-qty").val());
            if (!qty) qty = "";

            var firstqty = parseFloatCorrect($(this).find(".item-qty").data("firstqty"));
            if (!firstqty) firstqty = 0;

            var unitCost = parseFloatCorrect($(this).find(".item-price").val());
            if (!unitCost) unitCost = 0.00;

            var subTotal = qty * unitCost;

            var articleId = parseInt($(this).data("id"));
            if (!articleId) articleId = 0;

            var itemId = parseInt($(this).data("itemid"));
            if (!itemId) itemId = 0;

            var unitId = parseInt($(this).find(".item-payunit option:selected").data("id"));
            if (!unitId) unitId = 0;

            var isArticle= $(this).data("article") == "1";
            allSubTotal += subTotal;

            var item = {
                ItemID: itemId,
                ArticleID: articleId,
                IsArticle: isArticle,
                FirstQty: firstqty,
                QTY: qty,
                UnitID: unitId,
                UnitPrice: unitCost,
            }

            items.push(item);
        });


        var data = {
            ID: $("#article-id").data("articleid"),
            Name: name,
            CategoryID: category,
            SubCategoryID: subcategory,
            Maximum: max,
            Minimum: min,
            MaxUnitID: maxunit,
            MinUnitID: minunit,
            IsActive: status,
            ItemUnits: itemunits,
            UnitNumber: unitnumber,
            Total: allSubTotal,
            SaftyStock: saftystock,
            Items: items,
            Barcode: barcode
        }

        $.ajax({
            url: "/Inventory/EditSubRecipe",
            type: "POST",
            data: JSON.stringify(data),
            contentType: 'application/json;',
            dataType: 'json',
            success: function (data, textStatus, jqXHR) {
                if (data.status == 0) {
                    window.location.replace("/Inventory/SubRecipeList");
                }
                else if (data.status == 2) {
                    toastr.error("@ViewLocalizer["The name should be unique."]", {})
                }
                else {
                    toastr.error("@ViewLocalizer["Failed to update the sub-recipe."]", {})
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
            }
        });
    });

    // unit
    $("#unit-plus").click(function () {
        if ($("#unit-body tr").length == 4) return;

        var num = $("#unit-body tr").length + 1;

        $("#unit-body").append(
            `
                                <tr>
                                        <td><label class="unit-num">${num}</label></td>
                                        <td>
                                            <div class="d-flex justify-content-between align-items-center" style="gap: 5px;">
                                                <div class="select-container">
                                                    <select class="unit-name form-control form-control-sm" data-num="${num}">
                                                        <option>@ViewLocalizer["Choose Name"]</option>
                                                    </select>
                                                </div>

                                                <div  class="add-unit">
                                                    <a  class="add-new-unit" data-num="${num}"  href="javascript:void(0);" >
                                                        <img src="/vendor/img/icons/plus1.svg" alt="img">
                                                    </a>
                                                </div>
                                            </div>

                                        </td>
                                        <td>
                                            <label class="unit-label"></label>
                                        </td>
                                        <td>
                                                <input class="unit-rate   form-control form-control-sm" onkeypress="return onlyDecimalKey(event)" type="text"/>
                                        </td>
                                        <td>
                                            <input class="unit-cost   form-control form-control-sm" onkeypress="return onlyDecimalKey(event)" type="text" readonly />
                                        </td>
                                        <td>
                                            <input class="unit-codbar form-control form-control-sm" type="text"/>
                                        </td>
                                        <td>
                                            <input class="unit-pay   form-control form-control-sm" onkeypress="return onlyDecimalKey(event)" type="text" />
                                        </td>
                                        <td>
                                            <div class=" select-container">
                                                <select class="unit-payunit form-control form-control-sm">
                                                    <option>@ViewLocalizer["Choose Unit"]</option>
                                                </select>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="remove-btn">
                                                <a href="javascript:void(0);" class="remove-unit"><img src="/vendor/img/icons/delete.svg" alt="svg"></a>
                                            </div>

                                        </td>
                                    </tr>
                                `
        )
        $("#unit-body tr").each(function (index, element) {
            $(this).find(".unit-num").text("" + (index + 1))
        })
        SelectUnit();
    });

    $("body").on("click", ".remove-unit", function () {
        $(this).closest("tr").remove();
     
        RefreshItemUnit();
    });

    $("body").on("change", ".unit-name", function () {
        RefreshItemUnit();
    });

    $("body").on("change", ".unit-cost", function () {
        UpdateItemUnitCosts();
    });

    $("body").on("change", ".unit-rate", function () {
        UpdateItemUnitCosts();
    });

    $("body").on("click", ".add-new-unit", function () {
        var num = $(this).closest("tr").find(".unit-num").text()
        $("#editunit").data("num", num);
        $("#editunit").modal("show");
    });
    //SelectUnit();

    var unittable = $("#unit-list").DataTable({
        "processing": true, // for show progress bar
        "serverSide": true, // for process server side
        "filter": true, // this is for disable filter (search box)
        "orderMulti": false, // for disable multiple column at once
        "paging": false,
        "ajax": {
            "url": "/Inventory/GetUnitList",
            "type": "POST",
            "datatype": "json"
        },
        'select': {
            'style': 'multi'
        },
        "order": [[0, 'asc']],
        "columns": [

            { "data": "name", "name": "name", "autoWidth": true },

            {
                'data': 'action', 'name': 'action', "orderable": "false",
                render: function (data, type, row) {
                    return "<div class='d-flex align-items-center'><a class='me-3 d-inline-block' href='javascript:void(0);' onclick='EditUnit(" + JSON.stringify(row) + ")'><img src='/vendor/img/icons/edit.svg' alt='img'></a><a class='me-3 icons-box d-inline-block' href='javascript:void(0);' onclick='SelectUnit(" + JSON.stringify(row) + ")'><span class='icon'><span class='fa fa-check'></span></span></a></div>";
                },
            },
        ]
    });

    $("#edit-unit").click(function () {
        var name = $("#unit-name").val();
        if (!name || name == "") {
            toastr.warning("@ViewLocalizer["Please input the name."]", { showMethod: "fadeIn", hideMethod: "fadeOut", timeOut: 2e3 })
            return;
        }
        var data = {
            ID: $("#unit-id").data("id"),
            Name: name,
        }

        $.ajax({
            url: "/Inventory/EditUnit",
            type: "POST",
            data: data,
            success: function (data, textStatus, jqXHR) {
                if (data.status == 0) {
                    $("#unit-list").DataTable().draw();
                }
                else if (data.status == 2) {
                    toastr.error("@ViewLocalizer["The name should be unique."]", {})
                }
                else {
                    toastr.error("@ViewLocalizer["Failed to update the unit."]", {})
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
            }
        });
    });

    $("#cancel-unit").click(function () {
        SelectUnit();
    });

    // article
    $("#add-article-modal").click(function () {
        $("#listarticle").modal("show");
    });
        // article
    $("#add-subrecipe-modal").click(function () {
        $("#listsubrecipe").modal("show");
    });
    $("#article-purchase-supplier").change(function () {
        ChangeArticleTable();
    })
     $("#show-stock-modal").click(function () {
        $("#liststock").modal("show");
    });
    ChangeArticleTable();
    //tax
    // initialize
    if (@ViewBag.SubRecipeID != 0) {
        $.ajax({
            url: "/Inventory/GetSubRecipe?subRecipeID=" + @ViewBag.SubRecipeID,
            type: "GET",
            success: function (data, textStatus, jqXHR) {
                if (data) {
                    $("#article-id").data("articleid", data.id)
                    $("#article-name").val(data.name);
                    if (data.category)
                        $("#article-category").val(data.category.id).change();
                    if (data.subCategory)
                        $("#article-subcategory").val(data.subCategory.id).change();
                   
                    $("#article-min").val(data.minimumQuantity);
                    $("#article-max").val(data.maximumQuantity);
                    $("#subrecipe-barcode").val(data.barcode);
                    $("#article-saftystock").val(data.saftyStock)
                    if (!data.barcode) {
                        $("#print-label").text("Generate Barcode");
                    }
                    else {
                        $("#print-label").data("barcode", data.barcode)
                        $("#print-label").text("Print Label");
                    }
                    if (data.isActive) {
                        $("#article-status").val("1").change();
                    }
                    else {
                        $("#article-status").val("0").change();
                    }
                     $("#unit-body").empty();
                    if (data.itemUnits) {
                        for (var i = 0; i < data.itemUnits.length; i++) {
                            var item = data.itemUnits[i];
                            AddUnitItems(item);
                        }
                        $("#min-unit").val(data.minimumUnit).change();
                        $("#max-unit").val(data.maximumUnit).change();
                        $("#subrecipe-unit").val(data.unitNumber).change();

                        $("#warehouse-stock tr").each(function(){
							
							$(this).find(".warehouse-stock-unit").empty();
                            for (var i = 0; i < data.itemUnits.length; i++) {
                                var d = data.itemUnits[i];
								if (d.number == 1)
								{
									$(this).find(".warehouse-stock-unit").append("<option selected data-rate='" + d.rate+ "' value='" + d.number + "'>" + d.name + "</option>")
								}
								else
								{
									$(this).find(".warehouse-stock-unit").append("<option data-rate='" + d.rate+ "'  value='" + d.number + "'>" + d.name + "</option>")
								}
							}
						})
                    }

                    for (var i = 0; i < data.items.length; i++) {
                        var item = data.items[i];

                        $.ajax({
                            url: "/Inventory/GetSubRecipeItem?itemID=" + item.id,
                            type: "GET",
                            success: function (data1, textStatus, jqXHR) {
                                if (data1) {
                                    if (data1.isArticle)
                                    {
                                        var html = `
                                            <tr class="article-item" data-id="${data1.article.id}" data-article='1' data-itemid="${data1.id}">
                                                <td>
                                                    ${data1.article.name}
                                                </td>
                                                <td>
                                                    @ViewLocalizer["Article"]
                                                </td>
                                                <td>
                                                    ${data1.article.brand.name}
                                                </td>
                                                <td>
                                                    ${data1.article.performance}
                                                </td>
                                                <td>
                                                        <input class="item-qty form-control form-control-sm" data-firstqty='${data1.firstQty}' placeholder="0" value="${data1.qty.toFixed(2)}" onkeypress="return onlyDecimalKey(event)" type="text" /></td>
                                                    <td>
                                                        <div class=" select-container">
                                                                <select class="item-payunit form-control form-control-sm"  data-performance='${data1.article.performance}'>
                                                                <option value="">@ViewLocalizer["Choose unit"]</option>
                                                            `
                                                            for (var i = 0; i < data1.article.items.length; i++) {
                                                                var item = data1.article.items[i];
                                                                if (item.number == data1.unitNum) {
                                                                    html += `<option selected value="${item.id}" data-id="${item.number}" data-cost="${item.cost}">${item.name}</option>`;
                                                                }
                                                                else {
                                                                    html += `<option value="${item.id}" data-id="${item.number}" data-cost="${item.cost}">${item.name}</option>`;
                                                                }

                                                            }
                                            html += `	</select>
                                                    </div>
                                                </td>
                                                <td>  <input class="item-price form-control form-control-sm" placeholder="0" value="" readonly type="text" /></td>
                                                    <td><label class="item-subtotal"></lable></td>
                                        
                                                <td>
                                                    <a class="delete-item"><img src="/vendor/img/icons/delete.svg" alt="svg"></a>
                                                </td>
                                            </tr>
                                            `;
                                             $("#item-list").append(html);
                                    }
                                    else
                                    {
                                        var html = `
                                                <tr class="article-item" data-id="${data1.subRecipe.id}"  data-article='0' data-itemid="${data1.id}">
                                                    <td>
                                                        ${data1.subRecipe.name}
                                                    </td>
                                                     <td>
                                                        @ViewLocalizer["Sub Recipe"]
                                                    </td>
                                                    <td>
                                                       
                                                    </td>
                                                    <td></td>
                                                    <td>
                                                            <input class="item-qty form-control form-control-sm"  data-firstqty='${data1.firstQty}' placeholder="0" value="${data1.qty.toFixed(2)}" onkeypress="return onlyDecimalKey(event)" type="text" /></td>
                                                        <td>
                                                            <div class=" select-container">
                                                                <select class="item-payunit form-control form-control-sm" >
                                                                    <option value="">@ViewLocalizer["Choose unit"]"</option>
                                                                `
                                                                for (var i = 0; i < data1.subRecipe.itemUnits.length; i++) {
                                                                    var item = data1.subRecipe.itemUnits[i];
                                                                    if (item.number == data1.unitNum) {
                                                                        html += `<option selected value="${item.id}" data-id="${item.number}" data-cost="${item.cost}">${item.name}</option>`;
                                                                    }
                                                                    else {
                                                                        html += `<option value="${item.id}" data-id="${item.number}" data-cost="${item.cost}">${item.name}</option>`;
                                                                    }

                                                                }
                                                    html += `	</select>
                                                        </div>
                                                    </td>
                                                    <td>  <input class="item-price form-control form-control-sm" placeholder="0" value="" readonly type="text" /></td>
                                                        <td><label class="item-subtotal"></lable></td>

                                                    <td>
                                                        <a class="delete-item"><img src="/vendor/img/icons/delete.svg" alt="svg"></a>
                                                    </td>
                                                </tr>
                                                `;
                                            $("#item-list").append(html);
                                    }
                                    
                                    
                                    UpdateItems();
                                    UpdateSubRecipeUnit(data.unitNumber);
                                      
                                }
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
                            }
                        });
                    }

                   
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
            }
        });
    }

    $("body").on("change", ".warehouse-stock-unit", function () {
			var current = parseInt($(this).find("option:selected").val());
			var origin = parseInt($(this).closest("tr").data("unitid"));
        var qty = parseFloatCorrect($(this).closest("tr").data("qty"));

			var data = {
				ArticleID: @ViewBag.SubRecipeID,
				Qty: qty,
				CurrentNumber: current,
				OriginalNumber: 1
			}
			var element = $(this).closest("tr").find(".stock-qty")
			$.ajax({
				url: "/Inventory/GetConvertedQtyForSubRecipe",
				type: "POST",
				data: JSON.stringify(data),
				contentType: 'application/json;',
				dataType: 'json',
				success: function (data, textStatus, jqXHR) {
					if (data.status == 0) {
						element.text(data.qty);
					}
					else {
						toastr.error("@ViewLocalizer["Failed to update."]", {})
					}
				},
				error: function (jqXHR, textStatus, errorThrown) {
					toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
				}
			});

			
		});


    $("#add-category-modal").click(function () {
        $("#listcategory").modal("show");
    });

    $("body").on("change", ".item-qty", function () {
        var val = $(this).val();
        var unitnum = $("#subrecipe-unit").val();
        if (unitnum == 1)
        {
            $(this).data("firstqty", val);
        }
        UpdateItems();
    });

    $("body").on("change", ".item-payunit", function () {
        var unitCost = parseFloatCorrect($(this).find("option:selected").data("cost"));
         if (!unitCost) unitCost = 0.00;
         $(this).closest("tr").find(".item-price").val(unitCost);
        
        UpdateItems();
    });

    $("body").on("click", "a.delete-item", function () {
        $(this).closest("tr").remove();
        UpdateItems();
    });


    $("#add-subcategory-modal").click(function () {
        $("#listsubcategory").modal("show");
    });

    
    $("#article-category").change(function () {
        SelectSubCategory();
        var category = $("#article-category").val();
        if (!category) return;
        var subcategorytable = $("#subcategory-list").DataTable({
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "destroy": true,
            "ajax": {
                "url": "/Menu/GetSubCategoryList?categoryID=" + category,
                "type": "POST",
                "datatype": "json"
            },
            'select': {
                'style': 'multi'
            },
            "paging": false,
            "order": [[1, 'asc']],
            "columns": [

                { "data": "name", "name": "name", "autoWidth": true },
                { "data": "categoryName", "name": "categoryName", "autoWidth": true },
                { "data": "description", "name": "description", "autoWidth": true },
                {
                    'data': 'status', 'name': 'isActive',
                    render: function (data, type, row) {
                        if (row.isActive) {
                            return "<span class='badges bg-lightgreen'>@ViewLocalizer["Active"]</span>";
                        }
                        else {
                            return "<span class='badges bg-lightred'>@ViewLocalizer["InActive"]</span>";
                        }
                    },
                    "autoWidth": true
                },
                {
                    'data': 'action', 'name': 'action',
                    render: function (data, type, row) {
                        return "<div class='d-flex align-items-center'><a class='me-3 d-inline-block' href='javascript:void(0);' onclick='EditSubCategory(" + JSON.stringify(row) + ")'><img src='/vendor/img/icons/edit.svg' alt='img'></a><a class='me-3 icons-box d-inline-block' href='javascript:void(0);' onclick='SelectSubCategory(" + JSON.stringify(row) + ")'><span class='icon'><span class='fa fa-check'></span></span></a></div>";
                    },
                },
            ]
        });
    })

     var subrecipetable = $("#subrecipe-list").DataTable({
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "ajax": {
            "url": "/Inventory/GetSubRecipeList?currentID=" + @ViewBag.SubRecipeID,
                "type": "POST",
                "datatype": "json"
            },
            "destroy": true,
            'select': {
                'style': 'multi'
            },
            "pageLength": 10,
            "lengthMenu": [10, 25, 50],
            "order": [[1, 'asc']],
            "columns": [
                {
                    'data': 'action', 'name': 'action',
                    render: function (data, type, row) {
                        return "<a class='me-3 icons-box d-inline-block' href='javascript:void(0);' onclick='SelectSubRecipe(" + JSON.stringify(row) + ")'><span class='icon'><span class='fa fa-plus'></span></span></a></div>";
                    },
                },
                { "data": "name", "name": "name", "autoWidth": true },
                { "data": "category", "name": "category", "autoWidth": true },
                { "data": "subCategory", "name": "subCategory", "autoWidth": true },                
                {
                    'data': 'status', 'name': 'isActive',
                    render: function (data, type, row) {
                        if (row.isActive) {
                            return "<span class='badges bg-lightgreen'>@ViewLocalizer["Active"]</span>";
                        }
                        else {
                            return "<span class='badges bg-lightred'>@ViewLocalizer["InActive"]</span>";
                        }
                    },
                    "autoWidth": true
                },
             
            ]
        });


    // unit functions
    function EditUnit(unit) {
        $("#unit-name").val(unit.name);
        $("#unit-id").data("id", unit.id);
        $("#unit-id").text("ID: " + unit.id);
    }

    function SelectUnit(unit, item) {
        var num = $("#editunit").data("num");
        $.ajax({
            url: "/Inventory/GetAllUnits",
            type: "POST",
            success: function (data, textStatus, jqXHR) {
                $(".unit-name").each(function () {
                    var origin = $(this).val();
                    $(this).empty();

                    for (var i = 0; i < data.length; i++) {
                        var d = data[i];
                        $(this).append("<option value='" + d.id + "'>" + d.name + "</option>")
                    }

                    if (unit && $(this).data("num") == num) {
                        $(this).val(unit.id).change();
                        $("#editunit").modal("hide");
                    }
                    else {
                        $(this).val(origin);
                    }
                    if (item && $(this).data("num") == item.number) {
                        $(this).val(item.unitID);
                    }
                })

                $(".unit-payunit").each(function () {
                    var origin = $(this).val();
                    $(this).empty();

                    for (var i = 0; i < data.length; i++) {
                        var d = data[i];
                        $(this).append("<option value='" + d.id + "'>" + d.name + "</option>")
                    }
                    $(this).val(origin);
                })


                RefreshItemUnit();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
            }
        });

        
    }

    //category
    function SelectCategory(category) {
        $.ajax({
            url: "/Menu/GetAllActiveCategoryList",
            type: "POST",
            success: function (data, textStatus, jqXHR) {
                $("#article-category").empty();
                $("#article-category").append("<option value='' selected>Choose category</option>")
                for (var i = 0; i < data.length; i++) {
                    var d = data[i];
                    $("#article-category").append("<option value='" + d.id + "'>" + d.name + "</option>")
                }
                $("#article-category").select2();
                if (category) {
                    $("#article-category").val(category.id).change();
                }
                else {
                    $("#article-category").val('').change();
                }

            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
            }
        });

        $("#listcategory").modal("hide");
    }
   

    // sub category
    function SelectSubCategory(subcategory) {
        var category = $("#article-category").val();
        if (!category) return;
        $.ajax({
            url: "/Menu/GetAllSubCategories?categoryID=" + category,
            type: "POST",
            success: function (data, textStatus, jqXHR) {
                $("#article-subcategory").empty();
                $("#article-subcategory").append("<option value='' selected>Choose sub category</option>")
                for (var i = 0; i < data.length; i++) {
                    var d = data[i];
                    $("#article-subcategory").append("<option value='" + d.id + "'>" + d.name + "</option>")
                }
                $("#article-subcategory").select2();

                if (subcategory) {
                    $("#article-subcategory").val(subcategory.id).change();
                    $("#listsubcategory").modal("hide");
                }
                else if ('@ViewBag.SubCategory' !== '') {
                    $("#article-subcategory").val('@ViewBag.SubCategory').change();
                }
                else {
                    $("#article-subcategory").val('').change();
                }


            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
            }
        });
    }

    // item unit
    function RefreshItemUnit() {
        var units = [];
        var before = ""
        $("#unit-body tr").each(function (index, element) {
            $(this).find(".unit-num").text("" + (index + 1))
            var id = $(this).find(".unit-name  option:selected").val();
            var uval = $(this).find(".unit-name  option:selected").text();
            if (uval) {

                if (before !== "") {
                    $(this).find(".unit-label").text(uval + " / " + before);
                }
                else {
                    $(this).find(".unit-label").text(uval);
                }
                before = uval;
                units.push({
                    id: id,
                    num: index + 1,
                    name: uval
                })
            }

            $("#max-unit").empty();
            $("#max-unit").append("<option value='' selected>Choose unit</option>")
            for (var i = 0; i < units.length; i++) {
                var d = units[i];
                $("#max-unit").append("<option value='" + d.num + "'>" + d.name + "</option>")
            }

            if ('@ViewBag.MaxUnit' !== '') {
                $("#max-unit").val('@ViewBag.MaxUnit').change();
            }
            $("#min-unit").empty();
            $("#min-unit").append("<option value='' selected>Choose unit</option>")
            for (var i = 0; i < units.length; i++) {
                var d = units[i];
                $("#min-unit").append("<option value='" + d.num + "'>" + d.name + "</option>")
            }
            if ('@ViewBag.MinUnit' !== '') {
                $("#min-unit").val('@ViewBag.MinUnit').change();
            }

            $("#subrecipe-unit").empty();
            for (var i = 0; i < units.length; i++) {
                var d = units[i];
                $("#subrecipe-unit").append("<option value='" + d.num + "'>" + d.name + "</option>")
            }
            if ('@ViewBag.SubRecipeUnit' !== '') {
                $("#subrecipe-unit").val('@ViewBag.SubRecipeUnit').change();
            }
        })
    }

    function AddUnitItems(item) {
        var num = 0;
        var readonly = "readonly";
       
        $("#unit-body").append(
            `
                <tr>
                        <td><label class="unit-num">${item.number}</label></td>
                        <td>
                            <div class="d-flex justify-content-between align-items-center" style="gap: 5px;">
                                <div class="select-container">
                                    <select class="unit-name form-control form-control-sm" data-num="${item.number}">
                                        <option>@ViewLocalizer["Choose Name"]</option>
                                    </select>
                                </div>

                                <div  class="add-unit">
                                    <a  class="add-new-unit" data-num="${item.number}"  href="javascript:void(0);" >
                                        <img src="/vendor/img/icons/plus1.svg" alt="img">
                                    </a>
                                </div>
                            </div>

                        </td>
                        <td>
                            <label class="unit-label">${item.name}</label>
                        </td>
                        <td>
                                <input class="unit-rate   form-control form-control-sm" value="${item.rate}" onkeypress="return onlyDecimalKey(event)" type="text"/>
                        </td>
                        <td>
                            <input class="unit-cost   form-control form-control-sm" value="${item.cost}" onkeypress="return onlyDecimalKey(event)" ${readonly} type="text" />
                        </td>
                        <td>
                            <input class="unit-codbar form-control form-control-sm" value="${item.codeBar}" type="text"/>
                        </td>
                        <td>
                            <input class="unit-pay   form-control form-control-sm" value="${item.payItem}"  onkeypress="return onlyDecimalKey(event)" type="text" />
                        </td>
                        <td>
                            <div class=" select-container">
                                <select class="unit-payunit form-control form-control-sm">
                                    <option>@ViewLocalizer["Choose Unit"]</option>
                                </select>
                            </div>
                        </td>
                        <td>
                            <div class="remove-btn">
                                <a href="javascript:void(0);" class="remove-unit"><img src="/vendor/img/icons/delete.svg" alt="svg"></a>
                            </div>

                        </td>
                    </tr>
                `
        )

        SelectUnit(null, item);
    }

    function UpdateItemUnitCosts() {
        var beforecost = 0;
        var beforerate = 0;
        $("#unit-body tr").each(function (index, element) {
            if (index == 0) {
                beforecost = parseFloatCorrect($(this).find(".unit-cost").val());
                beforerate = parseFloatCorrect($(this).find(".unit-rate").val());
            }
            else {
                if (beforecost > 0 && beforerate > 0) {
                    var secondrate = parseFloatCorrect($(this).find(".unit-rate").val());
                    if (secondrate != 0) {
                        var secondcost = beforecost / secondrate;
                        $(this).find(".unit-cost").val(secondcost.toFixed(4));
                        beforerate = secondrate;
                        beforecost = secondcost;
                    }

                }
                else{
                     $(this).find(".unit-cost").val("");
                }

            }
        });
    }

    // add item
    function SelectArticle(article) {
        if (!article.isActive) {
            toastr.error("@ViewLocalizer["The article is inactive."]", {})
            return;
        }

        $.ajax({
            url: "/Inventory/GetArticle?articleID=" + article.id,
            type: "GET",
            success: function (data, textStatus, jqXHR) {
                if (data) {
                    var html = `
                            <tr class="article-item" data-id="${data.id}" data-article='1' data-itemid="">
                                <td>
                                    ${data.name}
                                </td>
                                <td>
                                    Article
                                </td>
                                <td>${data.brand.name}</td>
                                <td>${data.performance}</td>
                                <td>
                                    <input class="item-qty form-control form-control-sm" placeholder="0" value="" onkeypress="return onlyDecimalKey(event)" type="text" /></td>
                                <td>
                                    <div class=" select-container">
                                            <select class="item-payunit form-control form-control-sm"  data-performance='${data.performance}'>
                                                <option value="">@ViewLocalizer["Choose unit"]</option>
                                            `
                                        for (var i = 0; i < data.items.length; i++) {
                                            var item = data.items[i];
                                            html += `<option value="${item.id}" data-id="${item.number}" data-cost="${item.cost}">${item.name}</option>`;
                                        }
                                        html += `	</select>
                                    </div>
                                </td>
                                <td><input class="item-price form-control form-control-sm" placeholder="0" value="" readonly type="text" /></td>
                                    <td><label class="item-subtotal"></lable></td>
                                <td>
                                    <a class="delete-item"><img src="/vendor/img/icons/delete.svg" alt="svg"></a>
                                </td>
                            </tr>
                                `;
                    $("#item-list").append(html);
                    $("#listarticle").modal("hide");
                    UpdateItems();
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
            }
        });
    }

    // add item
    function SelectSubRecipe(article) {
        if (!article.isActive) {
            toastr.error("@ViewLocalizer["The subrecipe is inactive."]", {})
            return;
        }

        $.ajax({
            url: "/Inventory/GetSubRecipe?subRecipeID=" + article.id,
            type: "GET",
            success: function (data, textStatus, jqXHR) {
                if (data) {
                    var html = `
                                <tr class="article-item" data-id="${data.id}" data-article='' data-itemid="">
                                    <td>
                                        ${data.name}
                                    </td>
                                    <td>@ViewLocalizer["Sub Recipe"]</td>
                                    <td></td>
                                    <td></td>
                                    <td>
                                        <input class="item-qty form-control form-control-sm" placeholder="0" value="" onkeypress="return onlyDecimalKey(event)" type="text" /></td>
                                    <td>
                                        <div class=" select-container">
                                                <select class="item-payunit form-control form-control-sm">
                                                    <option value="">@ViewLocalizer["Choose unit"]</option>
                                                `
                                        for (var i = 0; i < data.itemUnits.length; i++) {
                                            var item = data.itemUnits[i];
                                            html += `<option value="${item.id}" data-id="${item.number}" data-cost="${item.cost}">${item.name}</option>`;
                                        }
                                        html += `	</select>
                                        </div>
                                    </td>
                                    <td><input class="item-price form-control form-control-sm" placeholder="0" value="" readonly type="text" /></td>
                                        <td><label class="item-subtotal"></lable></td>
                                    <td>
                                        <a class="delete-item"><img src="/vendor/img/icons/delete.svg" alt="svg"></a>
                                    </td>
                                </tr>
                                    `;
                    $("#item-list").append(html);
                    $("#listsubrecipe").modal("hide");
                    UpdateItems();
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
            }
        });
    }

    function UpdateItems() {
        var allSubTotal = 0;
        var allTotal = 0;
        var allTax = 0;
        var allDiscount = 0;
        $("#item-list tr").each(function (i, e) {
            var qty = parseFloat($(this).find(".item-qty").val());
            if (!qty) qty = "";
            $(this).find(".item-qty").val(qty.toFixed(2));

            var unitCost = parseFloatCorrect($(this).find(".item-payunit option:selected").data("cost"));
            if (!unitCost) unitCost = 0.00;

            var performance = parseFloatCorrect($(this).find(".item-payunit").data("performance"));
            if (!performance) performance = 100;
            $(this).find(".item-price").val(unitCost);

            var itemPrice = parseFloatCorrect($(this).find(".item-price").val());
           
            if (itemPrice > 0)
            {
                itemPrice = itemPrice / performance * 100;
                $(this).find(".item-price").val(itemPrice.toFixed(4));
                var subTotal = qty * itemPrice;
                $(this).find(".item-subtotal").text(subTotal.toFixed(4));
                allSubTotal += subTotal;
            }
        });

        $("#po-total").text("$ " + allSubTotal.toFixed(4));
        if ($("#unit-body tr").length > 0 )
            $("#unit-body tr").first().find(".unit-cost").val(allSubTotal.toFixed(4))

        UpdateItemUnitCosts();
    }

    $("#print-label").click(function () {
        var barcode = $(this).data("barcode");
        if (barcode) {

            $("#printlabelmodal").modal("show");
        }
        else {
            $.ajax({
                url: "/Inventory/GenerateSubrecipeBarcode?subRecipeID=" + @ViewBag.SubRecipeID,
                type: "POST",
                success: function (data, textStatus, jqXHR) {
                    if (data.status == 0) {
                        $("#subrecipe-barcode").val(data.barcode);
                        $("#print-label").text("Print Label");
                        $("#print-label").data("barcode", data.barcode);
                    }
                    else {
                        toastr.error("@ViewLocalizer["Failed to create the barcode."]", {})
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
                }
            });
        }
    });

    $("#print-label-submit").click(function () {
        var data = {
            ProductID: @ViewBag.SubRecipeID,
            Dimension: $("#label-dimension").val(),
            PackingDate: $("#label-date").val(),
            ExpireDate: $("#label-expire-date").val(),
            Copies: parseInt($("#label-copies").val())
        }

        $.ajax({
            url: "/Inventory/PrintSubRecipeLabel",
            type: "POST",
            data: data,
            success: function (data, textStatus, jqXHR) {
                if (data.status == 0) {
                    window.open(data.label, '_blank');
                }
                else {
                    toastr.error("@ViewLocalizer["Failed to print the label."]", {})
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
            }
        });
    })


    $("#print-recipe").click(function () {
        var data = {
            ProductID: @ViewBag.SubRecipeID,
           
        }

        $.ajax({
            url: "/Inventory/PrintSubRecipeItems",
            type: "POST",
            data: data,
            success: function (data, textStatus, jqXHR) {
                if (data.status == 0) {
                    window.open(data.label, '_blank');
                }
                else {
                    toastr.error("@ViewLocalizer["Failed to print the items."]", {})
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
            }
        });
    })


    $("#calculate-minmax").click(function () {

        $.ajax({
            url: "/Inventory/CalculateSubRecipeMinMax?subrecipeId=@ViewBag.SubRecipeID",
            type: "POST",
            success: function (data, textStatus, jqXHR) {
                if (data.status == 0) {
                    $("#article-min").val(data.min);
                    $("#article-max").val(data.max);
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
            }
        });
    });
</script>