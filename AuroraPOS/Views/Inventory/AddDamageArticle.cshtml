@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    
    var damageStatus = (DamageArticleStatus)ViewBag.Status;
}

<div class="container-xxl flex-grow-1 container-p-y">
    <div class="card">
        <div class="card-body">
            <div class="page-header">
                <div class="page-title">
                    <h4>@ViewLocalizer["Create damage"]</h4>
                    <h6>@ViewLocalizer["Add/Update damage"]</h6>
                </div>

                <div class="page-btn">
                    <h5 id="production-id" data-id="@ViewBag.DamageArticleID"></h5>

                    @if (damageStatus == DamageArticleStatus.Pending)
                    {
                        <span class='badges bg-lightyellow'>@ViewLocalizer["Pending"]</span>
                    }
                    else if (damageStatus == DamageArticleStatus.Cancelled)
                    {
                        <span class='badges bg-lightred'>@ViewLocalizer["Cancelled"]</span>
                    }
                    else if (damageStatus == DamageArticleStatus.Confirmed)
                    {
                        <span class='badges bg-lightgreen'>@ViewLocalizer["Confirmed"]</span>
                    }
                </div>
            </div>
            <div class="row" data-articleid="0">
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <div class="col">
                            <label class="form-label">@ViewLocalizer["Warehouse"]</label>
                            <div class="d-flex justify-content-between search-id-group" style="gap: 10px">
                                <select id="damage-warehouse" class="select">
                                </select>
                                <div class="ml-5">
                                    <a id="add-warehouse-modal" href="javascript:void(0);" class="btn btn-primary waves-effect waves-light"> <img src="/vendor/img/icons/plus1.svg" alt="img"></a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label class="form-label">@ViewLocalizer["Date"] </label>
                        <div style="display: flex; flex-direction: row; align-items: center; gap: 2px;">
                            <input id="damage-date" type="text" placeholder="DD-MM-YYYY" value="@ViewBag.DamageDate" class="datetimepicker form-control">
                            <div class="addonset">
                                <img src="/vendor/img/icons/calendars.svg" alt="img" width="20">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-2 col-sm-6 col-12">
                    <div class="form-group">
                        <label class="form-label">@ViewLocalizer["Type"]</label>
                        <h6 id="damage-type" disabled="" class="text-info pt-2"></h6>
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <div class="col">
                            <label class="form-label">@ViewLocalizer["Article or Sub Recipe"]</label>
                            <div class="d-flex justify-content-between search-id-group" style="gap: 10px">
                                <input id="damage-article" disabled value="" type="text" class="form-control">
                                <div class="ml-5">
                                    <a id="add-article-modal" href="javascript:void(0);" class="btn btn-primary waves-effect waves-light"> <img src="/vendor/img/icons/plus1.svg" alt="img"></a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @*  <div class="col-lg-2 col-sm-6 col-12">
                <div class="form-group">
                    <label>@ViewLocalizer["Stock Qty"]</label>
                    <input id="damage-stockqty" onkeypress="return onlyDecimalKey(event)" disabled value="" type="text">
                </div>
            </div>*@
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label class="form-label">@ViewLocalizer["Qty"]</label>
                        <div style="display: flex; flex-direction: row; align-items: center; gap: 2px;">
                            <input id="damage-qty" onkeypress="return onlyDecimalKey(event)" value="" type="text" class="form-control">
                            <div class="addonset" style="opacity: 0%;">
                                <img src="/vendor/img/icons/calendars.svg" alt="img" width="20">
                            </div>
                        </div>
               @*          <label class="form-label">@ViewLocalizer["Qty"]</label>
                        <input id="damage-qty" onkeypress="return onlyDecimalKey(event)" value="" type="text" class="form-control"> *@
                    </div>
                </div>
                <div class="col-lg-2 col-sm-6 col-12">
                    <div class="form-group">
                        <label class="form-label">@ViewLocalizer["Unit"]</label>
                        <select id="damage-unit" class="select ">
                        </select>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-lg-12">
                    <div class="form-group">
                        <label class="form-label">@ViewLocalizer["Description"]</label>
                        <textarea id="damage-description" class="form-control"></textarea>
                    </div>
                </div>
            </div>
            <br />
            <!-- Media -->
            <div class=" mb-6">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0 card-title">@ViewLocalizer["Photos"]</h5>
                    <div href="javascript:void(0);" class="fw-medium">
                        <div class="del-unit text-danger">
                            <a class="del-photo " href="javascript:void(0);">
                                <img src="/vendor/img/icons/minus.svg" alt="img">
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card-body text-center justify-content-center align-items-center">
                    <div class="dropzone needsclick p-0 dz-clickable image-upload" id="dropzone-basic">
                        <input id="imgInpDamage" type="file" name="Files" accept="image/*" style="width: 100%;opacity: 0;height: 350px;position: relative;z-index: 9;cursor: pointer;">
                        <div class="needsclick image-uploads" style="text-align: center;width: 100%;padding: 20px 0;border-radius: 5px;position: absolute;top: 0;margin: 3rem 0 3rem;">
                            <div id="damage-photos" class="col-sm-12 col-12 d-flex">
                            </div>
                            <p class="h4 needsclick pt-3 mb-2">@ViewLocalizer["Drag and drop a file to upload"]</p>
                            <p class="h6 text-muted d-block fw-normal mb-2">@ViewLocalizer["o"]</p>
                            <span class="note needsclick btn btn-sm btn-label-primary waves-effect" id="btnBrowse">@ViewLocalizer["Buscar archivo"]</span>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /Media -->
@*             <div class="row">
                <div class="form-group px-3">
                    <label class="form-label">	@ViewLocalizer["Photos"]</label>
                    <div class="row">
                        <div id="damage-photos" class="col-sm-12 col-12 d-flex">
                        </div>
                        <div class="col-sm-12 col-12 image-upload" style="height: 100%">
                            <input class="form-control" id="imgInpDamage" type="file" name="Files" accept="image/*">
                            <div class="image-uploads" style="display:flex; flex-direction: column; align-items:center; justify-content: center;">
                                <img src="~/vendor/img/icons/upload.svg" alt="img">
                                <h4>@ViewLocalizer["Drag and drop a file to upload"]</h4>
                            </div>
                        </div>
                    </div>
                </div>
            </div> *@
            <div class="row py-3">
                <div class="col-lg-12 col-sm-12 col-12">
                    <div class="col mb-2">
                        <div class="d-flex justify-content-left search-id-group" style="gap: 10px; align-items:center">
                            <h6 class="text-left" style="margin: 0;">@ViewLocalizer["Accounting"]</h6>
                            <div class="add-icon">
                                <a href="javascript:void(0);" class="add-accounting-item btn btn-primary waves-effect waves-light" style="padding: 0; margin: 0;">
                                    <img src="/vendor/img/icons/plus1.svg" alt="img">
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="card-datatable table-responsive">
                        <table class="table reordertable">
                            <thead class="table-light">
                                <tr>
                                    <td>
                                        @ViewLocalizer["Name"]
                                    </td>
                                    <td>
                                        @ViewLocalizer["Type"]
                                    </td>
                                    <td>
                                        @ViewLocalizer["Number"]
                                    </td>
                                    <td>
                                        @ViewLocalizer["Action"]
                                    </td>
                            </thead>
                            <tbody id="accounting-list">
                            </tbody>
                        </table>
                    </div>
                </div>
                <br />
            </div>
            <div class="row pt-2">
                <div class="col-lg-12">

                    @if (damageStatus == DamageArticleStatus.Pending)
                    {
                        <a id="damage-submit" href="javascript:void(0);" class="btn btn-primary me-3 waves-effect waves-light">@ViewLocalizer["Save"]</a>
                        <a id="damage-cancel" href="javascript:void(0);" class="btn btn-default btn-danger me-2">@ViewLocalizer["Cancel"]</a>
                        <a id="damage-confirm" href="javascript:void(0);" class="btn btn-default btn-success bg-lightgreen">@ViewLocalizer["Confirm"]</a>
                    }
                    else if (damageStatus == DamageArticleStatus.Cancelled)
                    {
                        <a id="damage-submit" href="javascript:void(0);" class="btn btn-primary me-3 waves-effect waves-light">@ViewLocalizer["Save"]</a>
                    }
                    else if (damageStatus == DamageArticleStatus.None)
                    {
                        <a id="damage-submit" href="javascript:void(0);" class="btn btn-primary me-3 waves-effect waves-light">@ViewLocalizer["Save"]</a>
                        <a id="damage-cancel" href="javascript:void(0);" class="btn btn-default btn-danger me-2">@ViewLocalizer["Cancel"]</a>
                        <a id="damage-confirm" href="javascript:void(0);" class="btn btn-default btn-success bg-lightgreen">@ViewLocalizer["Confirm"]</a>
                    }

                    <a id="damage-return" href="/Inventory/DamageArticleList" class="btn btn-label-secondary waves-effect">@ViewLocalizer["Return"]</a>
                </div>
            </div>
        </div>
    </div>

</div>

<!-- Warehouse Modal -->
@{
    @await Component.InvokeAsync("AddWarehouse", new {  })
}


<!-- Article Modal -->
<div class="modal fade" id="listarticle" data-bs-backdrop="static" tabindex="-1" role="dialog" aria-hidden="true" data-id="">
    <div class="modal-dialog modal-lg modal-simple" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <div class="text-center mb-6">
                    <h4 class="mb-2">
                        @ViewLocalizer["Warehouse Stock List"]
                    </h4>
                </div>
                <div class="row">
                    <h4>Warehouse : <span id="selected-warehouse"></span></h4>
                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="card-datatable table-responsive w-100" style="max-height:400px;">
                            <table id="article-list" class="table">
                                <thead class="table-light">
                                    <tr>
                                        <th>@ViewLocalizer["Select"]</th>
                                        <th>@ViewLocalizer["Name"] </th>
                                        <th>@ViewLocalizer["Type"] </th>
                                        <th>@ViewLocalizer["Category"] </th>
                                        <th>@ViewLocalizer["Sub Category"]</th>
                                        <th>@ViewLocalizer["Qty"]</th>
                                        <th>@ViewLocalizer["Unit"]</th>
                                        

                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="cancel-article" type="button" class="btn btn-label-secondary waves-effect" data-bs-dismiss="modal">@ViewLocalizer["Cancel"]</button>
            </div>
        </div>
    </div>
</div>

@{
    @await Component.InvokeAsync("Accounting", new { })
}

<script>
    function UpdateDamageArticleStatus(status, id) {
        var data = {
            ID: id,
            Status: status
        }
        $.ajax({
            url: "/Inventory/UpdateDamageArticleStatus",
            type: "POST",
            data: JSON.stringify(data),
            contentType: 'application/json;',
            dataType: 'json',
            success: function (data, textStatus, jqXHR) {
                if (data.status == 0) {

                    location.replace("/Inventory/DamageArticleList");
                }
                else {
                    toastr.error("@ViewLocalizer["Failed to update the status."]", {})
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
            }
        });
    }
    
    function SubmitDamage(status)
    {
        var warehouseId = parseInt($("#damage-warehouse").val());
        if (!warehouseId)
        {
            return;
        }

        var articleId = parseInt( $("#damage-article").data("articleid"));
        if (!articleId){
            return;
        }

        var qty = parseFloatCorrect($("#damage-qty").val());
        var unitnum = parseInt( $("#damage-unit").val());
        var desciption = $("#damage-description").val();
        var date = $("#damage-date").val();
        var isArticle = $("#damage-article").data("type") == "article"
        var images = [];
        $("#damage-photos img").each(function(){
            images.push($(this).attr("src"));
        })

        var data = {
            ID : @ViewBag.DamageArticleID,
            WarehouseID : warehouseId,
            IsArticle: isArticle,
            ItemID: articleId,
            UnitNum: unitnum,
            Qty : qty,
            Description : desciption,
            DamageDate : date,
            Images: images
        }

        $.ajax({
            url: "/Inventory/EditDamageArticle",
            type: "POST",
            data: JSON.stringify(data),
            contentType: 'application/json;',
            dataType: 'json',
            success: function (data, textStatus, jqXHR) {
                if (data.status == 0) {
                    SaveAccountItems(9, data.id, function () {
                        UpdateDamageArticleStatus(status, data.id)
                    })

                   
                }

                else {
                    toastr.error("@ViewLocalizer["Failed to save the damage."]", {})
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
            }
        });

    }

    function MakeNonEditable() {
        $("body").find("input").prop("disabled", true);
        $("body").find("select").prop("disabled", true);
        $("body").find("a").addClass("a-disabled");
        $("#damage-description").prop("disabled", true);
        $("#damage-return").removeClass("a-disabled");
    }

    $("body").on("click", ".item-trash", function(){
        $(this).closest(".image-item").remove();
    });


    function ChangeArticles(){
        var warehouseId = $("#damage-warehouse").val();
        if (!warehouseId) return;

        var articletable = $("#article-list").DataTable({
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "ajax": {
                "url": "/Inventory/GetWarehouseArticleList?warehouseID=" + $("#damage-warehouse").val(),
                "type": "POST",
                "datatype": "json"
            },
            "destroy": true,
            'select': {
                'style': 'multi'
            },
            "pageLength": 10,
            "lengthMenu": [10, 25, 50],
            "order": [[1, 'asc']],
            "columns": [
                {
                    'data': 'action', 'name': 'action',
                    render: function (data, type, row) {
                        return "<a class='me-3 icons-box d-inline-block' href='javascript:void(0);' onclick='SelectItem(" + JSON.stringify(row) + ")'><span class='icon'><span class='fa fa-plus'></span></span></a></div>";
                    },
                },
                { "data": "name", "name": "name", "autoWidth": true },
                {
                    'data': 'action', 'name': 'action',
                    render: function (data, type, row) {
                        if (row.itemType == 0){
                            return "<span>Article</span>";
                        }
                        else{
                            return "<span>Sub Recipe</span>";
                        }
                    },
                },
                { "data": "category", "name": "category", "autoWidth": true },
                { "data": "subCategory", "name": "subCategory", "autoWidth": true },                
                { "data": "qty", "name": "qty", "autoWidth": true },
                { "data": "unitName", "name": "unitName", "autoWidth": true },
            ]
        });

    }

    $("#damage-warehouse").change(function(){

        $("#selected-warehouse").text($(this).find("option:selected").text());
        ChangeArticles();
    })

    $(document).ready(function(){
       
         $("#damage-submit").click(function(){
            SubmitDamage(1)
        });
        $("#damage-cancel").click(function () {
            SubmitDamage(2)
        });
        $("#damage-confirm").click(function () {
            SubmitDamage(3)
        });

        if (@ViewBag.DamageArticleID != 0) {
            $.ajax({
                url: "/Inventory/GetDamageArticle?damageArticleID=" + @ViewBag.DamageArticleID,
                type: "GET",
                success: function (data, textStatus, jqXHR) {
                    if (data) {
                        SelectWarehouse(data.warehouse);
                        if (data.itemType == 1) {
                            $("#damage-type").text("Sub Recipe");
                            SelectSubRecipe(data.subRecipe, data.unitNum);
                        }
                        else
                        { $("#damage-type").text("Article");
                            SelectArticle(data.article, data.unitNum);
                        }

                        $("#damage-qty").val(data.qty);
                        $("#damage-description").val(data.description);
                        $("#damage-photos").empty();
                        if (data.photos) {
                            
                            for(var i = 0; i < data.photos.length; i ++)
                            {
                                var img = data.photos[i];

                                var html = `
                                            <div class="image-item col-sm-2 col-6">
                                                <div class="productset flex-fill">
                                                    <div class="productsetimg">
                                                        <img style="max-height: 200px;" src="${img.src}" alt="img">
                                                    <h6><span class="item-trash text-sanger fa fa-trash"></span></h6>
                                                    </div>
                                                </div>
                                            </div>
                                    `;

                                $("#damage-photos").append(html);
                            }
                        }

                        if (data.status == 3)
                        {
                            MakeNonEditable();
                        }
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
                }
            });
            GetAccountItems(9, @ViewBag.DamageArticleID);
        }
        else {
            SelectWarehouse();
            GetAccountItems(9, 0);
        }
       
    });
    // images
    // image file upload image
    function readURL(input) {
        if (input.files) {
            var reader = new FileReader();

            reader.onload = function (e) {
                var html = `
                        <div class="image-item col-sm-2 col-6">
                            <div class="productset flex-fill">
                                <div class="productsetimg">
                                    <img style="max-height: 200px;" src="${e.target.result}" alt="img">
                                <h6><span class="item-trash text-sanger fa fa-trash"></span></h6>
                                </div>
                            </div>
                        </div>
                `;

                $("#damage-photos").append(html);
            }
            for(var i = 0; i < input.files.length; i++)
                reader.readAsDataURL(input.files[i]);
        }
    }

    $("#imgInpDamage").change(function () {
        readURL(this);
    });

    $("#add-article-modal").click(function () {
        $("#listarticle").modal("show");
    });

    $("#add-warehouse-modal").click(function () {
        $("#listwarehouse").modal("show");
    });

    $("#add-warehouse").click(function () {
        $("#ew-name").val("");
        $("#ew-email").val("");
        $("#ew-phone").val("");
        $("#ew-status").val("1").change();
        $(".warehouse-modal-title").html("@ViewLocalizer["Add Warehouse"]");
        $("#editwarehouse").data("id", 0);
        $("#editwarehouse").modal("show");
    });

    var warehousetable = $("#warehouse-list").DataTable({
        "processing": true, // for show progress bar
        "serverSide": true, // for process server side
        "filter": true, // this is for disable filter (search box)
        "orderMulti": false, // for disable multiple column at once
        "ajax": {
            "url": "/Inventory/GetWarehouseList",
            "type": "POST",
            "datatype": "json"
        },
        'select': {
            'style': 'multi'
        },
        "pageLength": 10,
        "lengthMenu": [10, 25, 50],
        "order": [[1, 'asc']],
        "columns": [
                {
                'data': 'action', 'name': 'action',
                render: function (data, type, row) {
                return "<div class='d-flex align-items-center'><a class='me-3 icons-box d-inline-block' href='javascript:void(0);' onclick='SelectWarehouse(" + JSON.stringify(row) + ")'><span class='icon'><span class='fa fa-check'></span></span></a><a class='icon me-3 d-inline-block' href='javascript:void(0);' onclick='EditWarehouse(" + JSON.stringify(row) + ")'><img src='/vendor/img/icons/edit.svg' alt='img'></a></div>";
                },
            },
            { "data": "warehouseName", "name": "warehouseName", "autoWidth": true },
            { "data": "email", "name": "email", "autoWidth": true },
            { "data": "phoneNumber", "name": "phoneNumber", "autoWidth": true },
            {
                'data': 'status', 'name': 'isActive',
                render: function (data, type, row) {
                    if (row.isActive) {
                        return "<span class='badges bg-lightgreen'>@ViewLocalizer["Active"]</span>";
                    }
                    else {
                        return "<span class='badges bg-lightred'>@ViewLocalizer["InActive"]</span>";
                    }
                },
                "autoWidth": true
            },

        ]
    });

   // warehosue functions
    function SelectWarehouse(warehouse) {
        if (warehouse && !warehouse.isActive) {
            toastr.error("@ViewLocalizer["This warehouse is inactive."]", {})
            return;
        }
        $.ajax({
            url: "/Inventory/GetAllActiveWarehouses",
            type: "POST",
            success: function (data, textStatus, jqXHR) {
                $("#damage-warehouse").empty();
                $("#damage-warehouse").append("<option value='' selected>@ViewLocalizer["Choose warehouse"]</option>")
                for (var i = 0; i < data.length; i++) {
                    var d = data[i];
                    $("#damage-warehouse").append("<option value='" + d.id + "'>" + d.warehouseName + "</option>")
                }
                $("#damage-warehouse").select2();
                if (warehouse) {
                    $("#damage-warehouse").val(warehouse.id).change();
                }
                else {
                    $("#damage-warehouse").val('').change();
                }

            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
            }
        });

        $("#listwarehouse").modal("hide");
    }

    $("#edit-warehouse").click(function () {
        var warehouseName = $("#ew-name").val();
        var email = $("#ew-email").val();
        var phone = $("#ew-phone").val();

        if (!warehouseName || !email || !phone) {
            toastr.warning("@ViewLocalizer["Please fill in the inputs."]", { showMethod: "fadeIn", hideMethod: "fadeOut", timeOut: 2e3 })
            return;
        }

        var active = $("#ew-status").val()
        var data = {
            ID: $("#editwarehouse").data("id"),
            WarehouseName: warehouseName,
            Email: email,
            PhoneNumber: phone,
            IsActive: active == "1"
        }

        $.ajax({
            url: "/Inventory/EditWarehouse",
            type: "POST",
            data: data,
            success: function (data, textStatus, jqXHR) {
                if (data.status == 0) {
                    $("#warehouse-list").DataTable().draw();
                    $("#editwarehouse").modal("hide");
                }
                else {
                    toastr.error("@ViewLocalizer["Failed to update the warehouse."]", {})
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error to process the request."]", {})
            }
        });
    });

    function EditWarehouse(w) {
        $("#ew-name").val(w.warehouseName);

        $("#ew-email").val(w.email);
        $("#ew-phone").val(w.phoneNumber);
        if (w.isActive) {
            $("#ew-status").val("1").change();
        }
        else {
            $("#ew-status").val("0").change();
        }
        $(".warehouse-modal-title").html("@ViewLocalizer["Edit Warehouse"]");
        $("#editwarehouse").data("id", w.id);
        $("#editwarehouse").modal("show");
    }

    function UpdateUnitQty()
    {
        var qty = parseFloatCorrect($("#damage-stockqty").data("firstqty"));

        var num = parseInt($("#damage-unit option:selected").data("id"));
        var changerate = 1;
        $("#damage-unit >option").each(function (index, element) {

            var rate = parseFloatCorrect($(this).data("rate"));
            var unitnum = $(this).data("id");
            changerate = changerate / rate;
            if (unitnum == num)
            {               
                var nqty = qty * changerate;
                $("#damage-stockqty").val(nqty);
            }         
        });
    }


    function SelectArticle(article, num)
    {
        $("#damage-article").val(article.name);
        $("#damage-article").data("articleid", article.id);
        $("#damage-article").data("type", "article");

        $.ajax({
            url: "/Inventory/GetArticle?articleID=" + article.id,
            type: "GET",
            success: function (data, textStatus, jqXHR) {
                if (data) {
                    $("#damage-unit").empty();
                    for (var i = 0; i < data.items.length; i++) {
                        var item = data.items[i];
                      if (item.number == num)
                        {
                            html = `<option selected value="${item.number}" data-id="${item.number}" data-rate="${item.rate}">${item.name}</option>`;
                            $("#damage-unit").append(html);
                        }
                        else{
                            html = `<option value="${item.number}" data-id="${item.number}" data-rate="${item.rate}">${item.name}</option>`;
                            $("#damage-unit").append(html);
                        }
                    }                   
                }                
            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
            }
        });

        $("#listarticle").modal("hide");
    }

    function SelectItem(item)
    {
        if (item.itemType == 0)
        {
            $("#damage-type").text("Article");
            SelectArticle(item)
        }
        else {
            $("#damage-type").text("Sub Recipe");
            SelectSubRecipe(item)
        }
    }
    
    function SelectSubRecipe(article, num)
    {
        $("#damage-article").val(article.name);
        $("#damage-article").data("articleid", article.id);
        $("#damage-article").data("type", "subrecipe");
        //$("#damage-stockqty").val(article.qty);
        //$("#damage-stockqty").data("firstqty", article.qty);

        $.ajax({
            url: "/Inventory/GetSubRecipe?subRecipeID=" + article.id,
            type: "GET",
            success: function (data, textStatus, jqXHR) {
                if (data) {
                    $("#damage-unit").empty();
                    for (var i = 0; i < data.itemUnits.length; i++) {
                        var item = data.itemUnits[i];
                        if (item.number == num)
                        {
                            html = `<option selected value="${item.number}" data-id="${item.number}" data-rate="${item.rate}">${item.name}</option>`;
                            $("#damage-unit").append(html);
                        }
                        else{
                            html = `<option value="${item.number}" data-id="${item.number}" data-rate="${item.rate}">${item.name}</option>`;
                            $("#damage-unit").append(html);
                        }
                     
                    }                   
                }                
            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error("@ViewLocalizer["There was an error in processing the request."]", {})
            }
        });

        $("#listarticle").modal("hide");
    }
</script>