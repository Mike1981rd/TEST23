<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add New Object" xml:space="preserve">
    <value>Agregar nuevo objeto</value>
  </data>
  <data name="Add/Edit Area" xml:space="preserve">
    <value>Añadir/Editar área</value>
  </data>
  <data name="Add/Edit Area Object" xml:space="preserve">
    <value>Añadir/Editar objeto de área</value>
  </data>
  <data name="Add/Update Table Map" xml:space="preserve">
    <value>Agregar/actualizar mapa de tablas</value>
  </data>
  <data name="Are you sure to delete the area?" xml:space="preserve">
    <value>¿Estás seguro de eliminar el área?</value>
  </data>
  <data name="Background" xml:space="preserve">
    <value>Fondo</value>
  </data>
  <data name="Background Color" xml:space="preserve">
    <value>Color de fondo</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="Chair" xml:space="preserve">
    <value>Silla</value>
  </data>
  <data name="Choose area" xml:space="preserve">
    <value>Elige zona</value>
  </data>
  <data name="Clone Selected Object" xml:space="preserve">
    <value>Clonar objeto seleccionado</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Cerrar</value>
  </data>
  <data name="Delete Object" xml:space="preserve">
    <value>Eliminar objeto</value>
  </data>
  <data name="Drag and drop a file to upload" xml:space="preserve">
    <value>Arrastra y suelta un archivo para cargar</value>
  </data>
  <data name="Edit Selected Object" xml:space="preserve">
    <value>Editar objeto seleccionado</value>
  </data>
  <data name="Ellipse" xml:space="preserve">
    <value>Elipse</value>
  </data>
  <data name="Failed to add/update the area." xml:space="preserve">
    <value>No se pudo agregar/actualizar el área.</value>
  </data>
  <data name="Failed to add/update the object." xml:space="preserve">
    <value>No se pudo agregar/actualizar el objeto.</value>
  </data>
  <data name="Failed to delete the area." xml:space="preserve">
    <value>No se pudo eliminar el área.</value>
  </data>
  <data name="Failed to delete the object." xml:space="preserve">
    <value>No se pudo eliminar el objeto.</value>
  </data>
  <data name="HEIGHT" xml:space="preserve">
    <value>Altura</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Imagen</value>
  </data>
  <data name="NAME" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="Please input the name." xml:space="preserve">
    <value>Por favor ingrese el nombre.</value>
  </data>
  <data name="Please input the width and height of object." xml:space="preserve">
    <value>Ingrese el ancho y la altura del objeto.</value>
  </data>
  <data name="POS" xml:space="preserve">
    <value>Posición</value>
  </data>
  <data name="Position X" xml:space="preserve">
    <value>Posición X</value>
  </data>
  <data name="Position Y" xml:space="preserve">
    <value>Posición Y</value>
  </data>
  <data name="Rectangle" xml:space="preserve">
    <value>Rectángulo</value>
  </data>
  <data name="Seat Count" xml:space="preserve">
    <value># de asientos</value>
  </data>
  <data name="Select Background Image" xml:space="preserve">
    <value>Seleccionar imagen de fondo</value>
  </data>
  <data name="Select Object Image" xml:space="preserve">
    <value>Seleccionar imagen de objeto</value>
  </data>
  <data name="Shape" xml:space="preserve">
    <value>Forma</value>
  </data>
  <data name="Static" xml:space="preserve">
    <value>Estático</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Guardar</value>
  </data>
  <data name="Table" xml:space="preserve">
    <value>Mesa</value>
  </data>
  <data name="Text Color" xml:space="preserve">
    <value>Color de texto</value>
  </data>
  <data name="There was an error in processing the request." xml:space="preserve">
    <value>Hubo un error al procesar la solicitud.</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Tipo</value>
  </data>
  <data name="WIDTH" xml:space="preserve">
    <value>Ancho</value>
  </data>
  <data name="Yes, delete it!" xml:space="preserve">
    <value>¡Sí, bórralo!</value>
  </data>
</root>